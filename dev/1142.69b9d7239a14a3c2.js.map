{"version":3,"file":"1142.69b9d7239a14a3c2.js","mappings":"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","names":["i0","categoria_r1","Nombre","_r2","i_r3","index","ctx_r3","removeInputField","AddGastosComponent_section_21_ion_button_8_Template","conceptoForm","length","AddGastosComponent","LoadingUtil","constructor","modalCtrl","actionSheet","formBuilder","service","loadingCtrl","toastCtrl","super","this","gasto","gastoDetalle","gastoDetalles","conceptos","categorias","date","Date","today","getTime","getTimezoneOffset","fields","group","categoria","Validators","required","nombre","fecha","monto","comentario","array","frmConceptos","mes","get","logForm","console","log","value","ngOnInit","showing","getSpreadSheetId","then","initCategorias","formattedDate","toJSON","split","patchValue","getCategoriaDef","subscribe","resp","dismiss","onChange","event","_categoria","detail","find","data","PersonaServicio","onChangeMonto","i","_monto","control","controls","at","onSave","_gasto","_this","_asyncToGenerator","create","header","buttons","text","icon","handler","save","role","present","Fecha","toLocaleString","timeZone","fillEvent","next","meesageToast","confirm","error","err","Categoria","Monto","Commentario","forEach","push","removeAt","addNewInputField","sumMonto","updateMountConcepto","newMonto","_message","presentToast","close","i1","i2","i3","i4","selectors","standalone","features","decls","vars","consts","template","rf","ctx","$event","AddGastosComponent_ion_select_option_11_Template","AddGastosComponent_section_21_Template","valid","_r1","ctx_r1","openModal","new","detail_r3","GastosPage_ion_item_group_10_ion_item_4_Template","item_r4","details","GastosPage","navCtrl","loadUtil","items","itemsBackup","getdata","user","localStorage","getItem","JSON","parse","ROLE","doRefresh","getFullDataDetail","target","complete","getItems","ev","val","trim","filter","item","toLowerCase","indexOf","_this2","modal","component","componentProps","onWillDismiss","Array","isArray","gastosDetalle$","GastosPage_ion_fab_5_Template","GastosPage_ion_item_group_10_Template","routes","path","GastosPageRoutingModule","RouterModule","forChild","GastosPageModule","IonicModule","CommonModule","FormsModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/components/add-gastos/add-gastos.component.html","./src/app/components/add-gastos/add-gastos.component.ts","./src/app/pages/gastos/gastos.page.html","./src/app/pages/gastos/gastos.page.ts","./src/app/pages/gastos/gastos-routing.module.ts","./src/app/pages/gastos/gastos.module.ts"],"sourcesContent":["<ion-header>\n\t<ion-toolbar>\n\t\t<ion-title>Agregar Gastos</ion-title>\n\t\t<ion-buttons slot=\"start\">\n\t\t\t<ion-button ion-button (click)=\"close()\">\n\t\t\t\t<ion-icon name=\"close\"></ion-icon>\n\t\t\t</ion-button>\n\t\t</ion-buttons>\n\t</ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\t<form [formGroup]=\"fields\" (ngSubmit)=\"onSave(fields.value)\">\n\t\t<ion-item>\n\t\t\t<ion-select label=\"Categoria\" labelPlacement=\"floating\" interface=\"popover\" (ionChange)=\"onChange($event)\"\n\t\t\t\tformControlName=\"categoria\" placeholder=\"Seleciona categoria\">\n\t\t\t\t<ion-select-option *ngFor=\"let categoria of categorias\" [value]=\"categoria\">{{ categoria.Nombre\n\t\t\t\t\t}}\n\t\t\t\t</ion-select-option>\n\t\t\t</ion-select>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Concepto\" labelPlacement=\"floating\" type=\"text\" formControlName=\"nombre\"\n\t\t\t\tplaceholder=\"Nombre o Concepto\">\n\t\t\t</ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<!-- <ion-datetime displayFormat=\"DD/MMM/YYYY\" formControlName=\"fecha\"></ion-datetime> -->\n\t\t\t<ion-input label=\"Fecha\" labelPlacement=\"floating\" id=\"fecha\" type=\"date\" formControlName=\"fecha\"></ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Monto\" labelPlacement=\"floating\" type=\"number\" formControlName=\"monto\" (ionChange)=\"onChangeMonto($event, 0)\"></ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-textarea label=\"Comentario\" labelPlacement=\"floating\" formControlName=\"comentario\" placeholder=\"comentario\">\n\t\t\t</ion-textarea>\n\t\t</ion-item>\n\t\t<!-- Detail -->\n\t\t<div formArrayName=\"conceptos\" margin-bottom>\n\t\t\t<section *ngFor=\"let control of conceptoForm.controls; let i = index\" [formGroupName]=\"i\" >\n\t\t\t\t<ion-item-group>\n\t\t\t\t\t<ion-item-divider color=\"light\">Conceptos #{{ i + 1 }}</ion-item-divider>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-input label=\"Mes:\" labelPlacement=\"floating\" id=\"mes\" type=\"date\" maxlength=\"50\" formControlName=\"mes\"></ion-input>\n\t\t\t\t\t</ion-item>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-input label=\"Monto:\" labelPlacement=\"floating\"  id=\"monto\" type=\"number\" maxlength=\"50\" formControlName=\"monto\"></ion-input>\n\t\t\t\t\t</ion-item>\n\t\t\t\t\t<!-- Allow generated input field to be removed -->\n\t\t\t\t\t<ion-button size=\"small\" fill=\"clear\" color=\"danger\"\t*ngIf=\"conceptoForm.length > 1\"\n\t\t\t\t\t\t(click)=\"removeInputField(i)\">\n\t\t\t\t\t\t<ion-icon slot=\"start\" name=\"close\"></ion-icon>\n\t\t\t\t\t\teliminar\n\t\t\t\t\t</ion-button>\n\t\t\t\t</ion-item-group>\n\t\t\t</section>\n\t\t</div>\n\t\t<!-- Allow new input field to be generated/added -->\n\t\t<ion-button size=\"small\" fill=\"clear\" color=\"primary\"\n\t\t\t(click)=\"addNewInputField()\">\n\t\t\t<ion-icon slot=\"start\" name=\"add\"></ion-icon>\n\t\t\tnuevo concepto\n\t\t\t</ion-button>\n\t\t<ion-button type=\"submit\" expand=\"block\" [disabled]=\"!fields.valid\">Agregar</ion-button>\n\t</form>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ModalController,\n  LoadingController,\n  ActionSheetController,\n} from '@ionic/angular';\nimport { CategoriaDef, Concepto, Gastos, GastosDetalle } from '../../interface/gastos';\nimport { GastosService } from '../../service/gastos.service';\nimport { LoadingUtil } from '../../utils/loadingUtil';\nimport { ToastUtil } from 'src/app/utils/toastUtil';\n\n@Component({\n  selector: 'app-add-gastos',\n  templateUrl: 'add-gastos.component.html',\n  styleUrls: ['add-gastos.component.css'],\n  standalone: false,\n})\nexport class AddGastosComponent extends LoadingUtil implements OnInit {\n  gasto: Gastos = {};\n  gastoDetalle: GastosDetalle = {};\n  gastoDetalles: GastosDetalle [] = [];\n  conceptos: Concepto[] = [];\n  categorias: CategoriaDef[] = [];\n  date = new Date(); // Or the date you'd like converted.\n  today = new Date(\n    this.date.getTime() - this.date.getTimezoneOffset() * 60000\n  );\n\n  public fields: FormGroup;\n\n  constructor(\n    public modalCtrl: ModalController,\n    private actionSheet: ActionSheetController,\n    private formBuilder: FormBuilder,\n    private service: GastosService,\n    loadingCtrl: LoadingController,\n    private toastCtrl: ToastUtil\n  ) {\n    super(loadingCtrl);\n    this.fields = this.formBuilder.group({\n      categoria: ['', Validators.required],\n      nombre: ['', Validators.required],\n      fecha: ['', Validators.required],\n      monto: ['', Validators.required],\n      comentario: [''],\n      conceptos: this.formBuilder.array([this.frmConceptos()])\n    });\n  }\n\n  frmConceptos(): FormGroup {\n    return this.formBuilder.group({\n      // concepto: ['', Validators.required],\n      mes: ['', Validators.required],\n      monto: ['', Validators.required]\n    });\n  }\n\n  get conceptoForm() {\n    return this.fields.get('conceptos') as FormArray;\n  }\n\n  logForm() {\n    console.log(this.fields.value);\n  }\n  ngOnInit() {\n    this.showing();\n    this.service.getSpreadSheetId().then(() => this.initCategorias());\n    const formattedDate = this.today.toJSON().split('T')[0];\n    this.fields.patchValue({ fecha: formattedDate });\n  }\n\n  initCategorias() {\n    this.service.getCategoriaDef().subscribe((resp: CategoriaDef[]) => {\n      this.categorias = resp || [];\n      this.dismiss();\n    });\n  }\n\n  onChange(event: CustomEvent) {\n    const _categoria: CategoriaDef = event.detail.value;\n    if (_categoria) {\n      let categoria: CategoriaDef;\n      categoria = this.categorias && this.categorias.find((data) => data.Nombre === _categoria.Nombre) || {} as CategoriaDef;\n      this.fields.patchValue({ nombre: categoria.PersonaServicio });\n    }\n  }\n\n    onChangeMonto(event: CustomEvent, i: number) {\n      const _monto: number = event.detail.value;\n      if (_monto) {\n        const control = <FormArray>this.fields.controls['conceptos'];\n        const newMonto = _monto - control.at(i).value.monto;\n        const formattedDate = this.today.toJSON().split('T')[0];\n        control.at(i).patchValue({\n          mes: formattedDate,\n          monto: _monto\n        });\n      }\n    }\n\n  async onSave(_gasto: any) {\n    const actionSheet = await this.actionSheet.create({\n      header: '¿Desea guardar el gasto?',\n      buttons: [\n        {\n          text: 'Guardar',\n          icon: 'save',\n          handler: () => {\n            this.save(_gasto);\n          },\n        },\n        {\n          text: 'Cancelar',\n          icon: 'close',\n          role: 'cancel',\n        },\n      ],\n  });\n    await actionSheet.present();\n}\n\n  save(_gasto: any) {\n    let fecha = new Date(this.gasto.Fecha || this.today);\n    this.gasto.Fecha = fecha.toLocaleString('es-MX', {\n      timeZone: 'America/Mexico_City'\n    });\n    this.fillEvent(_gasto);\n    this.service.save(this.gasto, this.gastoDetalles).subscribe({\n      next: (resp) => {\n        this.meesageToast('Se guardo exitosamente');\n        this.dismiss();\n        this.confirm(this.gastoDetalles);\n      },\n      error: (err) => {\n        this.meesageToast('No se pudo guardar el dato');\n        console.log('Error: ', err);\n        this.dismiss();\n      }\n    });\n    this.showing();\n  }\n\n    fillEvent(_gasto: any) {\n      // console.log(\"fillEvent\", _gasto);\n      this.gasto.Categoria = _gasto.categoria.Nombre;\n      this.gasto.Fecha = _gasto.fecha;\n      this.gasto.Nombre = _gasto.nombre;\n      this.gasto.Monto = _gasto.monto;\n      this.gasto.Commentario = _gasto.comentario;\n      // console.log(\"this.gastos\", this.gastos);\n      var conceptos = _gasto.conceptos;\n          this.gastoDetalles = [];\n          if (conceptos) {\n            conceptos.forEach((data: Concepto) => {\n            var detail: GastosDetalle = {};\n            detail.Categoria = _gasto.categoria.Nombre;\n            detail.Fecha = data.mes;\n            detail.Nombre = _gasto.nombre;\n            detail.Monto = data.monto;\n            detail.Commentario = _gasto.comentario;\n              //console.log(\"detail\", detail);\n              this.gastoDetalles.push(detail);\n            });\n          }\n    }\n\n    removeInputField(i: number): void {\n      const control = <FormArray>this.fields.controls['conceptos'];\n      control.removeAt(i);\n    }\n\n    addNewInputField(): void {\n      const control = <FormArray>this.fields.controls['conceptos'];\n      let sumMonto: number = 0;\n      control.controls.forEach((data: any) => {\n        sumMonto += data.value.monto;\n      });\n      control.push(this.frmConceptos());\n      this.updateMountConcepto(sumMonto);\n    }\n\n    updateMountConcepto(_monto: number = 0) {\n      const monto = this.fields.value.monto;\n      const newMonto = monto - _monto;\n      const control = <FormArray>this.fields.controls['conceptos'];\n      const formattedDate = this.today.toJSON().split('T')[0];\n      control.at(control.length -1 ).patchValue({\n        mes: formattedDate,\n        monto: newMonto\n      });\n    }\n\n\n  meesageToast(_message: string) {\n    this.toastCtrl.presentToast(_message, 'top');\n  }\n\n  close() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n  confirm(gasto : any) {\n    this.modalCtrl.dismiss(gasto, 'confirm');\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-title>\n      Gastos\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content class=\"ion-padding\">\n\t<!-- Botton Add -->\n\t<ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\" *ngIf=\"role != 'reader'\">\n\t\t<ion-fab-button (click)=\"openModal({new: 'Add'})\">\n\t\t  <ion-icon name=\"add\"></ion-icon>\n\t\t</ion-fab-button>\n\t  </ion-fab>\n\t<ion-list-header>\n\t\t<ion-searchbar (ionInput)=\"getItems($event)\"></ion-searchbar>\n\t</ion-list-header>\n\t<ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\n\t\t<ion-refresher-content pullingIcon=\"arrow-dropdown\" pullingText=\"Pull to refresh\" refreshingSpinner=\"circles\"\n\t\t\trefreshingText=\"Refrescando...\"></ion-refresher-content>\n\t</ion-refresher>\n\t<ion-item-group *ngFor=\"let item of items | groupBy:'Fecha':'reverse'\">\n\t\t<ion-item-divider color=\"light\">\n\t\t\t{{  item.header | date: 'MMM.dd.yy' }}\n\t\t</ion-item-divider>\n\t\t<ion-item *ngFor=\"let detail of item.details\">\n\t\t\t<ion-label>\n\t\t\t\t<div ion-text color=\"primary\">\n\t\t\t\t\t<h3>{{ detail.Nombre }}</h3>\n\t\t\t\t</div>\n\t\t\t\t<p>{{ detail.Categoria }} -- {{ detail.Monto | currency }} </p>\n\t\t\t</ion-label>\n\t\t</ion-item>\n\t</ion-item-group>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ModalController,\n  NavController\n} from '@ionic/angular';\nimport { AddGastosComponent } from '../../components/add-gastos/add-gastos.component';\nimport { GastosService } from '../../service/gastos.service';\nimport { LoadingUtil } from '../../utils/loadingUtil';\nimport { GastosDetalle } from '../../interface/gastos';\n\n@Component({\n  selector: 'app-gastos',\n  templateUrl: 'gastos.page.html',\n  styleUrls: ['gastos.page.scss'],\n  standalone: false,\n})\nexport class GastosPage implements OnInit {\n  items: GastosDetalle[] = [];\n  itemsBackup: GastosDetalle[] = [];\n  role: string = '';\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navCtrl: NavController,\n    private service: GastosService,\n    private loadUtil: LoadingUtil\n  ) {\n  }\n\n  ngOnInit() {\n    this.service.getSpreadSheetId().then(() => this.getdata());\n    const user = localStorage.getItem('user');\n    this.role = user ? JSON.parse(user).ROLE : '';\n  }\n\n  doRefresh(event: CustomEvent) {\n    this.service.getFullDataDetail().subscribe((data: any[]) => {\n      this.items = [...data]; // Fuerza nueva referencia para refrescar la vista\n      this.itemsBackup = [...this.items];\n      (event.target as HTMLIonRefresherElement).complete();\n    });\n  }\n\n  async getdata() {\n    await this.service.getFullDataDetail().subscribe((data: GastosDetalle[]) => {\n      this.items = [...data]; // Fuerza nueva referencia para refrescar la vista\n      this.itemsBackup = [...this.items];\n      this.loadUtil.dismiss();\n    });\n    this.loadUtil.showing();\n  }\n\n  getItems(ev: any) {\n    // Reset items back to all of the items\n    // console.log(this.items);\n    this.items = this.itemsBackup;\n    // console.log(\"this.items\", this.items);\n    // set val to the value of the searchbar\n    const val = ev.target.value;\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.items = this.items.filter(item => {\n        return (\n          item.Categoria && item.Categoria.toLowerCase().indexOf(val.toLowerCase()) > -1 ||\n          item.Nombre && item.Nombre.toLowerCase().indexOf(val.toLowerCase()) > -1\n        );\n      });\n    }\n  }\n\n  async openModal(detail: any) {\n    const modal = await this.modalCtrl.create({\n      component: AddGastosComponent,\n      componentProps: { detail : detail.detail }\n    });\n    modal.present();\n    const { data, role } = await modal.onWillDismiss();\n    if (role === 'confirm' && data && Array.isArray(data)) {\n      this.items.push(...data);\n      this.items = [...this.items]; // Fuerza refresco de la vista\n      this.itemsBackup = [...this.items];\n      this.service.gastosDetalle$.next(this.items); // Actualiza el observable compartido\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GastosPage } from './gastos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GastosPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GastosPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GastosPage } from './gastos.page';\n\nimport { GastosPageRoutingModule } from './gastos-routing.module';\nimport { GroupByPipe } from 'src/app/pipes/group-by.pipe';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    GastosPageRoutingModule,\n    GroupByPipe\n  ],\n  declarations: [GastosPage]\n})\nexport class GastosPageModule {}\n"],"x_google_ignoreList":[]}