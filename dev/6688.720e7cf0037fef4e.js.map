{"version":3,"file":"6688.720e7cf0037fef4e.js","mappings":"4MAYM,MAAOA,EAIXC,YAAoBC,EAAkCC,EAC5CC,EAA8BC,GADpBC,KAAAJ,cAAkCI,KAAAH,SAC5CG,KAAAF,UAA8BE,KAAAD,QAEtCC,KAAKC,OAASD,KAAKJ,YAAYM,MAAM,CACnCC,OAAQ,CAAC,GAAIC,KAAWC,UACxBC,SAAU,CAAC,GAAIF,KAAWC,WAE9B,CAEAE,WACEP,KAAKF,QAAQU,mBAAmBC,KAAMC,IACpCC,QAAQC,IAAIF,EAAI,EAEpB,CAEAG,QAAQC,GAAkB,IAAAC,EAAAf,KACxBW,QAAQC,IAAIZ,KAAKC,OAAOe,OACpBhB,KAAKC,OAAOgB,OACdjB,KAAKF,QAAQoB,SAASlB,KAAKC,OAAOe,MAAMb,OAAQH,KAAKC,OAAOe,MAAMV,UAC/Da,UAAS,eAAAC,KAAAC,KAAC,UAAOX,GACZA,EACFK,EAAKlB,OAAOyB,SAAS,CAAC,2BAGDP,EAAKhB,MAAMwB,OAAO,CACrCC,QAAS,qCACTC,QAAS,CAAC,SAECC,SAEjB,GAAC,gBAAAC,GAAA,OAAAP,EAAAQ,MAAA5B,KAAA6B,UAAA,EAXS,GAahB,KApCWnC,0CAASoC,MAAAC,MAAAD,MAAAE,MAAAF,MAAAG,KAAAH,MAAAI,MAAA,0BAATxC,EAASyC,UAAA,gBAAAC,YAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,yTAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICIlBX,MAFJ,iBAEIA,CAF6B,gBAE7BA,CADW,eAETA,MAAA,yBAQNA,YAKMA,MAHN,gBAGMA,CAHO,aAGPA,CAFM,oBAENA,CADe,oBACCA,MAAA,yBAClBA,UAEEA,MADF,qBACEA,CADgB,aACWA,MAAA,6BAAYY,EAAA7B,QAAA6B,EAAAzC,OAAAe,MAAqB,GAC1Dc,MAAA,eACEA,MAAA,kBACFA,QACAA,MAAA,eACEA,MAAA,kBACFA,QACAA,MAAA,mBAAoEA,MAAA,wBAI5EA,uBA9BYA,MAAA,kBAmBAA,MAAA,IAAAA,MAAA,YAAAY,EAAAzC,QAOqC6B,MAAA,GAAAA,MAAA,YAAAY,EAAAzC,OAAAgB,oICnCjD,MAAM0B,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWnD,IAQT,MAAOoD,qDAAsB,yBAAtBA,gCAHDC,KAAaC,SAASL,GACtBI,QCMN,MAAOE,+CAAe,yBAAfA,gCARTC,KACAC,KACAC,KACAC,KACAP","names":["LoginPage","constructor","formBuilder","router","service","alert","this","fields","group","nombre","Validators","required","password","ngOnInit","getSpreadSheetId","then","data","console","log","onLogin","event","_this","value","valid","getUsers","subscribe","_ref","_asyncToGenerator","navigate","create","message","buttons","present","_x","apply","arguments","i0","i1","i2","i3","i4","selectors","standalone","decls","vars","consts","template","rf","ctx","routes","path","component","LoginPageRoutingModule","RouterModule","forChild","LoginPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  standalone: false,\n})\nexport class LoginPage implements OnInit {\n\n  public fields: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private service: UserService, private alert: AlertController\n  ) {\n    this.fields = this.formBuilder.group({\n      nombre: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.service.getSpreadSheetId().then((data) => {\n      console.log(data);\n    });\n  }\n\n  onLogin(event: CustomEvent) {\n    console.log(this.fields.value);\n    if (this.fields.valid) {\n      this.service.getUsers(this.fields.value.nombre, this.fields.value.password)\n        .subscribe(async (data) => {\n          if (data) {\n            this.router.navigate(['/tabs/home']);\n          }\n          else {\n            const alerta = await this.alert.create({\n              message: 'Usuario o contraseña incorrecta',\n              buttons: ['OK']\n            });\n            await alerta.present();\n          }\n        });\n    }\n  }\n\n}\n","<!-- <ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>login</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">login</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content> -->\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Iniciar sesión\n    </ion-title>\n    <!-- <ion-buttons slot=\"start\">\n\t\t\t<ion-button (click)=\"close()\">\n\t\t\t<ion-icon name=\"close\" ></ion-icon>\n\t\t\t</ion-button>\n\t\t</ion-buttons> -->\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-card>\n    <ion-card-header>\n      <ion-card-title>Inicio de sesión</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <form [formGroup]=\"fields\" (ngSubmit)=\"onLogin(fields.value)\">\n        <ion-item>\n          <ion-input type=\"text\" label=\"nombre\" labelPlacenment=\"floating\" formControlName=\"nombre\" required></ion-input>\n        </ion-item>\n        <ion-item>\n          <ion-input type=\"password\" label=\"Contraseña\" labelPlacement=\"floating\" formControlName=\"password\" required></ion-input>\n        </ion-item>\n        <ion-button type=\"submit\" expand=\"block\" [disabled]=\"!fields.valid\">Iniciar sesión</ion-button>\n      </form>\n    </ion-card-content>\n  </ion-card>\n</ion-content>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n"],"x_google_ignoreList":[]}