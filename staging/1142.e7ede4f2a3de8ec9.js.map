{"version":3,"file":"1142.e7ede4f2a3de8ec9.js","mappings":"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","names":["i0","ctx_r0","userName","UserAvatarComponent","constructor","this","user","size","initials","ngOnInit","loadUserData","ngOnChanges","NOMBRE","getInitials","userData","localStorage","getItem","JSON","parse","name","words","trim","split","length","charAt","toUpperCase","getSizeClass","selectors","inputs","features","decls","vars","consts","template","rf","ctx","UserAvatarComponent_div_4_Template","CommonModule","i1","styles","categoria_r1","Nombre","_r2","i_r3","index","ctx_r3","removeInputField","AddGastosComponent_section_21_ion_button_11_Template","conceptoForm","AddGastosComponent","LoadingUtil","modalCtrl","actionSheet","formBuilder","service","loadingCtrl","toastCtrl","super","gasto","gastoDetalle","gastoDetalles","conceptos","categorias","date","Date","today","getTime","getTimezoneOffset","gastosConfirm","fields","group","categoria","Validators","required","nombre","fecha","monto","comentario","array","frmConceptos","mes","get","logForm","console","log","value","getSpreadSheetId","then","initCategorias","formattedDate","toJSON","patchValue","showing","getCategoriaDef","subscribe","resp","dismiss","onChange","event","_categoria","detail","find","data","PersonaServicio","onChangeMonto","i","_monto","control","controls","at","_comentario","onSave","_gasto","_this","_asyncToGenerator","create","header","buttons","text","icon","handler","save","role","present","Fecha","toLocaleString","timeZone","fillEvent","next","meesageToast","calOther","error","err","Categoria","Monto","Comentario","forEach","push","_gastosDetalle","_this2","reset","confirm","removeAt","addNewInputField","sumMonto","updateMountConcepto","newMonto","_message","presentToast","close","i2","i3","i4","standalone","$event","AddGastosComponent_ion_select_option_11_Template","AddGastosComponent_section_21_Template","valid","_r1","ctx_r1","openModal","new","detail_r3","GastosPage_ion_item_group_12_ion_item_4_Template","item_r4","details","GastosPage","navCtrl","loadUtil","items","itemsBackup","getdata","ROLE","doRefresh","getFullDataDetail","target","complete","getItems","ev","val","filter","item","toLowerCase","indexOf","modal","component","componentProps","onWillDismiss","Array","isArray","gastosDetalle$","GastosPage_ion_fab_7_Template","GastosPage_ion_item_group_12_Template","routes","path","GastosPageRoutingModule","RouterModule","forChild","GastosPageModule","IonicModule","FormsModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/components/user-avatar/user-avatar.component.html","./src/app/components/user-avatar/user-avatar.component.ts","./src/app/components/add-gastos/add-gastos.component.html","./src/app/components/add-gastos/add-gastos.component.ts","./src/app/pages/gastos/gastos.page.html","./src/app/pages/gastos/gastos.page.ts","./src/app/pages/gastos/gastos-routing.module.ts","./src/app/pages/gastos/gastos.module.ts"],"sourcesContent":["<div class=\"user-avatar-container\" [title]=\"userName\" [id]=\"'user-avatar-' + size\">\n  <div class=\"user-avatar\" [ngClass]=\"getSizeClass()\">\n    <span class=\"initials\">{{ initials }}</span>\n  </div>\n  <div class=\"user-tooltip\" *ngIf=\"userName\">\n    {{ userName }}\n  </div>\n</div>\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Usuario } from '../../interface/recibos';\n\n@Component({\n  selector: 'app-user-avatar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './user-avatar.component.html',\n  styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent implements OnInit, OnChanges {\n  @Input() user: Usuario | null = null;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  \n  initials: string = '';\n  userName: string = '';\n\n  ngOnInit() {\n    this.loadUserData();\n  }\n\n  ngOnChanges() {\n    this.loadUserData();\n  }\n\n  private loadUserData() {\n    if (this.user) {\n      this.userName = this.user.NOMBRE || '';\n      this.initials = this.getInitials(this.userName);\n    } else {\n      // Si no hay usuario pasado como input, intentar obtenerlo del localStorage\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        const user = JSON.parse(userData);\n        this.userName = user.NOMBRE || '';\n        this.initials = this.getInitials(this.userName);\n      } else {\n        this.userName = '';\n        this.initials = '';\n      }\n    }\n  }\n\n  private getInitials(name: string): string {\n    if (!name) return '';\n    \n    const words = name.trim().split(' ');\n    if (words.length === 1) {\n      return words[0].charAt(0).toUpperCase();\n    } else {\n      return (words[0].charAt(0) + words[words.length - 1].charAt(0)).toUpperCase();\n    }\n  }\n\n  getSizeClass(): string {\n    return `avatar-${this.size}`;\n  }\n}","<ion-header>\n\t<ion-toolbar>\n\t\t<ion-title>Agregar Gastos</ion-title>\n\t\t<ion-buttons slot=\"start\">\n\t\t\t<ion-button ion-button (click)=\"close()\">\n\t\t\t\t<ion-icon name=\"close\"></ion-icon>\n\t\t\t</ion-button>\n\t\t</ion-buttons>\n\t</ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\t<form [formGroup]=\"fields\" (ngSubmit)=\"onSave(fields.value)\">\n\t\t<ion-item>\n\t\t\t<ion-select label=\"Categoria\" labelPlacement=\"floating\" interface=\"popover\" (ionChange)=\"onChange($event)\"\n\t\t\t\tformControlName=\"categoria\" placeholder=\"Seleciona categoria\">\n\t\t\t\t<ion-select-option *ngFor=\"let categoria of categorias\" [value]=\"categoria\">{{ categoria.Nombre\n\t\t\t\t\t}}\n\t\t\t\t</ion-select-option>\n\t\t\t</ion-select>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Concepto\" labelPlacement=\"floating\" type=\"text\" formControlName=\"nombre\"\n\t\t\t\tplaceholder=\"Nombre o Concepto\">\n\t\t\t</ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<!-- <ion-datetime displayFormat=\"DD/MMM/YYYY\" formControlName=\"fecha\"></ion-datetime> -->\n\t\t\t<ion-input label=\"Fecha\" labelPlacement=\"floating\" id=\"fecha\" type=\"date\" formControlName=\"fecha\"></ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Monto\" labelPlacement=\"floating\" type=\"number\" formControlName=\"monto\" (ionChange)=\"onChangeMonto($event, 0)\"></ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-textarea label=\"Comentario\" labelPlacement=\"floating\" formControlName=\"comentario\" placeholder=\"comentario\">\n\t\t\t</ion-textarea>\n\t\t</ion-item>\n\t\t<!-- Detail -->\n\t\t<div formArrayName=\"conceptos\" margin-bottom>\n\t\t\t<section *ngFor=\"let control of conceptoForm.controls; let i = index\" [formGroupName]=\"i\" >\n\t\t\t\t<ion-item-group>\n\t\t\t\t\t<ion-item-divider color=\"light\">Conceptos #{{ i + 1 }}</ion-item-divider>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-input label=\"Mes:\" labelPlacement=\"floating\" id=\"mes\" type=\"date\" maxlength=\"50\" formControlName=\"mes\"></ion-input>\n\t\t\t\t\t</ion-item>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-input label=\"Monto:\" labelPlacement=\"floating\"  id=\"monto\" type=\"number\" maxlength=\"50\" formControlName=\"monto\"></ion-input>\n\t\t\t\t\t</ion-item>\n          <ion-item>\n          <ion-item>\n            <ion-textarea label=\"Comentario\" labelPlacement=\"floating\" formControlName=\"comentario\" placeholder=\"comentario\">\n            </ion-textarea>\n          </ion-item>\n        </ion-item>\n\t\t\t\t\t<!-- Allow generated input field to be removed -->\n\t\t\t\t\t<ion-button size=\"small\" fill=\"clear\" color=\"danger\"\t*ngIf=\"conceptoForm.length > 1\"\n\t\t\t\t\t\t(click)=\"removeInputField(i)\">\n\t\t\t\t\t\t<ion-icon slot=\"start\" name=\"close\"></ion-icon>\n\t\t\t\t\t\teliminar\n\t\t\t\t\t</ion-button>\n\t\t\t\t</ion-item-group>\n\t\t\t</section>\n\t\t</div>\n\t\t<!-- Allow new input field to be generated/added -->\n\t\t<ion-button size=\"small\" fill=\"clear\" color=\"primary\"\n\t\t\t(click)=\"addNewInputField()\">\n\t\t\t<ion-icon slot=\"start\" name=\"add\"></ion-icon>\n\t\t\tnuevo concepto\n\t\t\t</ion-button>\n\t\t<ion-button type=\"submit\" expand=\"block\" [disabled]=\"!fields.valid\">Agregar</ion-button>\n\t</form>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ModalController,\n  LoadingController,\n  ActionSheetController,\n} from '@ionic/angular';\nimport { CategoriaDef, Concepto, Gastos, GastosDetalle } from '../../interface/gastos';\nimport { GastosService } from '../../service/gastos.service';\nimport { LoadingUtil } from '../../utils/loadingUtil';\nimport { ToastUtil } from 'src/app/utils/toastUtil';\n\n@Component({\n  selector: 'app-add-gastos',\n  templateUrl: 'add-gastos.component.html',\n  styleUrls: ['add-gastos.component.css'],\n  standalone: false,\n})\nexport class AddGastosComponent extends LoadingUtil implements OnInit {\n  gasto: Gastos = {};\n  gastoDetalle: GastosDetalle = {};\n  gastoDetalles: GastosDetalle [] = [];\n  conceptos: Concepto[] = [];\n  categorias: CategoriaDef[] = [];\n  date = new Date(); // Or the date you'd like converted.\n  today = new Date(\n    this.date.getTime() - this.date.getTimezoneOffset() * 60000\n  );\n  gastosConfirm: GastosDetalle[] = [];\n\n  public fields: FormGroup;\n\n  constructor(\n    public modalCtrl: ModalController,\n    private actionSheet: ActionSheetController,\n    private formBuilder: FormBuilder,\n    private service: GastosService,\n    loadingCtrl: LoadingController,\n    private toastCtrl: ToastUtil\n  ) {\n    super(loadingCtrl);\n    this.fields = this.formBuilder.group({\n      categoria: ['', Validators.required],\n      nombre: ['', Validators.required],\n      fecha: ['', Validators.required],\n      monto: ['', Validators.required],\n      comentario: [''],\n      conceptos: this.formBuilder.array([this.frmConceptos()])\n    });\n  }\n\n  frmConceptos(): FormGroup {\n    return this.formBuilder.group({\n      // concepto: ['', Validators.required],\n      mes: ['', Validators.required],\n      monto: ['', Validators.required],\n      comentario: ['']\n    });\n  }\n\n  get conceptoForm() {\n    return this.fields.get('conceptos') as FormArray;\n  }\n\n  logForm() {\n    console.log(this.fields.value);\n  }\n  ngOnInit() {\n    this.service.getSpreadSheetId().then(() => this.initCategorias());\n    const formattedDate = this.today.toJSON().split('T')[0];\n    this.fields.patchValue({ fecha: formattedDate });\n  }\n\n  initCategorias() {\n    this.showing();\n    this.service.getCategoriaDef().subscribe((resp: CategoriaDef[]) => {\n      this.categorias = resp || [];\n      this.dismiss();\n    });\n  }\n\n  onChange(event: CustomEvent) {\n    const _categoria: CategoriaDef = event.detail.value;\n    if (_categoria) {\n      let categoria: CategoriaDef;\n      categoria = this.categorias && this.categorias.find((data) => data.Nombre === _categoria.Nombre) || {} as CategoriaDef;\n      this.fields.patchValue({ nombre: categoria.PersonaServicio });\n    }\n  }\n\n    onChangeMonto(event: CustomEvent, i: number) {\n      const _monto: number = event.detail.value;\n      if (_monto) {\n        const control = <FormArray>this.fields.controls['conceptos'];\n        const newMonto = _monto - control.at(i).value.monto;\n        // const formattedDate = this.today.toJSON().split('T')[0];\n        const formattedDate = this.fields.value.fecha;\n        const _comentario = this.fields.value.comentario;\n        control.at(i).patchValue({\n          mes: formattedDate,\n          monto: _monto,\n          comentario: _comentario\n        });\n      }\n    }\n\n  async onSave(_gasto: any) {\n    const actionSheet = await this.actionSheet.create({\n      header: '¿Desea guardar el gasto?',\n      buttons: [\n        {\n          text: 'Guardar',\n          icon: 'save',\n          handler: () => {\n            this.save(_gasto);\n          },\n        },\n        {\n          text: 'Cancelar',\n          icon: 'close',\n          role: 'cancel',\n        },\n      ],\n  });\n    await actionSheet.present();\n}\n\n  save(_gasto: any) {\n    let fecha = new Date(this.gasto.Fecha || this.today);\n    this.gasto.Fecha = fecha.toLocaleString('es-MX', {\n      timeZone: 'America/Mexico_City'\n    });\n    this.fillEvent(_gasto);\n    this.service.save(this.gasto, this.gastoDetalles).subscribe({\n      next: (resp) => {\n        this.meesageToast('Se guardo exitosamente');\n        this.dismiss();\n        // this.confirm(this.gastoDetalles);\n        this.calOther(this.gastoDetalles);\n      },\n      error: (err) => {\n        this.meesageToast('No se pudo guardar el dato');\n        console.log('Error: ', err);\n        this.dismiss();\n      }\n    });\n    this.showing();\n  }\n\n    fillEvent(_gasto: any) {\n      // console.log(\"fillEvent\", _gasto);\n      this.gasto.Categoria = _gasto.categoria.Nombre;\n      this.gasto.Fecha = _gasto.fecha;\n      this.gasto.Nombre = _gasto.nombre;\n      this.gasto.Monto = _gasto.monto;\n      this.gasto.Comentario = _gasto.comentario;\n      // console.log(\"this.gastos\", this.gastos);\n      var conceptos = _gasto.conceptos;\n          this.gastoDetalles = [];\n          if (conceptos) {\n            conceptos.forEach((data: Concepto) => {\n            var detail: GastosDetalle = {};\n            detail.Categoria = _gasto.categoria.Nombre;\n            detail.Fecha = data.mes;\n            detail.Nombre = _gasto.nombre;\n            detail.Monto = data.monto;\n            detail.Comentario = data.comentario;\n              //console.log(\"detail\", detail);\n              this.gastoDetalles.push(detail);\n            });\n          }\n    }\n\n\n    async calOther(_gastosDetalle: any) {\n      const actionSheet = await this.actionSheet.create({\n        header: '¿Desea agregar otro gasto ?',\n        buttons: [\n          {\n            text: 'Otro gasto',\n            icon: 'add-outline',\n            role: 'other',\n            handler: () => {\n              this.gastosConfirm.push(..._gastosDetalle);\n              this.fields.reset();\n              const formattedDate = this.today.toJSON().split('T')[0];\n              this.fields.patchValue({ fecha: formattedDate });\n            },\n          },\n          {\n            text: 'Salir',\n            icon: 'checkmark',\n            role: 'confirm',\n            handler: () => {\n              this.gastosConfirm.push(..._gastosDetalle);\n              this.confirm(this.gastosConfirm);\n            },\n          },\n        ],\n      });\n      await actionSheet.present();\n    }\n\n    removeInputField(i: number): void {\n      const control = <FormArray>this.fields.controls['conceptos'];\n      control.removeAt(i);\n    }\n\n    addNewInputField(): void {\n      const control = <FormArray>this.fields.controls['conceptos'];\n      let sumMonto: number = 0;\n      control.controls.forEach((data: any) => {\n        sumMonto += data.value.monto;\n      });\n      control.push(this.frmConceptos());\n      this.updateMountConcepto(sumMonto);\n    }\n\n    updateMountConcepto(_monto: number = 0) {\n      const monto = this.fields.value.monto;\n      const newMonto = monto - _monto;\n      const control = <FormArray>this.fields.controls['conceptos'];\n      const formattedDate = this.today.toJSON().split('T')[0];\n      control.at(control.length -1 ).patchValue({\n        mes: formattedDate,\n        monto: newMonto\n      });\n    }\n\n\n  meesageToast(_message: string) {\n    this.toastCtrl.presentToast(_message, 'top');\n  }\n\n  close() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n  confirm(gasto : any) {\n    this.modalCtrl.dismiss(gasto, 'confirm');\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-title>\n      Gastos\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <app-user-avatar id=\"user-avatar\" size=\"medium\"></app-user-avatar>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content class=\"ion-padding\">\n\t<!-- Botton Add -->\n\t<ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\" *ngIf=\"role != 'reader'\">\n\t\t<ion-fab-button id=\"add-gasto-fab-button\" (click)=\"openModal({new: 'Add'})\">\n\t\t  <ion-icon name=\"add\"></ion-icon>\n\t\t</ion-fab-button>\n\t  </ion-fab>\n\t<ion-list-header>\n\t\t<ion-searchbar id=\"gastos-searchbar\" (ionInput)=\"getItems($event)\"></ion-searchbar>\n\t</ion-list-header>\n\t<ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\n\t\t<ion-refresher-content pullingIcon=\"arrow-dropdown\" pullingText=\"Pull to refresh\" refreshingSpinner=\"circles\"\n\t\t\trefreshingText=\"Refrescando...\"></ion-refresher-content>\n\t</ion-refresher>\n\t<ion-item-group *ngFor=\"let item of items | groupBy:'Fecha':'reverse'\">\n\t\t<ion-item-divider color=\"light\">\n\t\t\t{{  item.header | date: 'MMM.dd.yy' }}\n\t\t</ion-item-divider>\n\t\t<ion-item *ngFor=\"let detail of item.details\">\n\t\t\t<ion-label>\n\t\t\t\t<div ion-text color=\"primary\">\n\t\t\t\t\t<h3>{{ detail.Nombre }} {{ detail.Comentario ? ' (' + detail.Comentario + ') ' : ''}}</h3>\n\t\t\t\t</div>\n\t\t\t\t<p>{{ detail.Categoria }} -- {{ detail.Monto | currency }} </p>\n\t\t\t</ion-label>\n\t\t</ion-item>\n\t</ion-item-group>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ModalController,\n  NavController\n} from '@ionic/angular';\nimport { AddGastosComponent } from '../../components/add-gastos/add-gastos.component';\nimport { GastosService } from '../../service/gastos.service';\nimport { LoadingUtil } from '../../utils/loadingUtil';\nimport { GastosDetalle } from '../../interface/gastos';\n\n@Component({\n  selector: 'app-gastos',\n  templateUrl: 'gastos.page.html',\n  styleUrls: ['gastos.page.scss'],\n  standalone: false,\n})\nexport class GastosPage implements OnInit {\n  items: GastosDetalle[] = [];\n  itemsBackup: GastosDetalle[] = [];\n  role: string = '';\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navCtrl: NavController,\n    private service: GastosService,\n    private loadUtil: LoadingUtil\n  ) {\n  }\n\n  ngOnInit() {\n    this.service.getSpreadSheetId().then(() => this.getdata());\n    const user = localStorage.getItem('user');\n    this.role = user ? JSON.parse(user).ROLE : '';\n  }\n\n  doRefresh(event: CustomEvent) {\n    this.service.getFullDataDetail().subscribe((data: any[]) => {\n      this.items = [...data]; // Fuerza nueva referencia para refrescar la vista\n      this.itemsBackup = [...this.items];\n      (event.target as HTMLIonRefresherElement).complete();\n    });\n  }\n\n  async getdata() {\n    this.loadUtil.showing();\n    await this.service.getFullDataDetail().subscribe((data: GastosDetalle[]) => {\n      this.items = [...data]; // Fuerza nueva referencia para refrescar la vista\n      this.itemsBackup = [...this.items];\n      this.loadUtil.dismiss();\n    });\n  }\n\n  getItems(ev: any) {\n    // Reset items back to all of the items\n    // console.log(this.items);\n    this.items = this.itemsBackup;\n    // console.log(\"this.items\", this.items);\n    // set val to the value of the searchbar\n    const val = ev.target.value;\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.items = this.items.filter(item => {\n        return (\n          item.Categoria && item.Categoria.toLowerCase().indexOf(val.toLowerCase()) > -1 ||\n          item.Nombre && item.Nombre.toLowerCase().indexOf(val.toLowerCase()) > -1\n        );\n      });\n    }\n  }\n\n  async openModal(detail: any) {\n    const modal = await this.modalCtrl.create({\n      component: AddGastosComponent,\n      componentProps: { detail : detail.detail }\n    });\n    modal.present();\n    const { data, role } = await modal.onWillDismiss();\n    if (role === 'confirm' && data && Array.isArray(data)) {\n      this.items.push(...data);\n      this.items = [...this.items]; // Fuerza refresco de la vista\n      this.itemsBackup = [...this.items];\n      this.service.gastosDetalle$.next(this.items); // Actualiza el observable compartido\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GastosPage } from './gastos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GastosPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GastosPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GastosPage } from './gastos.page';\n\nimport { GastosPageRoutingModule } from './gastos-routing.module';\nimport { GroupByPipe } from 'src/app/pipes/group-by.pipe';\nimport { UserAvatarComponent } from 'src/app/components/user-avatar/user-avatar.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    GastosPageRoutingModule,\n    GroupByPipe,\n    UserAvatarComponent\n  ],\n  declarations: [GastosPage]\n})\nexport class GastosPageModule {}\n"],"x_google_ignoreList":[]}