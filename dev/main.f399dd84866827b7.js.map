{"version":3,"file":"main.f399dd84866827b7.js","mappings":"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,gCACA,KACA,KACA,MAEA,yBACA,KACA,MAEA,0BACA,KACA,KACA,MAEA,+BACA,KACA,MAEA,0BACA,KACA,KACA,MAEA,wBACA,IACA,KACA,KAEA,8BACA,IACA,KACA,KAEA,4BACA,KACA,KACA,MAEA,gCACA,KACA,MAEA,0BACA,KACA,MAEA,4BACA,KACA,KACA,MAEA,kCACA,KACA,MAEA,+BACA,KACA,MAEA,4BACA,IACA,KACA,KAEA,+BACA,KACA,MAEA,2BACA,KACA,KACA,MAEA,0BACA,IACA,KACA,KAEA,6BACA,KACA,MAEA,4BACA,KACA,KACA,MAEA,wBACA,KACA,MAEA,uBACA,IACA,KAEA,2BACA,KACA,KACA,MAEA,wBACA,KACA,KACA,MAEA,yBACA,KACA,KACA,OAGA,SAAAmM,EAAAC,GACA,IAAArC,EAAAsC,EAAArM,EAAAoM,GACA,OAAAE,QAAAC,UAAA3I,KAAA,KACA,IAAAqB,EAAA,IAAAnG,MAAA,uBAAAsN,EAAA,KACA,MAAAnH,EAAAuH,KAAA,mBACAvH,IAIA,IAAAwH,EAAAzM,EAAAoM,GAAAjM,EAAAsM,EAAA,GACA,OAAAH,QAAAI,IAAAD,EAAAE,MAAA,GAAA3M,IAAA+J,EAAA9E,IAAArB,KAAA,IACAmG,EAAA5J,GAEA,CACAgM,EAAAS,KAAA,IAAA9M,OAAA8M,KAAA5M,GACAmM,EAAAhM,GAAA,KACA0M,EAAAC,QAAAX","names":["ingresadoGuard","route","state","localStorage","getItem","inject","Router","navigate","BaseService","constructor","this","BASE_URL","TABLES","_http","HttpClient","loadConfig","property","_this","_asyncToGenerator","config","environment","production","get","responseType","toPromise","properties","parseProperties","SPREAD_SHEET_ID","Error","updateConfig","newSpreadSheetId","_this2","updatedConfig","stringifyProperties","post","split","filter","line","trim","includes","reduce","acc","key","value","Object","entries","map","join","setSpreadSheetId","id","getEntities","table","url","getMaxId","getEntitiesByRange","range","saveEntities","rows","body","spreadsheet_id","sheet","JSON","stringify","saveEntitiesArray","bodytable","bodiesSaving","forEach","data","_bodiesSaving$tables","tables","push","console","debug","sendEmail","_info","_Detail","bodySend","info","Detail","handleError","error","errorMessage","ErrorEvent","message","status","throwError","factory","ɵfac","MOCK_GASTOS","Categoria","Nombre","Fecha","Monto","Commentario","MOCK_GASTOS_DETALLE","MOCK_CATEGORIAS","Tipo","PersonaServicio","GastosService","gastosDetalle$","BehaviorSubject","gastos$","categorias$","base","getSpreadSheetId","_spreadSheetId","then","log","catch","getCategoriaDef","getValue","length","asObservable","pipe","delay","name","mock","next","of","item","catchError","getFullDataDetail","save","_entity","_entities","Array","isArray","e","gastoBodies","gastoBody","getBody","getBodyDetrail","entities","Date","toLocaleString","timeZone","bodiesDetail","MOCK_RECIBOS","FOLIO","CASA","NOMBRE","CANTIDAD","CONCEPTO","FECHA","CORREO","INPUT_TIMESTAMP","MOCK_CATALOGOS","ID","EMAIL","EMAIL_CCP","MOCK_RECIBOS_DETALLE","MES","MONTO","MOCK_CONCEPTOS","RecibosService","recibosDetalle$","casas$","conceptos$","getFullData","getConceptos","reciboBodies","reciboBody","MOCK_USUARIOS","PASSWORD","TELEFONO","ROLE","UserService","getUsers","nombre","password","Observable","observer","user","find","_user","setItem","complete","LoadingUtil","loadingCtrl","showing","loading","presented","create","present","dismiss","i0","i1","providedIn","ToastUtil","toastController","presentToastColor","color","duration","position","presentToast","_message","baseHref","apiUrl","apiTimeout","defaultLanguage","routes","path","redirectTo","pathMatch","loadChildren","__webpack_require__","bind","m","TabsPageModule","canActivate","LoginPageModule","noIngresadoGuard","AppRoutingModule","RouterModule","forRoot","preloadingStrategy","PreloadAllModules","AppComponent","selectors","standalone","decls","vars","template","rf","ctx","ServiceModule","provide","ErrorHandler","useClass","provideHttpClient","imports","IonicModule","CommonModule","AppModule","bootstrap","RouteReuseStrategy","IonicRouteStrategy","BrowserModule","__NgCli_bootstrap_1","bootstrapModule","err","webpackAsyncContext","req","o","Promise","resolve","code","ids","all","slice","keys","module","exports"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/guard/ingresado.guard.ts","./src/app/service/base.service.ts","./src/app/mocks/mock-gastos.ts","./src/app/service/gastos.service.ts","./src/app/mocks/mock-recibos.ts","./src/app/mocks/mock-catalogos.ts","./src/app/mocks/mock-recibos-detalle.ts","./src/app/mocks/mock-conceptos.ts","./src/app/service/recibos.service.ts","./src/app/mocks/mock-usuarios.ts","./src/app/service/user.service.ts","./src/app/utils/loadingUtil.ts","./src/app/utils/toastUtil.ts","./src/environments/environment.snapshot.ts","./src/app/app-routing.module.ts","./src/app/guard/no-ingresado.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/service/service.module.ts","./src/app/app.module.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\nimport { inject } from '@angular/core';\n\nexport const ingresadoGuard: CanActivateFn = (route, state) => {\n  if (localStorage.getItem('user')) {\n    return true;\n  }\n  const router = inject(Router);\n  router.navigate(['/login']);\n  return false;\n};\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { BodiesSaving, BodySaving, BodyTables } from \"../interface/tables\";\nimport { environment } from \"../../environments/environment\";\nimport { throwError } from \"rxjs\";\n\n@Injectable()\nexport class BaseService {\n  // script sheet to json\n  BASE_URL =\n    \"https://script.google.com/macros/s/AKfycbza19jUFnHpxywV7YrIpEPYDybxs7p2CGcdcp3b6euN1V7NyMNUU3cEUfKVUAvOFCrR/exec\";\n//  environment.baseHref + \"api/exec\";\n  SPREAD_SHEET_ID: string | undefined;\n  TABLES = [];\n\n  _http = inject(HttpClient);\n  // constructor(private _http: HttpClient) {}\n  constructor() {}\n\n  // 'GASTOS_SPREAD_SHEET_ID'\n  public async loadConfig(property: string) : Promise<string> {\n    var config: any;\n    if (environment.production) {\n      config = await this._http.get('./assets/config.properties', { responseType: 'text' }).toPromise();\n    } else {\n      config = await this._http.get('./assets/config-dev.properties', { responseType: 'text' }).toPromise();\n    }\n    const properties = this.parseProperties(config);\n    this.SPREAD_SHEET_ID = properties[property];\n    if (this.SPREAD_SHEET_ID) {\n      return this.SPREAD_SHEET_ID;\n    }\n    throw new Error(\"SPREAD_SHEET_ID is undefined\");\n  }\n\n  async updateConfig(newSpreadSheetId: string, property: string) : Promise<string> {\n    var config: any;\n    if (environment.production) {\n      config = await this._http.get('./assets/config.properties', { responseType: 'text' }).toPromise();\n    } else {\n      config = await this._http.get('./assets/config-dev.properties', { responseType: 'text' }).toPromise();\n    }\n    let properties = this.parseProperties(config);\n    properties[property] = newSpreadSheetId;\n    const updatedConfig = this.stringifyProperties(properties);\n    if (environment.production) {\n      this.SPREAD_SHEET_ID = await this._http.post('./assets/config.properties', { updatedConfig }, { responseType: 'text' }).toPromise();\n    } else {\n      this.SPREAD_SHEET_ID = await this._http.post('./assets/config-dev.properties', { updatedConfig }, { responseType: 'text' }).toPromise();\n    }\n    this.SPREAD_SHEET_ID = newSpreadSheetId;\n    if (this.SPREAD_SHEET_ID) {\n      return this.SPREAD_SHEET_ID;\n    }\n    throw new Error(\"SPREAD_SHEET_ID is undefined\");\n  }\n\n  private parseProperties(properties: string): any {\n    return properties\n      .split('\\n')\n      .filter(line => line.trim() && line.includes('='))\n      .reduce((acc: { [key: string]: string }, line) => {\n        const [key, value] = line.split('=');\n        acc[key.trim()] = (value ?? '').trim();\n        return acc;\n      }, {});\n  }\n\n  private stringifyProperties(properties: { [key: string]: string }): string {\n    return Object.entries(properties).map(([key, value]) => `${key}=${value}`).join('\\n');\n  }\n\n  setSpreadSheetId(id: string) {\n    this.SPREAD_SHEET_ID = id;\n  }\n\n  /**\n   *\n   * @param table sheet name e.g. 'Casa'\n   * @returns json of sheet\n   */\n  getEntities(table: string) {\n    const url =\n      this.BASE_URL + `?spreadsheetId=${this.SPREAD_SHEET_ID}&sheet=${table}`;\n      // this.BASE_URL + `?sheetId=${this.SPREAD_SHEET_ID}&sheetName=${table}`;\n    // console.log(url);\n    return this._http.get(url, { responseType: \"json\" });\n  }\n\n  /**\n   *\n   * @param table sheet name e.g. 'Casa'\n   * @returns json of sheet\n   */\n  getMaxId(table: string, id: string) {\n    const url =\n      this.BASE_URL + `?spreadsheetId=${this.SPREAD_SHEET_ID}&sheet=${table}&sheetMaxId=${id}`;\n      // this.BASE_URL + `?sheetId=${this.SPREAD_SHEET_ID}&sheetName=${table}`;\n    // console.log(url);\n    return this._http.get(url, { responseType: \"json\" });\n  }\n\n  /**\n   *\n   * @param table sheet name e.g. 'Casa'\n   * @param range range of sheet e.g. A1:Z100\n   * @returns json of sheet\n   */\n  getEntitiesByRange(table: string, range: string) {\n    const url =\n      // this.BASE_URL + `?spreadsheetId=${this.SPREAD_SHEET_ID}&sheet=${table}`;\n      this.BASE_URL + `?spreadsheetId=${this.SPREAD_SHEET_ID}&sheet=${table}&sheetRange=${range}`;\n    // console.log(url);\n    return this._http.get(url, { responseType: \"json\" });\n  }\n\n  saveEntities(table: string, rows: any) {\n    // console.log(this.BASE_URL);\n    let body: BodySaving = {};\n    body.spreadsheet_id = this.SPREAD_SHEET_ID;\n    body.sheet = table;\n    body.rows = rows;\n    // console.log(JSON.stringify(body));\n    return this._http.post(this.BASE_URL, JSON.stringify(body));\n  }\n\n  saveEntitiesArray(bodytable: BodyTables[]) {\n    // console.log(this.BASE_URL);\n    let bodiesSaving: BodiesSaving = {};\n    bodiesSaving.tables = [];\n    bodytable.forEach(data => {\n      let body: BodySaving = {};\n      body.spreadsheet_id = this.SPREAD_SHEET_ID;\n      body.sheet = data.table;\n      body.rows = data.rows;\n      bodiesSaving.tables?.push(body);\n    });\n    console.debug(JSON.stringify(bodiesSaving));\n    return this._http.post(this.BASE_URL, JSON.stringify(bodiesSaving));\n  }\n\n  sendEmail(_info: any, _Detail: any[]) {\n    let bodySend: SendEmail = {};\n    bodySend.sendEmail = true;\n    bodySend.info = _info;\n    bodySend.Detail = _Detail;\n    console.debug(bodySend);\n    return this._http.post(this.BASE_URL, JSON.stringify(bodySend));\n  }\n\n    /**\n   * Función privada para manejar errores HTTP.\n   * @param error El error HTTP.\n   * @returns Observable<never> Un Observable que emite un error.\n   */\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Error desconocido del cliente.';\n    if (error.error instanceof ErrorEvent) {\n      // Error del lado del cliente o de la red.\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // El backend devolvió un código de respuesta no exitoso.\n      // El cuerpo de la respuesta puede contener pistas sobre lo que salió mal.\n      errorMessage = `Código de error del servidor: ${error.status}, cuerpo: ${error.error}`;\n    }\n    console.error('Error en la petición HTTP:', errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\nexport interface SendEmail {\n  sendEmail?: boolean;\n  info?: any;\n  Detail?: any[];\n}\n","// Datos de prueba para Gastos\nimport { Gastos, GastosDetalle, CategoriaDef } from '../interface/gastos';\n\nexport const MOCK_GASTOS: Gastos[] = [\n  {\n    Categoria: 'Mantenimiento',\n    Nombre: 'Reparación de plomería',\n    Fecha: '2025-06-05',\n    Monto: '300',\n    Commentario: 'Cambio de llave en baño'\n  },\n  {\n    Categoria: 'Suministros',\n    Nombre: 'Compra de focos',\n    Fecha: '2025-06-10',\n    Monto: '150',\n    Commentario: 'Focos LED para pasillo'\n  },\n  {\n    Categoria: 'Servicios',\n    Nombre: 'Pago de agua',\n    Fecha: '2025-06-15',\n    Monto: '500',\n    Commentario: 'Pago bimestral'\n  },\n  {\n    Categoria: 'Mantenimiento',\n    Nombre: 'Pintura',\n    Fecha: '2025-05-20',\n    Monto: '1200',\n    Commentario: 'Pintura de fachada'\n  }\n];\n\nexport const MOCK_GASTOS_DETALLE: GastosDetalle[] = [\n  {\n    Categoria: 'Mantenimiento',\n    Nombre: 'Reparación de plomería',\n    Fecha: '2025-06-05',\n    Monto: '300',\n    Commentario: 'Cambio de llave en baño'\n  },\n  {\n    Categoria: 'Suministros',\n    Nombre: 'Compra de focos',\n    Fecha: '2025-06-10',\n    Monto: '150',\n    Commentario: 'Focos LED para pasillo'\n  },\n  {\n    Categoria: 'Servicios',\n    Nombre: 'Pago de agua',\n    Fecha: '2025-06-15',\n    Monto: '500',\n    Commentario: 'Pago bimestral'\n  }\n];\n\nexport const MOCK_CATEGORIAS: CategoriaDef[] = [\n  { Nombre: 'Mantenimiento', Tipo: 'Gasto', PersonaServicio: 'Juan Albañil' },\n  { Nombre: 'Suministros', Tipo: 'Gasto', PersonaServicio: 'Ferretería Central' },\n  { Nombre: 'Servicios', Tipo: 'Gasto', PersonaServicio: 'Agua Municipal' },\n  { Nombre: 'Limpieza', Tipo: 'Gasto', PersonaServicio: 'Limpieza Express' }\n];\n","import { inject, Injectable } from '@angular/core';\nimport { BodyTables } from '../interface/tables';\nimport { CategoriaDef, Gastos, GastosDetalle } from '../interface/gastos';\nimport { BaseService } from './base.service';\nimport { BehaviorSubject, map, Observable, of } from 'rxjs';\nimport { catchError, delay } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { MOCK_GASTOS, MOCK_GASTOS_DETALLE, MOCK_CATEGORIAS } from '../mocks/mock-gastos';\n\n@Injectable()\nexport class GastosService {\n  SPREAD_SHEET_ID: string | undefined;\n\n  public gastosDetalle$ = new BehaviorSubject<GastosDetalle[]>([]);\n  public gastos$ = new BehaviorSubject<Gastos[]>([]);\n  public categorias$ = new BehaviorSubject<CategoriaDef[]>([]);\n\n  base = inject(BaseService);\n  // constructor(private base: BaseService) {}\n\n  async getSpreadSheetId() {\n    this.SPREAD_SHEET_ID = await this.base.loadConfig('GASTOS_SPREAD_SHEET_ID');\n      // console.log('GastosService: SPREAD_SHEET_ID loaded : {}', this.SPREAD_SHEET_ID);\n    return this.SPREAD_SHEET_ID;\n  }\n\n  setSpreadSheetId(_spreadSheetId: string) {\n    this.SPREAD_SHEET_ID = _spreadSheetId;\n    this.base.updateConfig(this.SPREAD_SHEET_ID, 'GASTOS_SPREAD_SHEET_ID')\n      .then( property => {\n        this.SPREAD_SHEET_ID = property;\n        console.log('GastosService: SPREAD_SHEET_ID updated : {}', this.SPREAD_SHEET_ID)\n      })\n      .catch( error => console.error(error));\n  }\n\n  getCategoriaDef(): Observable<CategoriaDef[]> {\n    if (this.categorias$.getValue().length > 0) {\n      // Si ya hay datos en categorias$, retorna el observable actual con delay\n      return this.categorias$.asObservable().pipe(delay(100));\n    }\n\n    if (environment.name === 'local') {\n      const mock = MOCK_CATEGORIAS;\n      this.categorias$.next(mock);\n      return of(mock).pipe(delay(500));\n    }\n    return this.base.getEntitiesByRange('Catalogos','A1:C50').pipe(\n      map((data: any) => {\n        data = data.filter((item: any) => item.Nombre);\n        this.categorias$.next(data as CategoriaDef[]);\n        return data as CategoriaDef[];\n      }),\n      catchError(this.base.handleError)\n    );\n  }\n\n  getFullDataDetail(): Observable<GastosDetalle[]> {\n    if (this.gastosDetalle$.getValue().length > 0) {\n      // Si ya hay datos en gastosDetalle$, retorna el observable actual\n      return this.gastosDetalle$.asObservable().pipe(delay(100));\n    }\n    if (environment.name === 'local') {\n      const mock = MOCK_GASTOS_DETALLE;\n      this.gastosDetalle$.next(mock);\n      return of(mock).pipe(delay(500));\n    }\n    return this.base.getEntities('GastosDetalle').pipe(\n      map((data: any) => {\n        this.gastosDetalle$.next(data as GastosDetalle[]);\n        return data as GastosDetalle[];\n      }),\n      catchError(this.base.handleError)\n    );\n  }\n\n  save(_entity: Gastos, _entities: GastosDetalle[]) {\n    if (environment.name === 'local') {\n      MOCK_GASTOS.push(_entity);\n      if (Array.isArray(_entities)) {\n        _entities.forEach(e => MOCK_GASTOS_DETALLE.push(e));\n      }\n      return of({ message: 'Guardado en mock local (desarrollo)' }).pipe(delay(500));\n    }\n    let gastoBodies: BodyTables[] = [];\n    let gastoBody: BodyTables = {};\n    //header\n    gastoBody.table = 'Gastos';\n    gastoBody.rows = this.getBody(_entity);\n    gastoBodies.push(gastoBody);\n    // Detail\n    gastoBody = {};\n    gastoBody.table = 'GastosDetalle';\n    gastoBody.rows = this.getBodyDetrail(_entities);\n    gastoBodies.push(gastoBody);\n    //run service\n    return this.base.saveEntitiesArray(gastoBodies);\n  }\n\n  private getBody(_entity: GastosDetalle | any) {\n    let body: string[][] = [];\n    let entities: string[] = [];\n    entities.push(_entity.Categoria);\n    entities.push(_entity.Nombre);\n    entities.push(_entity.Fecha);\n    entities.push('' + _entity.Monto);\n    entities.push(_entity.Commentario);\n    entities.push(new Date().toLocaleString('es-MX', { timeZone: 'America/Mexico_City' }));\n    body.push(entities);\n    return body;\n  }\n\n  private getBodyDetrail(_entities: GastosDetalle[] | any) {\n    let bodiesDetail: string[][] = [];\n    if (_entities) {\n      // console.log(\"_entities Detail\", _entities);\n      _entities.forEach((data: GastosDetalle | any) => {\n        let entities: string[] = [];\n        entities.push(data.Categoria);\n        entities.push(data.Nombre);\n        entities.push(data.Fecha);\n        entities.push('' + data.Monto);\n        entities.push(data.Commentario);\n        entities.push(new Date().toLocaleString('es-MX', { timeZone: 'America/Mexico_City' }));\n        bodiesDetail.push(entities);\n      });\n    }\n    //console.log(\"_entities Detail return \", bodiesDetail);\n    return bodiesDetail;\n  }\n\n}\n","// Datos de prueba para Recibos\nimport { Recibo, ReciboMaxFolio } from '../interface/recibos';\nexport const MOCK_RECIBO_MAX_FOLIO: ReciboMaxFolio = {\n  FOLIO: 3\n};\n\nexport const MOCK_RECIBOS: Recibo[] = [\n  {\n    FOLIO: 1,\n    CASA: 'A1',\n    NOMBRE: 'Juan Pérez',\n    CANTIDAD: '1200',\n    CONCEPTO: 'Pago de renta junio',\n    FECHA: '2025-06-01',\n    CORREO: 'juan.perez@email.com',\n    INPUT_TIMESTAMP: '2025-06-01T10:00:00'\n  },\n  {\n    FOLIO: 2,\n    CASA: 'A2',\n    NOMBRE: 'Ana López',\n    CANTIDAD: '1200',\n    CONCEPTO: 'Pago de renta julio',\n    FECHA: '2025-07-01',\n    CORREO: 'ana.lopez@email.com',\n    INPUT_TIMESTAMP: '2025-07-01T10:00:00'\n  },\n  {\n    FOLIO: 3,\n    CASA: 'A1',\n    NOMBRE: 'Juan Pérez',\n    CANTIDAD: '800',\n    CONCEPTO: 'Pago de mantenimiento',\n    FECHA: '2025-06-15',\n    CORREO: 'juan.perez@email.com',\n    INPUT_TIMESTAMP: '2025-06-15T09:00:00'\n  },\n  {\n    FOLIO: 4,\n    CASA: 'A3',\n    NOMBRE: 'Carlos Ruiz',\n    CANTIDAD: '500',\n    CONCEPTO: 'Pago de agua',\n    FECHA: '2025-05-20',\n    CORREO: 'carlos.ruiz@email.com',\n    INPUT_TIMESTAMP: '2025-05-20T08:00:00'\n  },\n  {\n    FOLIO: 5,\n    CASA: 'A2',\n    NOMBRE: 'Ana López',\n    CANTIDAD: '950',\n    CONCEPTO: 'Pago de luz',\n    FECHA: '2025-04-10',\n    CORREO: 'ana.lopez@email.com',\n    INPUT_TIMESTAMP: '2025-04-10T11:00:00'\n  },\n  {\n    FOLIO: 6,\n    CASA: 'A4',\n    NOMBRE: 'Luis Gómez',\n    CANTIDAD: '1200',\n    CONCEPTO: 'Pago de renta marzo',\n    FECHA: '2025-03-05',\n    CORREO: 'luis.gomez@email.com',\n    INPUT_TIMESTAMP: '2025-03-05T12:00:00'\n  },\n  {\n    FOLIO: 7,\n    CASA: 'A1',\n    NOMBRE: 'Juan Pérez',\n    CANTIDAD: '1200',\n    CONCEPTO: 'Pago de renta febrero',\n    FECHA: '2025-02-01',\n    CORREO: 'juan.perez@email.com',\n    INPUT_TIMESTAMP: '2025-02-01T10:00:00'\n  },\n  {\n    FOLIO: 8,\n    CASA: 'A5',\n    NOMBRE: 'María Torres',\n    CANTIDAD: '1200',\n    CONCEPTO: 'Pago de renta enero',\n    FECHA: '2025-01-01',\n    CORREO: 'maria.torres@email.com',\n    INPUT_TIMESTAMP: '2025-01-01T10:00:00'\n  },\n  {\n    FOLIO: 9,\n    CASA: 'A3',\n    NOMBRE: 'Carlos Ruiz',\n    CANTIDAD: '300',\n    CONCEPTO: 'Pago parcial de renta',\n    FECHA: '2025-06-25',\n    CORREO: 'carlos.ruiz@email.com',\n    INPUT_TIMESTAMP: '2025-06-25T13:00:00'\n  },\n  {\n    FOLIO: 10,\n    CASA: 'A2',\n    NOMBRE: 'Ana López',\n    CANTIDAD: '1200',\n    CONCEPTO: 'Pago de renta junio (atrasado)',\n    FECHA: '2025-06-30',\n    CORREO: 'ana.lopez@email.com',\n    INPUT_TIMESTAMP: '2025-06-30T14:00:00'\n  }\n];\n","// Datos de prueba para Catalogos\nexport const MOCK_CATALOGOS = [\n  { ID: 'A1', NOMBRE: 'Casa 1', EMAIL: 'casa1@email.com', EMAIL_CCP: 'ccp1@email.com' },\n  { ID: 'A2', NOMBRE: 'Casa 2', EMAIL: 'casa2@email.com', EMAIL_CCP: 'ccp2@email.com' },\n  { ID: 'A3', NOMBRE: 'Casa 3', EMAIL: 'casa3@email.com', EMAIL_CCP: 'ccp3@email.com' },\n  { ID: 'A4', NOMBRE: 'Casa 4', EMAIL: 'casa4@email.com', EMAIL_CCP: 'ccp4@email.com' }\n];\n","// Datos de prueba para ReciboDetalle\nimport { ReciboDetalle } from '../interface/recibos';\n\nexport const MOCK_RECIBOS_DETALLE: ReciboDetalle[] = [\n  {\n    FOLIO: 1,\n    CASA: 'A1',\n    NOMBRE: 'Juan Pérez',\n    CONCEPTO: 'Renta',\n    MES: '2025-06',\n    MONTO: '1200',\n    INPUT_TIMESTAMP: '2025-06-01T10:00:00'\n  },\n  {\n    FOLIO: 2,\n    CASA: 'A2',\n    NOMBRE: 'Ana López',\n    CONCEPTO: 'Renta',\n    MES: '2025-07',\n    MONTO: '1200',\n    INPUT_TIMESTAMP: '2025-07-01T10:00:00'\n  },\n  {\n    FOLIO: 3,\n    CASA: 'A1',\n    NOMBRE: 'Juan Pérez',\n    CONCEPTO: 'Mantenimiento',\n    MES: '2025-06',\n    MONTO: '800',\n    INPUT_TIMESTAMP: '2025-06-15T09:00:00'\n  }\n];\n","// Datos de prueba para Conceptos (Catalogo)\nimport { ConceptoDef } from '../interface/recibos';\n\nexport const MOCK_CONCEPTOS: ConceptoDef[] = [\n  { NOMBRE: 'Renta' },\n  { NOMBRE: 'Mantenimiento' },\n  { NOMBRE: 'Agua' },\n  { NOMBRE: 'Luz' },\n  { NOMBRE: 'Limpieza' },\n  { NOMBRE: 'Seguro' },\n  { NOMBRE: 'Internet' }\n];\n","import { inject, Injectable } from '@angular/core';\nimport {\n  Casa,\n  ConceptoDef,\n  Recibo,\n  ReciboDetalle,\n  ReciboMaxFolio\n} from '../interface/recibos';\nimport { BaseService } from './base.service';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { map, delay, catchError } from 'rxjs/operators';\nimport { BodyTables } from '../interface/tables';\nimport { environment } from '../../environments/environment';\nimport { MOCK_RECIBO_MAX_FOLIO, MOCK_RECIBOS } from '../mocks/mock-recibos';\nimport { MOCK_CATALOGOS } from '../mocks/mock-catalogos';\nimport { MOCK_RECIBOS_DETALLE } from '../mocks/mock-recibos-detalle';\nimport { MOCK_CONCEPTOS } from '../mocks/mock-conceptos';\nimport { Concepto } from '../interface/recibos';\n\n@Injectable()\nexport class RecibosService {\n  SPREAD_SHEET_ID: string | undefined;\n  base = inject(BaseService);\n  // constructor(private base: BaseService) {}\n\n  public recibosDetalle$ = new BehaviorSubject<ReciboDetalle[]>([]);\n  public casas$ = new BehaviorSubject<Casa[]>([]);\n  public conceptos$ = new BehaviorSubject<ConceptoDef[]>([]);\n\n  async getSpreadSheetId() {\n    this.SPREAD_SHEET_ID = await this.base.loadConfig('RECIBOS_SPREAD_SHEET_ID');\n        // console.log('RecibosService: SPREAD_SHEET_ID loaded : ', this.SPREAD_SHEET_ID);\n    return this.SPREAD_SHEET_ID;\n  }\n\n  async setSpreadSheetId(_spreadSheetId: string) {\n    // this.SPREAD_SHEET_ID = _spreadSheetId;\n    this.SPREAD_SHEET_ID = await this.base.updateConfig(_spreadSheetId, 'RECIBOS_SPREAD_SHEET_ID');\n      // console.log('RecibosService: SPREAD_SHEET_ID updated : ', this.SPREAD_SHEET_ID);\n    return this.SPREAD_SHEET_ID;\n  }\n\n  getFullData(): Observable<Casa[]> {\n    if (this.casas$.getValue().length > 0) {\n      // Si ya hay datos en casas$, retorna el observable actual\n      // return this.casas$.asObservable().pipe(delay(500));\n      return this.casas$.asObservable();\n    }\n    // Si no hay datos, invoca el método y setea casas$\n    if (environment.name === 'local') {\n      const mock = MOCK_CATALOGOS;\n      this.casas$.next(mock);\n      return of(mock).pipe(delay(500));\n    }\n    return this.base.getEntitiesByRange('Catalogos','E1:I50').pipe(\n      map((data: any) => {\n        data = data.filter((item: any) => item.ID && item.NOMBRE);\n        this.casas$.next(data as Casa[] || []);\n        return data as Casa[] || [];\n      })\n    );\n  }\n\n  getFullDataDetail(): Observable<ReciboDetalle[]> {\n    if (this.recibosDetalle$.getValue().length > 0) {\n      // Si ya hay datos en casas$, retorna el observable actual\n      return this.recibosDetalle$.asObservable().pipe(delay(100));\n    }\n    // Si no hay datos, invoca el método y setea casas$\n    if (environment.name === 'local') {\n      const mock = MOCK_RECIBOS_DETALLE;\n      this.recibosDetalle$.next(mock);\n      return of(MOCK_RECIBOS_DETALLE).pipe(delay(1500));\n    }\n    return this.base.getEntities('RecibosDetalle').pipe(\n      map((data: any) => {\n        this.recibosDetalle$.next(data as ReciboDetalle[] || []);\n        return data as ReciboDetalle[] || [];\n      }),\n      catchError(this.base.handleError)\n    );\n  }\n\n/*   getRecibos() {\n    if (environment.name === 'local') {\n      return of(MOCK_RECIBOS).pipe(delay(500));\n    }\n    return this.base.getEntities('Recibos');\n  } */\n\n/*   getMaxFolio(): Observable<ReciboMaxFolio> {\n    if (environment.name === 'local') {\n      return of(MOCK_RECIBO_MAX_FOLIO).pipe(delay(500));\n    }\n    return this.base.getMaxId('Recibos', 'FOLIO').pipe(\n      map((data: any) => {\n        return data as ReciboMaxFolio || { FOLIO: 1 }; // Default to 1 if no data found\n      }),\n      catchError(this.base.handleError)\n    );\n  } */\n\n  getConceptos(): Observable<ConceptoDef[]> {\n    if(this.conceptos$ && this.conceptos$.getValue().length > 0) {\n      // Si ya hay datos en conceptos$, retorna el observable actual con delay\n      // return this.conceptos$.asObservable().pipe(delay(500));\n      return this.conceptos$.asObservable().pipe(delay(100));\n    }\n    if (environment.name === 'local') {\n      const mock = MOCK_CONCEPTOS;\n      this.conceptos$.next(mock);\n      return of(mock).pipe(delay(500));\n    }\n    return this.base.getEntitiesByRange('Catalogos', 'A1:A50').pipe(\n      map((data: any) => {\n        data = data.filter((item: any) => item.NOMBRE);\n        this.conceptos$.next(data as ReciboDetalle[] || []);\n        return data as ConceptoDef[] || [];\n      }),\n      catchError(this.base.handleError)\n    );\n\n  }\n\n  save(_entity: Recibo, _entities: ReciboDetalle[]) {\n    if (environment.name === 'local') {\n      // Guardar temporalmente en el array dummy (solo en memoria, no persistente)\n      MOCK_RECIBOS.push(_entity);\n      if (Array.isArray(_entities)) {\n        _entities.forEach(e => MOCK_RECIBOS_DETALLE.push(e));\n      }\n      // Simula un observable de éxito\n      return of({ message: 'Guardado en mock local (desarrollo)' }).pipe(delay(500));\n    }\n    let reciboBodies: BodyTables[] = [];\n    let reciboBody: BodyTables = {};\n    //header\n    reciboBody.table = 'Recibos';\n    reciboBody.rows = this.getBody(_entity);\n    reciboBodies.push(reciboBody);\n    // Detail\n    reciboBody = {};\n    reciboBody.table = 'RecibosDetalle';\n    reciboBody.rows = this.getBodyDetrail(_entities);\n    reciboBodies.push(reciboBody);\n    //run service\n    return this.base.saveEntitiesArray(reciboBodies);\n  }\n\n  private getBody(_entity: Recibo | any) {\n    let body: string[][] = [];\n    let entities: string[] = [];\n    entities.push('' + _entity.FOLIO);\n    entities.push(_entity.CASA);\n    entities.push(_entity.NOMBRE);\n    entities.push(_entity.CANTIDAD);\n    entities.push(_entity.CONCEPTO);\n    entities.push(_entity.FECHA);\n    entities.push(_entity.CORREO);\n    entities.push(new Date().toLocaleString());\n    body.push(entities);\n    return body;\n  }\n\n  private getBodyDetrail(_entities: ReciboDetalle[] | any) {\n    let bodiesDetail: string[][] = [];\n    if (_entities) {\n      // console.log(\"_entities Detail\", _entities);\n      _entities.forEach((data: ReciboDetalle | any) => {\n        let entities: string[] = [];\n        entities.push('' + data.FOLIO);\n        entities.push(data.CASA);\n        entities.push(data.NOMBRE);\n        entities.push(data.CONCEPTO);\n        entities.push(data.MES);\n        entities.push(data.MONTO);\n        entities.push(new Date().toLocaleString());\n        bodiesDetail.push(entities);\n      });\n    }\n    //console.log(\"_entities Detail return \", bodiesDetail);\n    return bodiesDetail;\n  }\n\n  sendEmail(info: any, Detail: any[]) {\n    return this.base.sendEmail(info, Detail);\n  }\n}\n","// Datos de prueba para Usuarios\nimport { Usuario } from '../interface/recibos';\n\nexport const MOCK_USUARIOS: Usuario[] = [\n  {\n    ID: 'admin',\n    PASSWORD: 'admin123',\n    NOMBRE: 'Administrador',\n    EMAIL: 'admin@email.com',\n    TELEFONO: '555-0000',\n    ROLE: 'admin'\n  },\n  {\n    ID: 'juan',\n    PASSWORD: 'juanpass',\n    NOMBRE: 'Juan Pérez',\n    EMAIL: 'juan@email.com',\n    TELEFONO: '555-1111',\n    ROLE: 'user'\n  },\n  {\n    ID: 'ana',\n    PASSWORD: 'anapass',\n    NOMBRE: 'Ana López',\n    EMAIL: 'ana@email.com',\n    TELEFONO: '555-2222',\n    ROLE: 'user'\n  }\n];\n","import { inject, Injectable } from \"@angular/core\";\nimport { Usuario } from \"../interface/recibos\";\nimport { BaseService } from \"./base.service\";\nimport { map, Observable } from \"rxjs\";\nimport { MOCK_USUARIOS } from '../mocks/mock-usuarios';\nimport { environment } from \"src/environments/environment\";\n\n@Injectable()\nexport class UserService {\n    SPREAD_SHEET_ID: string | undefined;\n    base = inject(BaseService);\n\n    async getSpreadSheetId() {\n      this.SPREAD_SHEET_ID = await this.base.loadConfig('CATALOGOS_SPREAD_SHEET_ID');\n      return this.SPREAD_SHEET_ID;\n    }\n\n    async setSpreadSheetId(_spreadSheetId: string) {\n      this.SPREAD_SHEET_ID = await this.base.updateConfig(_spreadSheetId, 'CATALOGOS_SPREAD_SHEET_ID');\n      return this.SPREAD_SHEET_ID;\n    }\n\n\n  getUsers(nombre: string, password: string): Observable<string| null | undefined> {\n    if (environment.name === 'local') {\n      return new Observable<string | null | undefined>(observer => {\n        let users = MOCK_USUARIOS;\n        let user = users.find((_user) => _user.ID === nombre && _user.PASSWORD === password);\n        if(user) {\n          user.PASSWORD = '';\n          user.TELEFONO = '';\n          localStorage.setItem('user', JSON.stringify(user));\n          observer.next(user.NOMBRE);\n        } else {\n          observer.next(null);\n        }\n        observer.complete();\n      });\n    }\n    return this.base.getEntities(\"Usuarios\").pipe(\n      map((data: any) => {\n        let users = data as Usuario[];\n        let user = users.find((_user) => _user.ID === nombre && _user.PASSWORD === password);\n        if(user) {\n          user.PASSWORD = '';\n          user.TELEFONO = '';\n            localStorage.setItem('user', JSON.stringify(user));\n            return user.NOMBRE;\n        }\n        return null;\n      })\n    );\n  }\n\n /*  saveUser(user: User) {\n    let users = this.getBody(user);\n    let body: string[][] = [];\n    body.push(users);\n    return this.base.saveEntities(\"users\", body);\n  }\n\n  private getBody(user: User | any) {\n    let users: string[] = [];\n    users.push(\"\" + user.id);\n    users.push(user.uername);\n    users.push(user.email);\n    return users;\n  } */\n}\n","import { Injectable } from \"@angular/core\";\nimport { LoadingController } from \"@ionic/angular\";\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingUtil {\n\n  loading: any;\n\n  constructor(private loadingCtrl: LoadingController) {}\n\n  async showing() {\n    if (this.loading && this.loading.presented) {\n      // Ya hay un loading activo, no crear otro\n      return;\n    }\n    this.loading = await this.loadingCtrl.create({\n      message: \"Por favor espere... \"\n    });\n\n    await this.loading.present();\n  }\n\n  dismiss() {\n    if (this.loading) {\n      this.loading.dismiss();\n      this.loading = null;\n    }\n      // this.loadingCtrl.dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable()\nexport class ToastUtil {\n  constructor(private toastController: ToastController) {}\n\n   async presentToastColor(message: string, color: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n      color,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n\n  async presentToast(_message: string, position: 'top' | 'middle' | 'bottom') {\n    const toast = await this.toastController.create({\n      message: _message,\n      duration: 3000,\n      position: position,\n    });\n\n    await toast.present();\n  }\n}","export const environment = {\n  production: false,\n  name: 'snapshot',\n  baseHref: '/recibos-pagos/dev',\n  apiUrl: 'https://katopuebla.github.io/recibos-pagos/dev',\n  apiTimeout: 30000,\n  defaultLanguage: 'es'\n};\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { noIngresadoGuard } from './guard/no-ingresado.guard';\nimport { ingresadoGuard } from './guard/ingresado.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tabs/home',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    loadChildren: () => import('./tabs/tabs.module').then(m => m.TabsPageModule)\n    ,canActivate: [ingresadoGuard]\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./pages/login/login.module').then( m => m.LoginPageModule)\n    ,canActivate: [noIngresadoGuard]\n  }\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\n\nexport const noIngresadoGuard: CanActivateFn = (route, state) => {\n  if (!localStorage.getItem('user')) {\n    return true;\n  }\n  const router = inject(Router);\n  router.navigate(['/tabs/home']);\n  return false;\n};\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  standalone: false,\n})\nexport class AppComponent {\n  constructor() {}\n}\n","<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RecibosService } from './recibos.service'; // Import the service\nimport { BaseService } from './base.service';\nimport { UserService } from './user.service';\nimport { provideHttpClient } from '@angular/common/http';\nimport { GastosService } from './gastos.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n  ],\n  declarations: [],\n  providers: [\n    { provide: ErrorHandler, useClass: ErrorHandler },\n    provideHttpClient(),\n    BaseService,\n    UserService,\n    RecibosService,\n    GastosService\n  ] \n})\nexport class ServiceModule {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceModule } from './service/service.module';\nimport { ToastUtil } from './utils/toastUtil';\nimport { LoadingUtil } from './utils/loadingUtil';\nimport { GroupByPipe } from './pipes/group-by.pipe';\nimport { OrderByPipe } from './pipes/order-by.pipe';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    ServiceModule,\n    GroupByPipe,\n    OrderByPipe\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }, ToastUtil, LoadingUtil],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t7518,\n\t\t2076,\n\t\t7518\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t1981,\n\t\t2076,\n\t\t1981\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t1603,\n\t\t2076,\n\t\t1603\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t2273,\n\t\t2076,\n\t\t2273\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t9642,\n\t\t9642\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t2095,\n\t\t2076,\n\t\t2095\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t2335,\n\t\t2335\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8221,\n\t\t2076,\n\t\t8221\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t7184,\n\t\t7184\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t8759,\n\t\t8759\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4248,\n\t\t4248\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t9863,\n\t\t9863\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t1769,\n\t\t1769\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t2569,\n\t\t7377,\n\t\t2569\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t6534,\n\t\t7377,\n\t\t2076,\n\t\t6534\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t5458,\n\t\t2076,\n\t\t5458\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t654,\n\t\t654\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t6034,\n\t\t2076,\n\t\t6034\n\t],\n\t\"./ion-input-password-toggle.entry.js\": [\n\t\t5196,\n\t\t2076,\n\t\t5196\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t761,\n\t\t2076,\n\t\t761\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t6492,\n\t\t2076,\n\t\t6492\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t9557,\n\t\t2076,\n\t\t9557\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t8353,\n\t\t2076,\n\t\t8353\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t1024,\n\t\t2076,\n\t\t1024\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t9160,\n\t\t2076,\n\t\t9160\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t393,\n\t\t393\n\t],\n\t\"./ion-picker-column-option.entry.js\": [\n\t\t8442,\n\t\t8442\n\t],\n\t\"./ion-picker-column.entry.js\": [\n\t\t3110,\n\t\t2076,\n\t\t3110\n\t],\n\t\"./ion-picker.entry.js\": [\n\t\t5575,\n\t\t5575\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t6772,\n\t\t2076,\n\t\t6772\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t4810,\n\t\t4810\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t4639,\n\t\t2076,\n\t\t4639\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t628,\n\t\t2076,\n\t\t628\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t852,\n\t\t2076,\n\t\t852\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t1479,\n\t\t2076,\n\t\t1479\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4065,\n\t\t4065\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t7971,\n\t\t7971\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t3184,\n\t\t2076,\n\t\t3184\n\t],\n\t\"./ion-segment-content.entry.js\": [\n\t\t4312,\n\t\t4312\n\t],\n\t\"./ion-segment-view.entry.js\": [\n\t\t4540,\n\t\t4540\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t469,\n\t\t2076,\n\t\t469\n\t],\n\t\"./ion-select-modal.entry.js\": [\n\t\t7101,\n\t\t7101\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8471,\n\t\t2076,\n\t\t8471\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t388,\n\t\t2076,\n\t\t388\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t2392,\n\t\t2392\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t6059,\n\t\t2076,\n\t\t6059\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t5427,\n\t\t5427\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t198,\n\t\t198\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t1735,\n\t\t2076,\n\t\t1735\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t7510,\n\t\t2076,\n\t\t7510\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5297,\n\t\t2076,\n\t\t5297\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8996;\nmodule.exports = webpackAsyncContext;"],"x_google_ignoreList":[21]}