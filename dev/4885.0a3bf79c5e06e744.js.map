{"version":3,"file":"4885.0a3bf79c5e06e744.js","mappings":"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","names":["i0","row_r3","NOMBRE","$event","_r1","ctx_r1","onChangePrefijo","AddRecibosComponent_ion_item_9_ion_select_option_2_Template","prefijos","casa_r4","ID","row_r7","_r8","i_r6","index","removeInputField","_r5","onChangeConcepto","AddRecibosComponent_section_28_ion_select_option_6_Template","AddRecibosComponent_section_28_ion_button_13_Template","conceptos","conceptoForm","length","AddRecibosComponent","constructor","modalCtrl","actionSheetCtrl","formBuilder","service","loadingUtil","toastUtil","alertUtil","this","user","item","FOLIO","CASA","CANTIDAD","CONCEPTO","FECHA","CORREO","INPUT_TIMESTAMP","PREFIX","itemDetail","itemDetailConfirms","casas","data","sendEmail","date","Date","today","getTime","getTimezoneOffset","fields","group","prefijo","Validators","required","folio","casa","nombre","fecha","email","cantidad","array","frmConceptos","concepto","minLength","mes","monto","min","pattern","get","ngOnInit","getSpreadSheetId","then","formattedDate","toJSON","split","patchValue","inittial","showing","getMaxFolio","getFullDataDetail","subscribe","next","resp","Math","max","map","row","dismiss","error","err","showError","message","_this","userStr","localStorage","getItem","_ref","JSON","parse","getFullData","getConceptos","getPrefijos","calPrefijoUser","_asyncToGenerator","console","_x","apply","arguments","onChangeCasa","event","_casa","detail","value","find","EMAIL","_prefijo$FOLIO","_prefijo","i","control","controls","_monto","calMontoConcepto","at","getFirstDayOfMonth","sumMonto","forEach","getFullYear","getMonth","onSave","_recibo","_this2","create","header","buttons","text","role","icon","handler","save","present","_recibo$prefijo$PREFI","_recibo$prefijo","_folio","fillEvent","toLocaleDateString","meesageToast","log","convertMonth","calSavePrefijos","otherSave","_itemDetail","_this3","reset","push","confirm","_item$MES","yyyy","mm","dd","MES","isoString","_data$NOMBRE","_this$user","_this$user2","toUpperCase","ROLE","prefijoToUpdate","p","_recibo$prefijo$PREFI2","_recibo$prefijo2","_recibo$prefijo$PREFI3","_recibo$prefijo3","MONTO","removeAt","addNewInputField","_message","presentToast","reciboDetalles","close","i1","i2","i3","i4","i5","i6","selectors","standalone","decls","vars","consts","template","rf","ctx","AddRecibosComponent_ion_item_9_Template","AddRecibosComponent_ion_select_option_16_Template","AddRecibosComponent_section_28_Template","valid","AlertUtil","alertCtrl","showSucess","factory","ɵfac","providedIn"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/components/add-recibos/add-recibos.component.html","./src/app/components/add-recibos/add-recibos.component.ts","./src/app/utils/alertUtil.ts"],"sourcesContent":["<ion-header>\n\t<ion-toolbar>\n\t\t<ion-title>Agregar Recibos</ion-title>\n\t\t<ion-buttons slot=\"start\">\n\t\t\t<ion-button (click)=\"close()\">\n\t\t\t<ion-icon name=\"close\" ></ion-icon>\n\t\t\t</ion-button>\n\t\t</ion-buttons>\n\t</ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\t<form [formGroup]=\"fields\" (ngSubmit)=\"onSave(fields.value)\">\n\t\t<ion-item *ngIf=\"user?.ROLE === 'admin' || user?.ROLE === 'dev' || user?.ROLE === 'manager'\" >\n      <ion-select label=\"Prefix:\" labelPlacement=\"floating\"  interface=\"popover\"\n        id=\"prefijo\" formControlName=\"prefijo\" (ionChange)=\"onChangePrefijo($event)\">\n        <ion-select-option *ngFor=\"let row of prefijos\" [value]=\"row\">\n          {{row.NOMBRE}}\n        </ion-select-option>\n      </ion-select>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Folio\" labelPlacement=\"floating\" id=\"folio\" type=\"number\" formControlName=\"folio\">\n\t\t\t</ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Fecha\" labelPlacement=\"floating\" id=\"fecha\" type=\"date\" formControlName=\"fecha\"></ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-select label=\"Casa\" labelPlacement=\"floating\"\n\t\t\t\tid=\"casa\" interface=\"popover\" formControlName=\"casa\" (ionChange)=\"onChangeCasa($event)\">\n\t\t\t\t<ion-select-option *ngFor=\"let casa of casas\" [value]=\"casa\">{{casa.ID}}--{{casa.NOMBRE}}\n\t\t\t\t</ion-select-option>\n\t\t\t\t<ion-select-option> </ion-select-option>\n\t\t\t\t<ion-select-option></ion-select-option>\n\t\t\t</ion-select>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Nombre\" labelPlacement=\"floating\" id=\"nombre\" type=\"text\" formControlName=\"nombre\">\n\t\t\t</ion-input>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Email\" labelPlacement=\"floating\" id=\"email\" type=\"email\" formControlName=\"email\">\n\t\t\t</ion-input>\n\t\t\t<ion-checkbox id=\"sendEmail\" item-right secondary formControlName=\"sendEmail\" color=\"green\">\n\t\t\t</ion-checkbox>\n\t\t</ion-item>\n\t\t<ion-item>\n\t\t\t<ion-input label=\"Cantidad\" labelPlacement=\"floating\"  id=\"cantidad\" type=\"number\" formControlName=\"cantidad\">\n\t\t\t\t<ion-icon slot=\"start\" name=\"cash\" aria-hidden=\"true\"></ion-icon>\n\t\t\t</ion-input>\n\t\t</ion-item>\n\t\t<!-- Detail -->\n\t\t<div formArrayName=\"conceptos\" margin-bottom>\n\t\t\t<section *ngFor=\"let control of conceptoForm.controls; let i = index\" [formGroupName]=\"i\" >\n\t\t\t\t<ion-item-group>\n\t\t\t\t\t<ion-item-divider color=\"light\">Conceptos #{{ i + 1 }}</ion-item-divider>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-select label=\"Concepto:\" labelPlacement=\"floating\"  interface=\"popover\" id=\"concepto\" formControlName=\"concepto\" (ionChange)=\"onChangeConcepto($event, i)\">\n\t\t\t\t\t\t\t<ion-select-option *ngFor=\"let row of conceptos\" [value]=\"row.NOMBRE\">\n\t\t\t\t\t\t\t\t{{row.NOMBRE}}\n\t\t\t\t\t\t\t</ion-select-option>\n\t\t\t\t\t\t</ion-select>\n\t\t\t\t\t</ion-item>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-label floating>Mes:</ion-label>\n\t\t\t\t\t\t\t<!-- <ion-input type=\"date\" maxlength=\"50\" formControlName=\"mes\"></ion-input> -->\n\t\t\t\t\t\t\t<ion-datetime id=\"mes\" displayFormat=\"MMM. YYYY\" formControlName=\"mes\"\n\t\t\t\t\t\t\tmonthShortNames=\"Ene, Feb, Mar, Apr, May, Jun, Jul, Ago, Sep, Oct, Nov, Dic\"\n\t\t\t\t\t\t\tpresentation=\"month-year\"\n\t\t\t\t\t\t[preferWheel]=\"true\">\n\t\t\t\t\t\t</ion-datetime>\n\t\t\t\t\t</ion-item>\n\t\t\t\t\t<ion-item>\n\t\t\t\t\t\t<ion-input label=\"Monto:\" labelPlacement=\"floating\"  id=\"monto\" type=\"number\" maxlength=\"50\" formControlName=\"monto\"></ion-input>\n\t\t\t\t\t</ion-item>\n\t\t\t\t\t<!-- Allow generated input field to be removed -->\n\t\t\t\t\t<ion-button size=\"small\" fill=\"clear\" color=\"danger\" *ngIf=\"conceptoForm.length > 1\"\n                     (click)=\"removeInputField(i)\">\n                     <ion-icon name=\"close\"></ion-icon>\n                     eliminar\n                  </ion-button>\n\t\t\t\t</ion-item-group>\n\t\t\t</section>\n\t\t</div>\n\t\t<!-- Allow new input field to be generated/added -->\n\t\t<ion-button size=\"small\" fill=\"clear\" color=\"primary\"\n            (click)=\"addNewInputField()\">\n            <ion-icon slot=\"start\" name=\"add\"></ion-icon>\n\t\t\tnuevo concepto\n         </ion-button>\n\t\t<ion-button type=\"submit\" expand=\"block\" [disabled]=\"!fields.valid\" >Agregar</ion-button>\n\t</form>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  ActionSheetController,\n  LoadingController,\n  ModalController\n} from '@ionic/angular';\nimport {\n  Casa,\n  Concepto,\n  ConceptoDef,\n  Recibo,\n  ReciboDetalle,\n  ReciboMaxFolio,\n  Usuario\n} from '../../interface/recibos';\nimport { RecibosService } from '../../service/recibos.service';\nimport { LoadingUtil } from '../../utils/loadingUtil';\nimport { ToastUtil } from '../../utils/toastUtil';\nimport { AlertUtil } from 'src/app/utils/alertUtil';\nimport { PrefijoDef } from '../../interface/recibos';\n\n@Component({\n  selector: 'app-add-recibos',\n  templateUrl: './add-recibos.component.html',\n  styleUrls: ['./add-recibos.component.css'],\n  standalone: false,\n})\n// export class AddRecibosComponent extends LoadingUtil implements OnInit {\nexport class AddRecibosComponent implements OnInit {\n  user: Usuario | null = null;\n  item: Recibo = {\n    FOLIO: 0,\n    CASA: '',\n    NOMBRE: '',\n    CANTIDAD: '',\n    CONCEPTO: '',\n    FECHA: '',\n    CORREO: '',\n    INPUT_TIMESTAMP: '',\n    PREFIX: '',\n  };\n  itemDetail: ReciboDetalle[] = [];\n  itemDetailConfirms : ReciboDetalle[] = [];\n  casas: Casa[] = [];\n  casa: Casa | any;\n  conceptos: ConceptoDef[] = [];\n  prefijos: PrefijoDef[] = [];\n  data: boolean = false;\n  sendEmail: boolean = false;\n\n  date = new Date(); // Or the date you'd like converted.\n  today = new Date(\n    this.date.getTime() - this.date.getTimezoneOffset() * 60000\n  );\n  public fields: FormGroup;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController,\n    private formBuilder: FormBuilder,\n    private service: RecibosService,\n    // loadingCtrl: LoadingController,\n    private loadingUtil: LoadingUtil,\n    private toastUtil: ToastUtil,\n    private alertUtil: AlertUtil\n  ) {\n    // super(loadingCtrl);\n    this.fields = this.formBuilder.group({\n      prefijo: ['', Validators.required],\n      folio: ['', Validators.required],\n      casa: ['', Validators.required],\n      nombre: ['', Validators.required],\n      fecha: ['', Validators.required],\n      email: ['', Validators.required],\n      sendEmail: '',\n      cantidad: ['', Validators.required],\n      conceptos: this.formBuilder.array([this.frmConceptos()])\n    });\n  }\n\n  frmConceptos(): FormGroup {\n    return this.formBuilder.group({\n      concepto: ['', [Validators.required, Validators.minLength(3)]],\n      mes: ['', [Validators.required]],\n      monto: ['', [Validators.required, Validators.min(0), Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]]\n    });\n  }\n\n  get conceptoForm() {\n    return this.fields.get('conceptos') as FormArray;\n  }\n\n  ngOnInit() {\n    this.service.getSpreadSheetId().then(() => {\n      // const FOLIO = this.getMaxFolio();\n      const formattedDate = this.today.toJSON().split('T')[0];\n      this.fields.patchValue({ fecha: formattedDate });\n      this.inittial();\n      // this.dismiss();\n    });\n    this.loadingUtil.showing();\n  }\n\n  /**\n   * @deprecated Use getMaxFolio with subscription instead\n   */\n  getMaxFolio() {\n    this.service.getFullDataDetail().subscribe(\n      {\n         next: (resp: ReciboDetalle[] | any) => {\n          const FOLIO = Math.max(...resp.map((row: { FOLIO: any; }) => row.FOLIO)) + 1;\n          this.fields.patchValue({ folio: FOLIO });\n          this.loadingUtil.dismiss();\n        }, error: err => {\n          const FOLIO = 1;\n          this.fields.patchValue({ folio: FOLIO });\n          this.loadingUtil.dismiss();\n          this.alertUtil.showError('No se pudo obtener el folio: ' + err.message);\n        }\n      });\n  }\n\n  inittial() {\n    const userStr = localStorage.getItem('user');\n    this.user = userStr ? JSON.parse(userStr) : null;\n    this.service.getFullData().subscribe({\n      next: (resp: Casa[] | any) => {\n      this.casas = resp || [];\n      // this.dismiss();\n      this.service.getConceptos().subscribe((resp: ConceptoDef[] | any) => {\n        this.conceptos = resp || [];\n        // console.log(this.conceptos);\n        // this.getMaxFolio();\n        });\n      this.service.getPrefijos().subscribe((resp: PrefijoDef[] | any) => {\n        this.prefijos = resp || [];\n        this.calPrefijoUser();\n        this.loadingUtil.dismiss();\n        });\n      },\n      error: async (err) => {\n        console.error('Error al cargar datos:', err);\n        this.loadingUtil.dismiss();\n        this.alertUtil.showError('No se pudieron cargar los datos: ' + err.message);\n      }\n    });\n  }\n\n  onChangeCasa(event: CustomEvent) {\n    const _casa: Casa = event.detail.value;\n    if (_casa.ID) {\n      this.casa = this.casas.find((data: Casa) => {\n        if (data.ID === _casa.ID && data.NOMBRE === _casa.NOMBRE) {\n          return data;\n        }\n        return null;\n      });\n\n      this.fields.patchValue({\n        nombre: this.casa.NOMBRE,\n        email: this.casa.EMAIL,\n        sendEmail: true\n      });\n    }\n  }\n\n  onChangePrefijo(event: CustomEvent) {\n    const _prefijo: PrefijoDef = event.detail.value;\n    if (!_prefijo) return;\n    let prefijo = this.prefijos.find((data: PrefijoDef) => data.NOMBRE === _prefijo.NOMBRE);\n    this.fields.patchValue({\n        folio: (prefijo?.FOLIO ?? 0) + 1\n      });\n  }\n\n  onChangeConcepto(event: CustomEvent, i: number) {\n    const _concepto: ConceptoDef = event.detail.value;\n    if (_concepto) {\n      const control = <FormArray>this.fields.controls['conceptos'];\n      let _monto = this.calMontoConcepto();\n      control.at(i).patchValue({\n        mes: this.getFirstDayOfMonth(),\n        monto: _monto\n      });\n    }\n  }\n\n  calMontoConcepto() {\n    const control = <FormArray>this.fields.controls['conceptos'];\n    let sumMonto: number = 0;\n      control.controls.forEach((data: any) => {\n        sumMonto += data.value.monto;\n      });\n      return this.fields.value.cantidad - sumMonto;\n  }\n\n  getFirstDayOfMonth() {\n    const firstDayOfMonth = new Date(this.today.getFullYear(), this.today.getMonth(), 1).toJSON().split('T')[0];\n    return firstDayOfMonth;\n  }\n\n  async onSave(_recibo: any) {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: '¿Desea guardar el recibo?',\n      buttons: [\n        {\n          text: 'Guardar',\n          role: 'confirm',\n          icon: 'checkmark',\n          handler: () => {\n            this.save(_recibo);\n          }\n        },\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          icon: 'close',\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  save(_recibo: any) {\n    let _casa = _recibo.casa;\n    _recibo.casa = _casa.ID;\n    let _folio = _recibo.folio;\n    let _prefijo = _recibo.prefijo?.PREFIX ?? '';\n    this.fillEvent(_recibo);\n    this.service.save(this.item, this.itemDetail).subscribe( {\n      next: resp => {\n        // console.log(\"resp save item\", resp);\n        if (this.sendEmail) {\n          let fecha = new Date(_recibo.fecha);\n          let date = new Date(\n            fecha.getTime() + this.date.getTimezoneOffset() * 60000\n          ); //add 1 day\n          // console.log(_recibo.fecha);\n          _recibo.fecha = date.toLocaleDateString();\n          // console.log(_recibo.fecha);\n          this.service.sendEmail(_recibo, _recibo.conceptos).subscribe({\n            next: resp => {\n              // console.log('resp save item', resp);\n              this.meesageToast('correo enviado');\n            },\n            error: err => {\n              console.log('Error email: ', err);\n            }\n          });\n        }\n        this.meesageToast('Se guardo exitosamente');\n        this.loadingUtil.dismiss();\n        this.itemDetail = this.convertMonth(this.itemDetail);\n        this.calSavePrefijos(_folio, _prefijo)\n        // this.confirm(this.itemDetail);\n        this.otherSave(this.itemDetail);\n      },\n      error: err => {\n        //console.log(\"Error Detail: \", err);\n        this.meesageToast('No se pudo guardar el dato');\n        this.loadingUtil.dismiss();\n      }\n  });\n    this.loadingUtil.showing();\n    _recibo.sendEmail = true;\n  }\n\n  async otherSave(_itemDetail: any) {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: '¿Desea agregar otro recibo ?',\n      buttons: [\n        {\n          text: 'Otro recibo',\n          role: 'other',\n          icon: 'add',\n          handler: () => {\n            this.fields.reset();\n            const formattedDate = this.today.toJSON().split('T')[0];\n            this.fields.patchValue({ fecha: formattedDate });\n            this.calPrefijoUser();\n            this.itemDetailConfirms.push(..._itemDetail);\n          }\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          icon: 'checkmark',\n          handler: () => {\n          this.itemDetailConfirms.push(..._itemDetail);\n           console.log(this.itemDetailConfirms);\n            this.confirm(this.itemDetailConfirms);\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\nconvertMonth(itemDetail: ReciboDetalle[]) {\n    return itemDetail.map(item => {\n      // 1. Toma el string y separa\n      const [yyyy, mm, dd] = item.MES?.split('-') || [];\n      // 3. Crea fecha ISO agregando hora\n      const isoString = `${yyyy}-${mm}-${dd}T06:00:00.000Z`;\n      // 4. Devuelve el nuevo objeto con MES modificado\n      return { ...item, MES: isoString };\n    });\n  }\n\n  calPrefijoUser(){\n    let prefijo = this.prefijos.find((data: PrefijoDef) =>\n      data.NOMBRE?.toUpperCase() === this.user?.ID?.toUpperCase() && this.user?.ROLE === 'user'\n    );\n    if (prefijo) {\n      this.fields.patchValue({\n        prefijo: prefijo.NOMBRE,\n        folio: prefijo?.FOLIO + 1\n      });\n    }\n  }\n\n  calSavePrefijos(_folio: number, _prefijo: string) {\n    if (!_prefijo) return;\n    let prefijoToUpdate = this.prefijos.find(p => p.PREFIX === _prefijo);\n    if (prefijoToUpdate) {\n      prefijoToUpdate.FOLIO = _folio;\n    }\n\n  }\n\n  fillEvent(_recibo: any) {\n    // console.log(\"event\", _recibo);\n    this.item.FOLIO = _recibo.folio;\n    let fecha = new Date(_recibo.fecha);\n    this.item.FECHA = _recibo.fecha;\n    this.item.CASA = _recibo.casa;\n    this.item.NOMBRE = _recibo.nombre;\n    this.item.CORREO = _recibo.email;\n    this.item.CANTIDAD = _recibo.cantidad;\n    this.item.PREFIX = _recibo.prefijo?.PREFIX ?? '';\n    // console.log(\"this.item\", this.item);\n    var conceptos = _recibo.conceptos;\n    this.itemDetail = [];\n    if (conceptos) {\n      this.item.CONCEPTO = _recibo.conceptos[0].concepto;\n      //console.log(\"conceptos\", conceptos);\n      conceptos.forEach((data: Concepto) => {\n        var detail: ReciboDetalle = {};\n        detail.FOLIO = _recibo.folio;\n        detail.CASA = _recibo.casa;\n        detail.NOMBRE = _recibo.nombre;\n        detail.CONCEPTO = data.concepto;\n        detail.MES = data.mes;\n        detail.MONTO = data.monto;\n        detail.PREFIX = _recibo.prefijo?.PREFIX ?? '';\n        //console.log(\"detail\", detail);\n        this.itemDetail.push(detail);\n      });\n    }\n    // console.log(\"this.itemDetail\", this.itemDetail);\n  }\n\n  removeInputField(i: number): void {\n    const control = <FormArray>this.fields.controls['conceptos'];\n    control.removeAt(i);\n  }\n\n  addNewInputField(): void {\n    const control = <FormArray>this.fields.controls['conceptos'];\n    control.push(this.frmConceptos());\n  }\n\n  /* async meesageToast(_message: string) {\n    let toast = await this.toastCtrl.create({\n      message: _message,\n      duration: 3000,\n      position: 'top'\n    });\n\n    toast.present();\n  } */\n\n  meesageToast(_message: string) {\n    this.toastUtil.presentToast(_message, \"top\");\n  }\n\n  confirm(reciboDetalles: any) {\n      this.modalCtrl.dismiss(reciboDetalles, 'confirm');\n  }\n\n  close() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\n\n@Injectable({ providedIn: 'root' })\nexport class AlertUtil {\n\n  constructor(private alertCtrl: AlertController) {}\n\n  async showSucess(message: string) {\n    const alert = await this.alertCtrl.create({\n      header: 'Exito',\n      message: message,\n      buttons: ['OK'],\n    });\n    await alert.present();\n    console.log('Success:', message);\n  }\n\n  async showError(message: string) {\n    const alert = await this.alertCtrl.create({\n      header: 'Error',\n      message: message,\n      buttons: ['OK'],\n    });\n    await alert.present();\n    console.error('Error:', message);\n  }\n\n}\n"],"x_google_ignoreList":[]}