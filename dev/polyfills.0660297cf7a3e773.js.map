{"version":3,"file":"polyfills.0660297cf7a3e773.js","mappings":"wHAKCA,OAAeC,+BAAgC;;;;;;ACChD,MAAMC,EAASC,WAGf,SAASC,EAAWC,GAEhB,OADqBH,EAAOI,sBAA2B,mBACjCD,CAC1B,CA2oBA,MAAME,GAAiCC,OAAOC,yBAExCC,GAAuBF,OAAOG,eAE9BC,GAAuBJ,OAAOK,eAE9BC,GAAeN,OAAOO,OAEtBC,GAAaC,MAAMC,UAAUC,MAE7BC,GAAyB,mBAEzBC,GAA4B,sBAE5BC,GAAiClB,EAAWgB,IAE5CG,GAAoCnB,EAAWiB,IAE/CG,GAAW,OAEXC,GAAY,QAEZC,GAAqBtB,EAAW,IACtC,SAASuB,GAAoBC,EAAUC,GACnC,OAAOC,KAAKC,QAAQC,KAAKJ,EAAUC,EACvC,CACA,SAASI,GAAiCJ,EAAQD,EAAUM,EAAMC,EAAgBC,GAC9E,OAAON,KAAKC,QAAQM,kBAAkBR,EAAQD,EAAUM,EAAMC,EAAgBC,EAClF,CACA,MAAME,EAAalC,EACbmC,UAAwBvC,OAAW,IACnCwC,GAAiBD,GAAiBvC,YAASyC,EAC3CC,EAAWH,IAAkBC,IAAmBrC,WAEtD,SAASwC,GAAcC,EAAMf,GACzB,QAASgB,EAAID,EAAKE,OAAS,EAAGD,GAAK,EAAGA,IACX,mBAAZD,EAAKC,KACZD,EAAKC,GAAKlB,GAAoBiB,EAAKC,GAAIhB,EAAS,IAAMgB,IAG9D,OAAOD,CACX,CAqBA,SAASG,GAAmBC,GACxB,OAAKA,IAGyB,IAA1BA,EAAaC,YAGoB,mBAArBD,EAAaE,YAA6BF,EAAaG,IAAQ,IACnF,CACA,MAAMC,UAAqBC,kBAAsB,KAAeC,gBAAgBD,kBAG1EE,KAAW,OAAQb,WACdA,EAAQc,QAAY,KACI,qBAA/Bd,EAAQc,QAAQC,WACdC,IAAaH,KAAWH,OAAkBb,KAAkBC,GAAemB,aAI3EC,UAAelB,EAAQc,QAAY,KACN,qBAA/Bd,EAAQc,QAAQC,aACfL,OACEb,KAAkBC,GAAemB,aAClCE,GAAyB,CAAC,EAC1BC,GAA2BxB,EAAW,uBACtCyB,GAAS,SAAUC,GAIrB,KADAA,EAAQA,GAAStB,EAAQsB,OAErB,OAEJ,IAAIC,EAAkBJ,GAAuBG,EAAME,MAC9CD,IACDA,EAAkBJ,GAAuBG,EAAME,MAAQ5B,EAAW,cAAgB0B,EAAME,OAE5F,MAAMC,EAASC,MAAQJ,EAAMG,QAAUzB,EACjC2B,EAAWF,EAAOF,GACxB,IAAIK,EACJ,GAAIZ,IAAaS,IAAW3B,IAAiC,UAAfwB,EAAME,KAAkB,CAIlE,MAAMK,EAAaP,EACnBM,EACID,GACIA,EAASG,KAAKJ,KAAMG,EAAWE,QAASF,EAAWG,SAAUH,EAAWI,OAAQJ,EAAWK,MAAOL,EAAWM,QACtG,IAAXP,GACAN,EAAMc,gBAEd,MAEIR,EAASD,GAAYA,EAASU,MAAMX,KAAMY,WAO3B,iBAAfhB,EAAME,MAMFxB,EAAQoB,KAGU,iBAAXQ,EACPN,EAAMiB,YAAcX,EAEL7B,MAAV6B,IAAwBA,GAC7BN,EAAMc,iBAGd,OAAOR,CACX,EACA,SAASY,GAAcC,EAAKC,EAAMlE,GAC9B,IAAImE,EAAO9E,GAA+B4E,EAAKC,GAU/C,IATKC,GAAQnE,GAEaX,GAA+BW,EAAWkE,KAE5DC,EAAO,CAAEC,YAAY,EAAMC,cAAc,KAK5CF,IAASA,EAAKE,aACf,OAEJ,MAAMC,EAAsBlD,EAAW,KAAO8C,EAAO,WACrD,GAAID,EAAIM,eAAeD,IAAwBL,EAAIK,GAC/C,cAOGH,EAAKpC,gBACLoC,EAAKK,MACZ,MAAMC,EAAkBN,EAAKnC,IACvB0C,EAAkBP,EAAKlC,IAEvB0C,EAAYT,EAAKjE,MAAM,GAC7B,IAAI8C,EAAkBJ,GAAuBgC,GACxC5B,IACDA,EAAkBJ,GAAuBgC,GAAavD,EAAW,cAAgBuD,IAErFR,EAAKlC,IAAM,SAAU2C,GAGjB,IAAI3B,EAASC,MACRD,GAAUgB,IAAQzC,IACnByB,EAASzB,GAERyB,IAIwB,mBADPA,EAAOF,IAEzBE,EAAO4B,oBAAoBF,EAAW9B,IAI1C6B,GAAmBA,EAAgBpB,KAAKL,EAAQ,MAChDA,EAAOF,GAAmB6B,EACF,mBAAbA,GACP3B,EAAO6B,iBAAiBH,EAAW9B,IAAQ,GAEnD,EAGAsB,EAAKnC,IAAM,WAGP,IAAIiB,EAASC,KAIb,IAHKD,GAAUgB,IAAQzC,IACnByB,EAASzB,IAERyB,EACD,OAAO,KAEX,MAAME,EAAWF,EAAOF,GACxB,GAAII,EACA,OAAOA,EAEN,GAAIsB,EAAiB,CAOtB,IAAID,EAAQC,EAAgBnB,KAAKJ,MACjC,GAAIsB,EACAL,SAAKlC,IAAIqB,KAAKJ,KAAMsB,GACoB,mBAA7BvB,EAAuB,iBAC9BA,EAAO8B,gBAAgBb,GAEpBM,CAEf,CACA,OAAO,IACX,EACAhF,GAAqByE,EAAKC,EAAMC,GAChCF,EAAIK,IAAuB,CAC/B,CACA,SAASU,GAAkBf,EAAKgB,EAAYjF,GACxC,GAAIiF,EACA,QAAStD,EAAI,EAAGA,EAAIsD,EAAWrD,OAAQD,IACnCqC,GAAcC,EAAK,KAAOgB,EAAWtD,GAAI3B,OAG5C,CACD,MAAMkF,EAAe,GACrB,UAAWhB,KAAQD,EACS,MAApBC,EAAKjE,MAAM,EAAG,IACdiF,EAAaC,KAAKjB,GAG1B,QAASkB,EAAI,EAAGA,EAAIF,EAAatD,OAAQwD,IACrCpB,GAAcC,EAAKiB,EAAaE,GAAIpF,EAE5C,CACJ,CACA,MAAMqF,GAAsBjE,EAAW,oBAEvC,SAASkE,GAAWC,GAChB,MAAMC,EAAgBhE,EAAQ+D,GAC9B,IAAKC,EACD,OAEJhE,EAAQJ,EAAWmE,IAAcC,EACjChE,EAAQ+D,GAAa,WACjB,MAAME,EAAIhE,GAAcqC,UAAWyB,GACnC,OAAQE,EAAE7D,QACN,KAAK,EACDsB,KAAKmC,IAAuB,IAAIG,EAChC,MACJ,KAAK,EACDtC,KAAKmC,IAAuB,IAAIG,EAAcC,EAAE,IAChD,MACJ,KAAK,EACDvC,KAAKmC,IAAuB,IAAIG,EAAcC,EAAE,GAAIA,EAAE,IACtD,MACJ,KAAK,EACDvC,KAAKmC,IAAuB,IAAIG,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC5D,MACJ,KAAK,EACDvC,KAAKmC,IAAuB,IAAIG,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAClE,MACJ,QACI,MAAM,IAAIC,MAAM,sBAE5B,EAEAC,GAAsBnE,EAAQ+D,GAAYC,GAC1C,MAAMI,EAAW,IAAIJ,EAAc,WAAc,GACjD,IAAItB,EACJ,IAAKA,KAAQ0B,EAES,mBAAdL,GAA2C,iBAATrB,GAErC,SAAUA,GACuB,mBAAnB0B,EAAS1B,GAChB1C,EAAQ+D,GAAWvF,UAAUkE,GAAQ,WACjC,OAAOhB,KAAKmC,IAAqBnB,GAAML,MAAMX,KAAKmC,IAAsBvB,UAC5E,EAGAtE,GAAqBgC,EAAQ+D,GAAWvF,UAAWkE,EAAM,CACrDjC,IAAK,SAAU4D,GACO,mBAAPA,GACP3C,KAAKmC,IAAqBnB,GAAQzD,GAAoBoF,EAAIN,EAAY,IAAMrB,GAI5EyB,GAAsBzC,KAAKmC,IAAqBnB,GAAO2B,IAGvD3C,KAAKmC,IAAqBnB,GAAQ2B,CAE1C,EACA7D,IAAK,WACD,OAAOkB,KAAKmC,IAAqBnB,EACrC,GAGZ,CAzBC,CAyBEA,GAEP,IAAKA,KAAQsB,EACI,cAATtB,GAAwBsB,EAAcjB,eAAeL,KACrD1C,EAAQ+D,GAAWrB,GAAQsB,EAActB,GAGrD,CACA,SAAS4B,GAAY7C,EAAQ9D,EAAM4G,GAC/B,IAAIC,EAAQ/C,EACZ,KAAO+C,IAAUA,EAAMzB,eAAepF,IAClC6G,EAAQtG,GAAqBsG,IAE5BA,GAAS/C,EAAO9D,KAEjB6G,EAAQ/C,GAEZ,MAAMgD,EAAe7E,EAAWjC,GAChC,IAAI+G,EAAW,KACf,GAAIF,MAAYE,EAAWF,EAAMC,MAAmBD,EAAMzB,eAAe0B,IAAgB,CACrFC,EAAWF,EAAMC,GAAgBD,EAAM7G,GAIvC,GAAI0C,GADSmE,GAAS3G,GAA+B2G,EAAO7G,IAC9B,CAC1B,MAAMgH,EAAgBJ,EAAQG,EAAUD,EAAc9G,GACtD6G,EAAM7G,GAAQ,WACV,OAAOgH,EAAcjD,KAAMY,UAC/B,EACA6B,GAAsBK,EAAM7G,GAAO+G,EACvC,CACJ,CACA,OAAOA,CACX,CAEA,SAASE,GAAenC,EAAKoC,EAAUC,GACnC,IAAIC,EAAY,KAChB,SAASC,EAAaC,GAClB,MAAMzF,EAAOyF,EAAKzF,KAClBA,SAAKU,KAAKV,EAAK0F,OAAS,WACpBD,EAAKE,OAAO9C,MAAMX,KAAMY,UAC5B,EACAyC,EAAU1C,MAAM7C,EAAKiC,OAAQjC,EAAKU,MAC3B+E,CACX,CACAF,EAAYT,GAAY7B,EAAKoC,EAAWH,GAAa,SAAU9D,EAAMV,GACjE,MAAMkF,EAAON,EAAYlE,EAAMV,GAC/B,OAAIkF,EAAKF,OAAS,GAAiC,mBAArBhF,EAAKkF,EAAKF,OAC7B3F,GAAiC6F,EAAKzH,KAAMuC,EAAKkF,EAAKF,OAAQE,EAAMJ,GAIpEN,EAASrC,MAAMzB,EAAMV,EAEpC,EACJ,CACA,SAASiE,GAAsBkB,EAASC,GACpCD,EAAQzF,EAAW,qBAAuB0F,CAC9C,CACA,IAAIC,IAAqB,EACrBC,IAAW,EAWf,SAASC,KACL,GAAIF,GACA,OAAOC,GAEXD,IAAqB,EACrB,IACI,MAAMG,EAAK5F,GAAe6F,UAAUC,YACR,IAAxBF,EAAGG,QAAQ,WAA8C,IAA3BH,EAAGG,QAAQ,cAA8C,IAAxBH,EAAGG,QAAQ,YAC1EL,IAAW,EAEnB,OACgB,CAChB,OAAOA,EACX,CACA,SAASM,GAAW9C,GAChB,MAAwB,mBAAVA,CAClB,CACA,SAAS+C,GAAS/C,GACd,MAAwB,iBAAVA,CAClB,CAUA,IAAIgD,IAAmB,EACvB,UAAW1I,OAAW,IAClB,IACI,MAAM2I,EAAUnI,OAAOG,eAAe,CAAC,EAAG,UAAW,CACjDuC,IAAK,WACDwF,IAAmB,CACvB,IAKJ1I,OAAOgG,iBAAiB,OAAQ2C,EAASA,GACzC3I,OAAO+F,oBAAoB,OAAQ4C,EAASA,EAChD,OAEID,IAAmB,CACvB,CAGJ,MAAME,GAAiC,CACnCC,MAAM,GAEJC,GAAuB,CAAC,EACxBC,GAAgB,CAAC,EACjBC,GAAyB,IAAIC,OAAO,IAAMvH,GAAqB,uBAC/DwH,GAA+B5G,EAAW,sBAChD,SAAS6G,GAAkBtD,EAAWuD,GAClC,MAAMC,GAAkBD,EAAoBA,EAAkBvD,GAAaA,GAAapE,GAClF6H,GAAiBF,EAAoBA,EAAkBvD,GAAaA,GAAarE,GACjF+H,EAAS7H,GAAqB2H,EAC9BG,EAAgB9H,GAAqB4H,EAC3CR,GAAqBjD,GAAa,CAAC,EACnCiD,GAAqBjD,GAAWpE,IAAa8H,EAC7CT,GAAqBjD,GAAWrE,IAAYgI,CAChD,CACA,SAASC,GAAiB/G,EAASgH,EAAKC,EAAMC,GAC1C,MAAMC,EAAsBD,GAAgBA,EAAaE,KAAQ1I,GAC3D2I,EAAyBH,GAAgBA,EAAaI,IAAO3I,GAC7D4I,EAA4BL,GAAgBA,EAAaM,WAAc,iBACvEC,EAAuCP,GAAgBA,EAAaQ,OAAU,qBAC9EC,EAA6B/H,EAAWuH,GACxCS,EAA4B,IAAMT,EAAqB,IACvDU,EAAyB,kBACzBC,EAAgC,IAAMD,EAAyB,IAC/DE,EAAa,SAAU9C,EAAMxD,EAAQH,GAGvC,GAAI2D,EAAK+C,UACL,OAEJ,MAAMtD,EAAWO,EAAK/F,SAUtB,IAAIiD,EAToB,iBAAbuC,GAAyBA,EAASuD,cAEzChD,EAAK/F,SAAYoC,GAAUoD,EAASuD,YAAY3G,GAChD2D,EAAKiD,iBAAmBxD,GAO5B,IACIO,EAAKE,OAAOF,EAAMxD,EAAQ,CAACH,GAC/B,OACO6G,GACHhG,EAAQgG,CACZ,CACA,MAAMlC,EAAUhB,EAAKgB,QACrB,GAAIA,GAA8B,iBAAZA,GAAwBA,EAAQmC,KAAM,CAIxD,MAAM1D,EAAWO,EAAKiD,iBAAmBjD,EAAKiD,iBAAmBjD,EAAK/F,SACtEuC,EAAO4F,GAAuBvF,KAAKL,EAAQH,EAAME,KAAMkD,EAAUuB,EACrE,CACA,OAAO9D,CACX,EACA,SAASkG,EAAeC,EAAShH,EAAOiH,GAIpC,KADAjH,EAAQA,GAAStB,EAAQsB,OAErB,OAIJ,MAAMG,EAAS6G,GAAWhH,EAAMG,QAAUzB,EACpCwI,EAAQ/G,EAAO2E,GAAqB9E,EAAME,MAAM+G,EAAYzJ,GAAWC,KAC7E,GAAIyJ,EAAO,CACP,MAAMC,EAAS,GAGf,GAAqB,IAAjBD,EAAMpI,OAAc,CACpB,MAAM+H,EAAMJ,EAAWS,EAAM,GAAI/G,EAAQH,GACzC6G,GAAOM,EAAO9E,KAAKwE,EACvB,KACK,CAID,MAAMO,EAAYF,EAAM/J,QACxB,QAAS0B,EAAI,EAAGA,EAAIuI,EAAUtI,UACtBkB,IAAiD,IAAxCA,EAAMkF,KADerG,IAAK,CAIvC,MAAMgI,EAAMJ,EAAWW,EAAUvI,GAAIsB,EAAQH,GAC7C6G,GAAOM,EAAO9E,KAAKwE,EACvB,CACJ,CAGA,GAAsB,IAAlBM,EAAOrI,OACP,MAAMqI,EAAO,GAGb,QAAStI,EAAI,EAAGA,EAAIsI,EAAOrI,OAAQD,IAAK,CACpC,MAAMgI,EAAMM,EAAOtI,GACnB6G,EAAI2B,wBAAwB,KACxB,MAAMR,GAEd,CAER,CACJ,CAEA,MAAMS,EAA0B,SAAUtH,GACtC,OAAO+G,EAAe3G,KAAMJ,GAAO,EACvC,EAEMuH,EAAiC,SAAUvH,GAC7C,OAAO+G,EAAe3G,KAAMJ,GAAO,EACvC,EACA,SAASwH,GAAwBrG,EAAKyE,GAClC,IAAKzE,EACD,OAAO,EAEX,IAAIsG,GAAoB,EACpB7B,QAAsCnH,IAAtBmH,EAAaf,OAC7B4C,EAAoB7B,EAAaf,MAErC,MAAM6C,EAAkB9B,GAAgBA,EAAa+B,GACrD,IAAIC,GAAiB,EACjBhC,QAAwCnH,IAAxBmH,EAAaiC,SAC7BD,EAAiBhC,EAAaiC,QAElC,IAAIC,GAAe,EACflC,QAAoCnH,IAApBmH,EAAamC,KAC7BD,EAAelC,EAAamC,IAEhC,IAAI7E,EAAQ/B,EACZ,KAAO+B,IAAUA,EAAMzB,eAAeoE,IAClC3C,EAAQtG,GAAqBsG,GASjC,IAPKA,GAAS/B,EAAI0E,KAEd3C,EAAQ/B,IAEP+B,GAGDA,EAAMmD,GACN,OAAO,EAEX,MAAMjB,EAAoBQ,GAAgBA,EAAaR,kBASjD4C,EAAW,CAAC,EACZC,EAA0B/E,EAAMmD,GAA8BnD,EAAM2C,GACpEqC,EAA6BhF,EAAM5E,EAAWyH,IAChD7C,EAAM6C,GACJoC,EAAmBjF,EAAM5E,EAAW2H,IACtC/C,EAAM+C,GACJmC,EAA4BlF,EAAM5E,EAAW6H,IAC/CjD,EAAMiD,GACV,IAAIkC,GACAzC,GAAgBA,EAAa0C,UAC7BD,GAA6BnF,EAAM5E,EAAWsH,EAAa0C,UACvDpF,EAAM0C,EAAa0C,UA2B3B,MAgEMnK,EAAiBsJ,EAhEM,SAAU9D,GAGnC,IAAIqE,EAASO,WAGb,OAAON,EAAuBzH,KAAKwH,EAAS7H,OAAQ6H,EAASnG,UAAWmG,EAASQ,QAAUjB,EAAiCD,EAAyBU,EAASrD,QAClK,EAgDgC,SAAUhB,GACtC,OAAOsE,EAAuBzH,KAAKwH,EAAS7H,OAAQ6H,EAASnG,UAAW8B,EAAKE,OAAQmE,EAASrD,QAClG,EAQMvG,EAAeqJ,EAnDM,SAAU9D,GAIjC,IAAKA,EAAK+C,UAAW,CACjB,MAAM+B,EAAmB3D,GAAqBnB,EAAK9B,WACnD,IAAI6G,EACAD,IACAC,EAAkBD,EAAiB9E,EAAK6E,QAAUhL,GAAWC,KAEjE,MAAMkL,EAAgBD,GAAmB/E,EAAKxD,OAAOuI,GACrD,GAAIC,EACA,QAAS9J,EAAI,EAAGA,EAAI8J,EAAc7J,OAAQD,IAEtC,GADqB8J,EAAc9J,KACd8E,EAAM,CACvBgF,EAAcC,OAAO/J,EAAG,GAExB8E,EAAK+C,WAAY,EACb/C,EAAKkF,sBACLlF,EAAKkF,sBACLlF,EAAKkF,oBAAsB,MAEF,IAAzBF,EAAc7J,SAGd6E,EAAKmF,YAAa,EAClBnF,EAAKxD,OAAOuI,GAAmB,MAEnC,KACJ,CAGZ,CAIA,GAAK/E,EAAKmF,WAGV,OAAOZ,EAA0B1H,KAAKmD,EAAKxD,OAAQwD,EAAK9B,UAAW8B,EAAK6E,QAAUjB,EAAiCD,EAAyB3D,EAAKgB,QACrJ,EAO8B,SAAUhB,GACpC,OAAOuE,EAA0B1H,KAAKmD,EAAKxD,OAAQwD,EAAK9B,UAAW8B,EAAKE,OAAQF,EAAKgB,QACzF,EAQMoE,GAAUnD,GAAgBA,EAAaoD,KAAOpD,EAAaoD,KAL3B,SAAUrF,EAAMP,GAClD,MAAM6F,SAAwB7F,EAC9B,MAA4B,aAAnB6F,GAAiCtF,EAAK/F,WAAawF,GACpC,WAAnB6F,GAA+BtF,EAAKiD,mBAAqBxD,CAClE,EAEM8F,GAAkBpL,KAAKQ,EAAW,qBAClC6K,GAAgBzK,EAAQJ,EAAW,mBAuBzC,MAAM8K,EAAkB,SAAUC,EAAgBC,EAAWC,EAAkBC,EAAgB1B,GAAe,EAAOQ,GAAU,GAC3H,OAAO,WACH,MAAMnI,EAASC,MAAQ1B,EACvB,IAAImD,EAAYb,UAAU,GACtB4E,GAAgBA,EAAa6D,oBAC7B5H,EAAY+D,EAAa6D,kBAAkB5H,IAE/C,IAAIuB,EAAWpC,UAAU,GACzB,IAAKoC,EACD,OAAOiG,EAAetI,MAAMX,KAAMY,WAEtC,GAAIzB,IAAwB,sBAAdsC,EAEV,OAAOwH,EAAetI,MAAMX,KAAMY,WAKtC,IAAI0I,GAAgB,EACpB,GAAwB,mBAAbtG,EAAyB,CAChC,IAAKA,EAASuD,YACV,OAAO0C,EAAetI,MAAMX,KAAMY,WAEtC0I,GAAgB,CACpB,CACA,GAAIhC,IAAoBA,EAAgB2B,EAAgBjG,EAAUjD,EAAQa,WACtE,OAEJ,MAAM2I,GAAUjF,MAAsByE,KAAsD,IAArCA,GAAc5E,QAAQ1C,GACvE8C,GAnDd,SAASiF,EAAyBjF,GAC9B,GAAuB,iBAAZA,GAAoC,OAAZA,EAAkB,CAIjD,MAAMkF,EAAa,IAAKlF,GAUxB,OAAIA,EAAQmF,SACRD,EAAWC,OAASnF,EAAQmF,QAEzBD,CACX,CACA,OAAOlF,CACX,CA8BwBiF,CAlJxB,SAASG,EAA0BpF,EAASgF,GACxC,OAAKjF,IAAuC,iBAAZC,GAAwBA,IAI3CA,EAAQ6D,QAEhB9D,IAAqBiF,EAGH,kBAAZhF,EACA,CAAE6D,QAAS7D,EAASgF,SAAS,GAEnChF,EAGkB,iBAAZA,IAA4C,IAApBA,EAAQgF,QAChC,IAAKhF,EAASgF,SAAS,GAE3BhF,EALI,CAAEgF,SAAS,GANXhF,CAYf,CA8HiDoF,CAA0B/I,UAAU,GAAI2I,KAC3EG,GAAgB,MAAPnF,QAAO,EAAPA,GAASmF,OACxB,GAAU,MAANA,OAAQE,QAER,OAEJ,GAAId,GAEA,QAASrK,GAAI,EAAGA,GAAIqK,GAAgBpK,OAAQD,KACxC,GAAIgD,IAAcqH,GAAgBrK,IAC9B,OAAI8K,GACON,EAAe7I,KAAKL,EAAQ0B,EAAWuB,EAAUuB,IAGjD0E,EAAetI,MAAMX,KAAMY,WAKlD,MAAMwH,KAAW7D,KAAqC,kBAAZA,IAA+BA,GAAQ6D,SAC3E1B,MAAOnC,IAA8B,iBAAZA,KAAuBA,GAAQmC,KACxDmD,GAAOnM,KAAKC,QAClB,IAAI0K,GAAmB3D,GAAqBjD,GACvC4G,KACDtD,GAAkBtD,EAAWuD,GAC7BqD,GAAmB3D,GAAqBjD,IAE5C,MAAM6G,GAAkBD,GAAiBD,GAAUhL,GAAWC,IAC9D,IAiBII,GAjBA8K,GAAgBxI,EAAOuI,IACvBH,IAAa,EACjB,GAAII,IAGA,GADAJ,IAAa,EACTX,EACA,QAAS/I,GAAI,EAAGA,GAAI8J,GAAc7J,OAAQD,KACtC,GAAIkK,GAAQJ,GAAc9J,IAAIuE,GAE1B,YAMZuF,GAAgBxI,EAAOuI,IAAmB,GAG9C,MAAMwB,GAAkB/J,EAAOgK,YAAY9N,KACrC+N,GAAerF,GAAcmF,IAC/BE,KACAvM,GAASuM,GAAavI,IAErBhE,KACDA,GACIqM,GACIZ,GACClE,EAAoBA,EAAkBvD,GAAaA,IAOhEmG,EAASrD,QAAUA,GACfmC,KAIAkB,EAASrD,QAAQmC,MAAO,GAE5BkB,EAAS7H,OAASA,EAClB6H,EAASQ,QAAUA,GACnBR,EAASnG,UAAYA,EACrBmG,EAASO,WAAaA,GACtB,MAAMrK,GAAOuJ,EAAoB7C,QAAiCnG,EAE9DP,KACAA,GAAK8J,SAAWA,GAEhB8B,KAIA9B,EAASrD,QAAQmF,YAASrL,GAM9B,MAAMkF,GAAOsG,GAAKI,kBAAkBxM,GAAQuF,EAAUlF,GAAMqL,EAAkBC,GAC9E,GAAIM,GAAQ,CAER9B,EAASrD,QAAQmF,OAASA,GAI1B,MAAMQ,GAAUA,IAAM3G,GAAKsG,KAAKM,WAAW5G,IAC3C0F,EAAe7I,KAAKsJ,GAAQ,QAASQ,GAAS,CAAExD,MAAM,IAKtDnD,GAAKkF,oBAAsB,IAAMiB,GAAO/H,oBAAoB,QAASuI,GACzE,CA+BA,OA5BAtC,EAAS7H,OAAS,KAEdjC,KACAA,GAAK8J,SAAW,MAIhBlB,KACAkB,EAASrD,QAAQmC,MAAO,IAErBpC,IAA4C,kBAAjBf,GAAKgB,UAGnChB,GAAKgB,QAAUA,IAEnBhB,GAAKxD,OAASA,EACdwD,GAAK6E,QAAUA,GACf7E,GAAK9B,UAAYA,EACb6H,IAEA/F,GAAKiD,iBAAmBxD,GAEvBkF,EAIDK,GAAc6B,QAAQ7G,IAHtBgF,GAActG,KAAKsB,IAKnBmE,EACO3H,OADX,CAGJ,CACJ,EACA+C,SAAM2C,GAAsBuD,EAAgBnB,EAAwB3B,EAA2BnI,EAAgBC,EAAc0J,GACzHO,KACAnF,EAAMqD,GAA0B6C,EAAgBf,GAA4B7B,EA/MlD,SAAU7C,GACpC,OAAO0E,GAA2B7H,KAAKwH,EAAS7H,OAAQ6H,EAASnG,UAAW8B,EAAKE,OAAQmE,EAASrD,QACtG,EA6MsIvG,EAAc0J,GAAc,IAElK5E,EAAM6C,GAAyB,WAC3B,MAAM5F,EAASC,MAAQ1B,EACvB,IAAImD,EAAYb,UAAU,GACtB4E,GAAgBA,EAAa6D,oBAC7B5H,EAAY+D,EAAa6D,kBAAkB5H,IAE/C,MAAM8C,EAAU3D,UAAU,GACpBwH,IAAW7D,IAAqC,kBAAZA,GAA+BA,EAAQ6D,SAC3EpF,EAAWpC,UAAU,GAC3B,IAAKoC,EACD,OAAO8E,EAA0BnH,MAAMX,KAAMY,WAEjD,GAAI0G,IACCA,EAAgBQ,EAA2B9E,EAAUjD,EAAQa,WAC9D,OAEJ,MAAMyH,EAAmB3D,GAAqBjD,GAC9C,IAAI6G,EACAD,IACAC,EAAkBD,EAAiBD,EAAUhL,GAAWC,KAE5D,MAAMkL,EAAgBD,GAAmBvI,EAAOuI,GAKhD,GAAIC,EACA,QAAS9J,EAAI,EAAGA,EAAI8J,EAAc7J,OAAQD,IAAK,CAC3C,MAAM4L,EAAe9B,EAAc9J,GACnC,GAAIkK,GAAQ0B,EAAcrH,GAAW,CAIjC,GAHAuF,EAAcC,OAAO/J,EAAG,GAExB4L,EAAa/D,WAAY,EACI,IAAzBiC,EAAc7J,SAGd2L,EAAa3B,YAAa,EAC1B3I,EAAOuI,GAAmB,MAMrBF,GAAgC,iBAAd3G,GAAwB,CAE3C1B,EADyBzC,GAAqB,cAAgBmE,GACnC,IAC/B,CAQJ,OADA4I,EAAaR,KAAKM,WAAWE,GACzB3C,EACO3H,OAEX,CACJ,CACJ,CAQJ,OAAO+H,EAA0BnH,MAAMX,KAAMY,UACjD,EACAkC,EAAM+C,GAA4B,WAC9B,MAAM9F,EAASC,MAAQ1B,EACvB,IAAImD,EAAYb,UAAU,GACtB4E,GAAgBA,EAAa6D,oBAC7B5H,EAAY+D,EAAa6D,kBAAkB5H,IAE/C,MAAMqE,EAAY,GACZgB,EAAQwD,GAAevK,EAAQiF,EAAoBA,EAAkBvD,GAAaA,GACxF,QAAShD,EAAI,EAAGA,EAAIqI,EAAMpI,OAAQD,IAAK,CACnC,MAAM8E,EAAOuD,EAAMrI,GACnB,IAAIuE,EAAWO,EAAKiD,iBAAmBjD,EAAKiD,iBAAmBjD,EAAK/F,SACpEsI,EAAU7D,KAAKe,EACnB,CACA,OAAO8C,CACX,EACAhD,EAAMiD,GAAuC,WACzC,MAAMhG,EAASC,MAAQ1B,EACvB,IAAImD,EAAYb,UAAU,GAC1B,GAAKa,EAiBA,CACG+D,GAAgBA,EAAa6D,oBAC7B5H,EAAY+D,EAAa6D,kBAAkB5H,IAE/C,MAAM4G,EAAmB3D,GAAqBjD,GAC9C,GAAI4G,EAAkB,CAClB,MAAMC,EAAkBD,EAAiBhL,IACnCkN,EAAyBlC,EAAiBjL,IAC1C0J,EAAQ/G,EAAOuI,GACfkC,EAAezK,EAAOwK,GAC5B,GAAIzD,EAAO,CACP,MAAM2D,EAAc3D,EAAM/J,QAC1B,QAAS0B,EAAI,EAAGA,EAAIgM,EAAY/L,OAAQD,IAAK,CACzC,MAAM8E,EAAOkH,EAAYhM,GACzB,IAAIuE,GAAWO,EAAKiD,iBAAmBjD,EAAKiD,iBAAmBjD,EAAK/F,SACpEwC,KAAK2F,GAAuBvF,KAAKJ,KAAMyB,EAAWuB,GAAUO,EAAKgB,QACrE,CACJ,CACA,GAAIiG,EAAc,CACd,MAAMC,EAAcD,EAAazN,QACjC,QAAS0B,EAAI,EAAGA,EAAIgM,EAAY/L,OAAQD,IAAK,CACzC,MAAM8E,EAAOkH,EAAYhM,GACzB,IAAIuE,GAAWO,EAAKiD,iBAAmBjD,EAAKiD,iBAAmBjD,EAAK/F,SACpEwC,KAAK2F,GAAuBvF,KAAKJ,KAAMyB,EAAWuB,GAAUO,EAAKgB,QACrE,CACJ,CACJ,CACJ,KA5CgB,CACZ,MAAMmG,EAAOtO,OAAOsO,KAAK3K,GACzB,QAAStB,EAAI,EAAGA,EAAIiM,EAAKhM,OAAQD,IAAK,CAClC,MAAMuC,EAAO0J,EAAKjM,GACZkM,EAAQ/F,GAAuBgG,KAAK5J,GAC1C,IAAI6J,EAAUF,GAASA,EAAM,GAKzBE,GAAuB,mBAAZA,GACX7K,KAAK+F,GAAqC3F,KAAKJ,KAAM6K,EAE7D,CAEA7K,KAAK+F,GAAqC3F,KAAKJ,KAAM,iBACzD,CA6BA,GAAI0H,EACA,OAAO1H,IAEf,EAEAyC,GAAsBK,EAAM2C,GAAqBoC,GACjDpF,GAAsBK,EAAM6C,GAAwBmC,GAChDE,GACAvF,GAAsBK,EAAMiD,GAAsCiC,GAElED,GACAtF,GAAsBK,EAAM+C,GAA2BkC,IAEpD,CACX,CACA,IAAI+C,EAAU,GACd,QAASrM,EAAI,EAAGA,EAAI8G,EAAK7G,OAAQD,IAC7BqM,EAAQrM,GAAK2I,GAAwB7B,EAAK9G,GAAI+G,GAElD,OAAOsF,CACX,CACA,SAASR,GAAevK,EAAQ0B,GAC5B,IAAKA,EAAW,CACZ,MAAMsJ,EAAa,GACnB,QAAS/J,KAAQjB,EAAQ,CACrB,MAAM4K,EAAQ/F,GAAuBgG,KAAK5J,GAC1C,IAAI6J,EAAUF,GAASA,EAAM,GAC7B,GAAIE,KAAapJ,GAAaoJ,IAAYpJ,GAAY,CAClD,MAAMqF,EAAQ/G,EAAOiB,GACrB,GAAI8F,EACA,QAASrI,EAAI,EAAGA,EAAIqI,EAAMpI,OAAQD,IAC9BsM,EAAW9I,KAAK6E,EAAMrI,GAGlC,CACJ,CACA,OAAOsM,CACX,CACA,IAAIzC,EAAkB5D,GAAqBjD,GACtC6G,IACDvD,GAAkBtD,GAClB6G,EAAkB5D,GAAqBjD,IAE3C,MAAMuJ,EAAoBjL,EAAOuI,EAAgBjL,KAC3C4N,EAAmBlL,EAAOuI,EAAgBlL,KAChD,OAAK4N,EAIMC,EACDD,EAAkBE,OAAOD,GACzBD,EAAkBjO,QALjBkO,EAAmBA,EAAiBlO,QAAU,EAO7D,CACA,SAASoO,GAAoBrP,EAAQwJ,GACjC,MAAM8F,EAAQtP,EAAOsP,MACjBA,GAASA,EAAMtO,WACfwI,EAAI1C,YAAYwI,EAAMtO,UAAW,2BAA6BkG,GAAa,SAAU9D,EAAMV,GACvFU,EAAK4F,KAAgC,EAIrC9B,GAAYA,EAASrC,MAAMzB,EAAMV,EACrC,EAER,CAkBA,MAAM6M,GAAanN,EAAW,YAC9B,SAASoN,GAAW1P,EAAQ2P,EAASC,EAAYC,GAC7C,IAAIpI,EAAY,KACZqI,EAAc,KAElBF,GAAcC,EACd,MAAME,EAAkB,CAAC,EACzB,SAASrI,EAAaC,GAClB,MAAMzF,EAAOyF,EAAKzF,KAClBA,EAAKU,KAAK,GAAK,WACX,OAAO+E,EAAKE,OAAO9C,MAAMX,KAAMY,UACnC,EACA,MAAMgL,EAAavI,EAAU1C,MAAM/E,EAAQkC,EAAKU,MAIhD,OAAI6F,GAASuH,GACT9N,EAAK+N,SAAWD,GAGhB9N,EAAKgO,OAASF,EAEd9N,EAAKiO,cAAgB3H,GAAWwH,EAAWI,UAExCzI,CACX,CACA,SAAS0I,EAAU1I,GACf,MAAQuI,SAAQD,YAAatI,EAAKzF,KAClC,OAAO4N,EAAYtL,KAAKxE,EAAc,MAANkQ,IAAUD,EAC9C,CACAxI,EAAYT,GAAYhH,EA1BxB2P,GAAWE,EA0B+BzI,GAAa,SAAU9D,EAAMV,GACnE,GAAI4F,GAAW5F,EAAK,IAAK,KAAA0N,EACrB,MAAM3H,EAAU,CACZwH,eAAe,EACfI,WAA2B,aAAfV,EACZW,MAAsB,YAAfX,GAA2C,aAAfA,EAA4BjN,EAAK,IAAM,OAAIH,EAC9EG,KAAMA,GAEJhB,EAAWgB,EAAK,GACtBA,EAAK,GAAK,WACN,IACI,OAAOhB,EAASmD,MAAMX,KAAMY,UAChC,SASI,MAAQkL,SAAQD,WAAUM,aAAYJ,iBAAkBxH,GACnD4H,IAAeJ,IACZF,SAGOF,EAAgBE,GAElBC,IAGLA,EAAOT,IAAc,MAGjC,CACJ,EACA,MAAM9H,EAAO1F,GAAiC0N,EAAS/M,EAAK,GAAI+F,EAASjB,EAAc2I,GACvF,IAAK1I,EACD,OAAOA,EAGX,MAAQsI,YAAUC,SAAQC,gBAAeI,cAAe5I,EAAKzF,KAC7D,GAAI+N,GAGAF,EAAgBE,IAAYtI,UAEvBuI,IAGLA,EAAOT,IAAc9H,EACjBwI,IAAkBI,GAAY,CAC9B,MAAME,EAAkBP,EAAOE,QAC/BF,EAAOE,QAAU,WACb,MAAQnC,OAAMyC,SAAU/I,EACxB,MAAc,iBAAV+I,GACA/I,EAAKgJ,OAAS,YACd1C,EAAK2C,iBAAiBjJ,EAAM,IAEb,YAAV+I,IACL/I,EAAKgJ,OAAS,cAEXF,EAAgBjM,KAAKJ,KAChC,CACJ,CAEJ,OAAyB,QAAzBkM,EAAa,MAANJ,IAAUD,UAAQ,IAAAK,IAAI3I,CACjC,CAGI,OAAOP,EAASrC,MAAM/E,EAAQ4C,EAEtC,GACAkN,EAAc9I,GAAYhH,EAAQ4P,EAAaxI,GAAa,SAAU9D,EAAMV,GAAM,IAAAiO,EAC9E,MAAMC,EAAKlO,EAAK,GAChB,IAAI+E,EACAc,GAASqI,IAETnJ,EAAOoI,EAAgBe,UAChBf,EAAgBe,KAIvBnJ,EAAS,MAAFmJ,OAAE,EAAFA,EAAKrB,IACR9H,EACAmJ,EAAGrB,IAAc,KAGjB9H,EAAOmJ,GAGP,QAARD,EAAIlJ,SAAI,IAAAkJ,GAAJA,EAAM3M,KACFyD,EAAKoJ,UAELpJ,EAAKsG,KAAKM,WAAW5G,GAKzBP,EAASrC,MAAM/E,EAAQ4C,EAE/B,EACJ,CAqDA,SAASoO,GAAiB7M,EAAQiC,EAAc6K,GAC5C,IAAKA,GAAgD,IAA5BA,EAAiBnO,OACtC,OAAOsD,EAEX,MAAM8K,EAAMD,EAAiBE,OAAQC,GAAOA,EAAGjN,SAAWA,GAC1D,IAAK+M,GAAsB,IAAfA,EAAIpO,OACZ,OAAOsD,EAEX,MAAMiL,EAAyBH,EAAI,GAAGD,iBACtC,OAAO7K,EAAa+K,OAAQG,IAA8C,IAAvCD,EAAuB9I,QAAQ+I,GACtE,CACA,SAASC,GAAwBpN,EAAQiC,EAAc6K,EAAkB/P,GAGrE,IAAKiD,EACD,OAGJ+B,GAAkB/B,EADS6M,GAAiB7M,EAAQiC,EAAc6K,GACpB/P,EAClD,CAKA,SAASsQ,GAAgBrN,GACrB,OAAO3D,OAAOiR,oBAAoBtN,GAC7BgN,OAAQ9Q,GAASA,EAAKqR,WAAW,OAASrR,EAAKyC,OAAS,GACxD6O,IAAKtR,GAASA,EAAKuR,UAAU,GACtC,CACA,SAASC,GAAwBnI,EAAKhH,GAIlC,GAHIa,KAAWK,IAGX9B,KAAK4H,EAAIH,OAAO,gBAEhB,OAEJ,MAAM0H,EAAmBvO,EAAQoP,4BAEjC,IAAIC,EAAe,GACnB,GAAIrO,GAAW,CACX,MAAMlB,EAAiBxC,OACvB+R,EAAeA,EAAazC,OAAO,CAC/B,WACA,aACA,UACA,cACA,kBACA,mBACA,sBACA,mBACA,oBACA,qBACA,WAEJ,MAAM0C,EA38Bd,SAASC,KACL,IACI,MAAM7J,EAAK5F,GAAe6F,UAAUC,UACpC,IAA4B,IAAxBF,EAAGG,QAAQ,WAA8C,IAA3BH,EAAGG,QAAQ,YACzC,OAAO,CAEf,OACgB,CAChB,OAAO,CACX,CAk8BsC0J,GACxB,CAAC,CAAE9N,OAAQ3B,EAAgByO,iBAAkB,CAAC,WAC9C,GAGNM,GAAwB/O,EAAgBgP,GAAgBhP,GAAiByO,GAAmBA,EAAiB3B,OAAO0C,GAA2CpR,GAAqB4B,GACxL,CACAuP,EAAeA,EAAazC,OAAO,CAC/B,iBACA,4BACA,WACA,aACA,mBACA,cACA,iBACA,YACA,cAEJ,QAASzM,EAAI,EAAGA,EAAIkP,EAAajP,OAAQD,IAAK,CAC1C,MAAMsB,EAASzB,EAAQqP,EAAalP,IACpCsB,GACIA,EAAOjD,WACPqQ,GAAwBpN,EAAOjD,UAAWsQ,GAAgBrN,EAAOjD,WAAY+P,EACrF,CACJ,CAqQA,SAASiB,GAAapQ,GAClBA,EAAKqQ,aAAa,mBAAoB,CAACjS,EAAQ4B,EAAM4H,KACjD,MAAMnJ,EAAiCC,OAAOC,yBACxCC,EAAuBF,OAAOG,eAQpC,MAAMP,EAAasJ,EAAIH,OACjB6I,EAAyB,GACzBC,GAAkH,IAAtEnS,EAAOE,EAAW,gDAC9DkS,EAAgBlS,EAAW,WAC3BmS,EAAanS,EAAW,QAE9BsJ,EAAI8I,iBAAoBC,IACpB,GAAI/I,EAAIgJ,oBAAqB,CACzB,MAAMC,EAAYF,GAAKA,EAAEE,UACrBA,EACAC,QAAQ/N,MAAM,+BAAgC8N,aAAqB/L,MAAQ+L,EAAUlO,QAAUkO,EAAW,UAAWF,EAAExE,KAAK5N,KAAM,UAAWoS,EAAE9K,MAAQ8K,EAAE9K,KAAK9F,OAAQ,WAAY8Q,EAAWA,aAAqB/L,MAAQ+L,EAAUE,WAAQpQ,GAG5OmQ,QAAQ/N,MAAM4N,EAEtB,GAEJ/I,EAAIoJ,mBAAqB,KACrB,KAAOV,EAAuBtP,QAAQ,CAClC,MAAMiQ,EAAuBX,EAAuBY,QACpD,IACID,EAAqB9E,KAAKgF,WAAW,KACjC,MAAIF,EAAqBG,cACfH,EAAqBJ,UAEzBI,GAEd,OACOlO,GACHsO,EAAyBtO,EAC7B,CACJ,GAEJ,MAAMuO,EAA6ChT,EAAW,oCAC9D,SAAS+S,EAAyBV,GAC9B/I,EAAI8I,iBAAiBC,GACrB,IACI,MAAMY,EAAUvR,EAAKsR,GACE,mBAAZC,GACPA,EAAQ7O,KAAKJ,KAAMqO,EAE3B,OACc,CAClB,CACA,SAASa,EAAW5N,GAChB,OAAOA,GAASA,EAAM6N,IAC1B,CACA,SAASC,GAAkB9N,GACvB,OAAOA,CACX,CACA,SAAS+N,EAAiBd,GACtB,OAAOe,EAAiBC,OAAOhB,EACnC,CACA,MAAMiB,EAAcxT,EAAW,SACzByT,EAAczT,EAAW,SACzB0T,EAAgB1T,EAAW,WAC3B2T,EAA2B3T,EAAW,sBACtC4T,EAA2B5T,EAAW,sBAEtC6T,EAAa,KACbC,GAAW,EACXC,GAAW,EAEjB,SAASC,EAAaC,EAAS3D,GAC3B,OAAQ4D,IACJ,IACIC,EAAeF,EAAS3D,EAAO4D,EACnC,OACOzJ,GACH0J,EAAeF,GAAS,EAAOxJ,EACnC,EAGR,CACA,MAAMC,EAAO,WACT,IAAI0J,GAAY,EAChB,OAAO,SAAiBC,GACpB,OAAO,WACCD,IAGJA,GAAY,EACZC,EAAgB1P,MAAM,KAAMC,WAChC,CACJ,CACJ,EACM0P,EAAa,+BACbC,GAA4BvU,EAAW,oBAE7C,SAASmU,EAAeF,EAAS3D,EAAOhL,GACpC,MAAMkP,EAAc9J,IACpB,GAAIuJ,IAAY3O,EACZ,MAAM,IAAImP,UAAUH,GAExB,GAAIL,EAAQT,KAAiBK,EAAY,CAErC,IAAIV,EAAO,KACX,KACyB,iBAAV7N,GAAuC,mBAAVA,KACpC6N,EAAO7N,GAASA,EAAM6N,KAE9B,OACO1I,GACH+J,SAAY,KACRL,EAAeF,GAAS,EAAOxJ,EAAG,EADtC+J,GAGOP,CACX,CAEA,GAAI3D,IAAUyD,GACVzO,aAAiBgO,GACjBhO,EAAMD,eAAemO,IACrBlO,EAAMD,eAAeoO,IACrBnO,EAAMkO,KAAiBK,EACvBa,EAAqBpP,GACrB6O,EAAeF,EAAS3O,EAAMkO,GAAclO,EAAMmO,SAAY,GAEzDnD,IAAUyD,GAA4B,mBAATZ,EAClC,IACIA,EAAK/O,KAAKkB,EAAOkP,EAAYR,EAAaC,EAAS3D,IAASkE,EAAYR,EAAaC,GAAS,IAClG,OACOxJ,GACH+J,EAAY,KACRL,EAAeF,GAAS,EAAOxJ,EAAG,EADtC+J,EAGJ,KAEC,CACDP,EAAQT,GAAelD,EACvB,MAAMqE,EAAQV,EAAQR,GAatB,GAZAQ,EAAQR,GAAenO,EACnB2O,EAAQP,KAAmBA,GAEvBpD,IAAUwD,IAGVG,EAAQT,GAAeS,EAAQL,GAC/BK,EAAQR,GAAeQ,EAAQN,IAKnCrD,IAAUyD,GAAYzO,aAAiBkB,MAAO,CAE9C,MAAMoO,EAAQlT,EAAKmT,aACfnT,EAAKmT,YAAY/S,MACjBJ,EAAKmT,YAAY/S,KAAkB,kBACnC8S,GAEAtU,EAAqBgF,EAAOiP,GAA2B,CACnDpP,cAAc,EACdD,YAAY,EACZrC,UAAU,EACVyC,MAAOsP,GAGnB,CACA,QAASnS,EAAI,EAAGA,EAAIkS,EAAMjS,QACtBoS,EAAwBb,EAASU,EAAMlS,KAAMkS,EAAMlS,KAAMkS,EAAMlS,KAAMkS,EAAMlS,MAE/E,GAAoB,GAAhBkS,EAAMjS,QAAe4N,GAASyD,EAAU,CACxCE,EAAQT,GAnGE,EAoGV,IAAIb,EAAuBrN,EAC3B,IAII,MAAM,IAAIkB,MAAM,0BA9KpC,SAASuO,EAAuBhQ,GAC5B,GAAIA,GAAOA,EAAI1B,WAAajD,OAAOU,UAAUuC,SAEzC,OADkB0B,EAAIgJ,aAAehJ,EAAIgJ,YAAY9N,MACrB,IAAM,KAAO+U,KAAKC,UAAUlQ,GAEhE,OAAOA,EAAMA,EAAI1B,WAAajD,OAAOU,UAAUuC,SAASe,KAAKW,EACjE,CAyKwBgQ,CAAuBzP,IACtBA,GAASA,EAAMmN,MAAQ,KAAOnN,EAAMmN,MAAQ,IACrD,OACOhI,GACHkI,EAAuBlI,CAC3B,CACIwH,IAGAU,EAAqBG,eAAgB,GAEzCH,EAAqBJ,UAAYjN,EACjCqN,EAAqBsB,QAAUA,EAC/BtB,EAAqB9E,KAAOnM,EAAKC,QACjCgR,EAAqBpL,KAAO7F,EAAKmT,YACjC7C,EAAuB/L,KAAK0M,GAC5BrJ,EAAI4L,mBACR,CACJ,CACJ,CAEA,OAAOjB,CACX,CACA,MAAMkB,EAA4BnV,EAAW,2BAC7C,SAAS0U,EAAqBT,GAC1B,GAnIsB,IAmIlBA,EAAQT,GAAoC,CAM5C,IACI,MAAMP,EAAUvR,EAAKyT,GACjBlC,GAA8B,mBAAZA,GAClBA,EAAQ7O,KAAKJ,KAAM,CAAEuO,UAAW0B,EAAQR,GAAcQ,QAASA,GAEvE,OACc,CACdA,EAAQT,GAAeO,EACvB,QAAStR,EAAI,EAAGA,EAAIuP,EAAuBtP,OAAQD,IAC3CwR,IAAYjC,EAAuBvP,GAAGwR,SACtCjC,EAAuBxF,OAAO/J,EAAG,EAG7C,CACJ,CACA,SAASqS,EAAwBb,EAASpG,EAAMuH,EAAcC,EAAaC,GACvEZ,EAAqBT,GACrB,MAAMsB,EAAetB,EAAQT,GACvBxM,EAAWuO,EACY,mBAAhBF,EACHA,EACAjC,GACkB,mBAAfkC,EACHA,EACAjC,EACVxF,EAAKqH,kBAtKM,eAsKoB,KAC3B,IACI,MAAMM,EAAqBvB,EAAQR,GAC7BgC,IAAqBL,GAAgB1B,IAAkB0B,EAAa1B,GACtE+B,IAEAL,EAAazB,GAA4B6B,EACzCJ,EAAaxB,GAA4B2B,GAG7C,MAAMjQ,EAAQuI,EAAK6H,IAAI1O,OAAU3E,EAAWoT,GAAoBzO,IAAaqM,GAAoBrM,IAAaoM,GACxG,GACA,CAACoC,IACPrB,EAAeiB,GAAc,EAAM9P,EACvC,OACOb,GAEH0P,EAAeiB,GAAc,EAAO3Q,EACxC,GACD2Q,EACP,CACA,MACMO,EAAO,WAAc,EACrBC,EAAiB9V,EAAO8V,eAC9B,MAAMtC,EACF,eAAOjQ,GACH,MAL6B,+CAMjC,CACA,cAAOwS,CAAQvQ,GACX,OAAIA,aAAiBgO,EACVhO,EAEJ6O,EAAe,IAAInQ,KAAK,MAAO8P,EAAUxO,EACpD,CACA,aAAOiO,CAAO9O,GACV,OAAO0P,EAAe,IAAInQ,KAAK,MAAO+P,EAAUtP,EACpD,CACA,oBAAOqR,GACH,MAAM5R,EAAS,CAAC,EAChBA,SAAO+P,QAAU,IAAIX,EAAiB,CAACyC,EAAKC,KACxC9R,EAAO2R,QAAUE,EACjB7R,EAAOqP,OAASyC,IAEb9R,CACX,CACA,UAAO+R,CAAIC,GACP,IAAKA,GAA6C,mBAA5BA,EAAOC,OAAOC,UAChC,OAAOC,QAAQ9C,OAAO,IAAIqC,EAAe,GAAI,+BAEjD,MAAMU,EAAW,GACjB,IAAIC,EAAQ,EACZ,IACI,QAASrC,KAAKgC,EACVK,IACAD,EAASrQ,KAAKqN,EAAiBuC,QAAQ3B,GAE/C,OAEI,OAAOmC,QAAQ9C,OAAO,IAAIqC,EAAe,GAAI,8BACjD,CACA,GAAc,IAAVW,EACA,OAAOF,QAAQ9C,OAAO,IAAIqC,EAAe,GAAI,+BAEjD,IAAIY,GAAW,EACf,MAAMzL,EAAS,GACf,OAAO,IAAIuI,EAAiB,CAACuC,EAAStC,KAClC,QAAS9Q,EAAI,EAAGA,EAAI6T,EAAS5T,OAAQD,IACjC6T,EAAS7T,GAAG0Q,KAAMe,IACVsC,IAGJA,GAAW,EACXX,EAAQ3B,GAAC,EACTzJ,IACAM,EAAO9E,KAAKwE,GACZ8L,IACc,IAAVA,IACAC,GAAW,EACXjD,EAAO,IAAIqC,EAAe7K,EAAQ,+BAA6B,EAEtE,EAGb,CACA,WAAO0L,CAAKP,GACR,IAAIL,EACAtC,EACAU,EAAU,IAAIjQ,KAAK,CAAC+R,EAAKC,KACzBH,EAAUE,EACVxC,EAASyC,IAEb,SAASU,EAAUpR,GACfuQ,EAAQvQ,EACZ,CACA,SAASqR,EAASlS,GACd8O,EAAO9O,EACX,CACA,QAASa,KAAS4Q,EACThD,EAAW5N,KACZA,EAAQtB,KAAK6R,QAAQvQ,IAEzBA,EAAM6N,KAAKuD,EAAWC,GAE1B,OAAO1C,CACX,CACA,UAAO2C,CAAIV,GACP,OAAO5C,EAAiBuD,gBAAgBX,EAC5C,CACA,iBAAOY,CAAWZ,GAEd,OADUlS,MAAQA,KAAKlD,qBAAqBwS,EAAmBtP,KAAOsP,GAC7DuD,gBAAgBX,EAAQ,CAC7Ba,aAAezR,KAAa0R,OAAQ,YAAa1R,UACjD2R,cAAgBxM,KAAWuM,OAAQ,WAAYE,OAAQzM,KAE/D,CACA,sBAAOoM,CAAgBX,EAAQ1U,GAC3B,IAAIqU,EACAtC,EACAU,EAAU,IAAIjQ,KAAK,CAAC+R,EAAKC,KACzBH,EAAUE,EACVxC,EAASyC,IAGTmB,EAAkB,EAClBC,EAAa,EACjB,MAAMC,EAAiB,GACvB,QAAS/R,KAAS4Q,EAAQ,CACjBhD,EAAW5N,KACZA,EAAQtB,KAAK6R,QAAQvQ,IAEzB,MAAMgS,EAAgBF,EACtB,IACI9R,EAAM6N,KAAM7N,IACR+R,EAAeC,GAAiB9V,EAAWA,EAASuV,aAAazR,GAASA,EAC1E6R,IACwB,IAApBA,GACAtB,EAAQwB,EAAc,EAE1B5M,IACKjJ,GAID6V,EAAeC,GAAiB9V,EAASyV,cAAcxM,GACvD0M,IACwB,IAApBA,GACAtB,EAAQwB,IANZ9D,EAAO9I,EAAG,EAUtB,OACO8M,GACHhE,EAAOgE,EACX,CACAJ,IACAC,GACJ,CAEAD,UAAmB,EACK,IAApBA,GACAtB,EAAQwB,GAELpD,CACX,CACAlG,YAAYyJ,GACR,MAAMvD,EAAUjQ,KAChB,KAAMiQ,aAAmBX,GACrB,MAAM,IAAI9M,MAAM,kCAEpByN,EAAQT,GAAeK,EACvBI,EAAQR,GAAe,GACvB,IACI,MAAMe,EAAc9J,IACpB8M,GACIA,EAAShD,EAAYR,EAAaC,EAASH,IAAYU,EAAYR,EAAaC,EAASF,IACjG,OACOtP,GACH0P,EAAeF,GAAS,EAAOxP,EACnC,CACJ,CACA,IAAK0R,OAAOsB,eACR,MAAO,SACX,CACA,IAAKtB,OAAOuB,WACR,OAAOpE,CACX,CACAH,KAAKkC,EAAaC,GAAY,IAAAqC,EAS1B,IAAIC,EAAoB,QAAnBD,EAAG3T,KAAK+J,mBAAW,IAAA4J,OAAA,EAAhBA,EAAmBxB,OAAOuB,WAC7BE,GAAkB,mBAANA,KACbA,EAAI5T,KAAK+J,aAAeuF,GAE5B,MAAM8B,EAAe,IAAIwC,EAAEjC,GACrB9H,EAAOnM,EAAKC,QAClB,OAAIqC,KAAKwP,IAAgBK,EACrB7P,KAAKyP,GAAaxN,KAAK4H,EAAMuH,EAAcC,EAAaC,GAGxDR,EAAwB9Q,KAAM6J,EAAMuH,EAAcC,EAAaC,GAE5DF,CACX,CACAyC,MAAMvC,GACF,OAAOtR,KAAKmP,KAAK,KAAMmC,EAC3B,CACAwC,QAAQC,GAAW,IAAAC,EAEf,IAAIJ,EAAoB,QAAnBI,EAAGhU,KAAK+J,mBAAW,IAAAiK,OAAA,EAAhBA,EAAmB7B,OAAOuB,WAC7BE,GAAkB,mBAANA,KACbA,EAAItE,GAER,MAAM8B,EAAe,IAAIwC,EAAEjC,GAC3BP,EAAa1B,GAAiBA,EAC9B,MAAM7F,EAAOnM,EAAKC,QAClB,OAAIqC,KAAKwP,IAAgBK,EACrB7P,KAAKyP,GAAaxN,KAAK4H,EAAMuH,EAAc2C,EAAWA,GAGtDjD,EAAwB9Q,KAAM6J,EAAMuH,EAAc2C,EAAWA,GAE1D3C,CACX,EAIJ9B,EAAiBuC,QAAavC,EAAiBuC,QAC/CvC,EAAiBC,OAAYD,EAAiBC,OAC9CD,EAAiBmD,KAAUnD,EAAiBmD,KAC5CnD,EAAiBsD,IAAStD,EAAiBsD,IAC3C,MAAMqB,GAAiBnY,EAAOoS,GAAiBpS,EAAOuW,QACtDvW,EAAOuW,QAAa/C,EACpB,MAAM4E,GAAoBlY,EAAW,eACrC,SAASmY,GAAUC,GACf,MAAMtR,EAAQsR,EAAKtX,UACbkE,EAAO7E,EAA+B2G,EAAO,QACnD,GAAI9B,KAA2B,IAAlBA,EAAKnC,WAAuBmC,EAAKG,cAG1C,OAEJ,MAAMkT,EAAevR,EAAMqM,KAE3BrM,EAAMqL,GAAckG,EACpBD,EAAKtX,UAAUqS,KAAO,SAAUuD,EAAWC,GAIvC,OAHgB,IAAIrD,EAAiB,CAACuC,EAAStC,KAC3C8E,EAAajU,KAAKJ,KAAM6R,EAAStC,EAAM,GAE5BJ,KAAKuD,EAAWC,EACnC,EACAyB,EAAKF,KAAqB,CAC9B,CAeA,OAdA5O,EAAI6O,UAAYA,GAcZF,KACAE,GAAUF,IACVrR,GAAY9G,EAAQ,QAAUkH,GAflC,SAASsR,GAAQ3R,GACb,OAAO,SAAUzD,EAAMV,GACnB,IAAI+V,EAAgB5R,EAAGhC,MAAMzB,EAAMV,GACnC,GAAI+V,aAAyBjF,EACzB,OAAOiF,EAEX,IAAIC,EAAOD,EAAcxK,YACzB,OAAKyK,EAAKN,KACNC,GAAUK,GAEPD,CACX,CACJ,CAG+CD,CAAQtR,KAGvDqP,QAAQ3U,EAAK1B,WAAW,0BAA4BgS,EAC7CsB,GAEf,CAmDA,SAASmF,GAAenP,EAAKvF,EAAQ2U,EAAYC,EAAQC,GACrD,MAAMzP,EAASzH,KAAK1B,WAAW2Y,GAC/B,GAAI5U,EAAOoF,GACP,OAEJ,MAAM0P,EAAkB9U,EAAOoF,GAAUpF,EAAO4U,GAChD5U,EAAO4U,GAAU,SAAU1Y,EAAM6Y,EAAMvQ,GACnC,OAAIuQ,GAAQA,EAAKhY,WACb8X,EAAUG,QAAQ,SAAUvX,GACxB,MAAMC,EAAS,GAAGiX,KAAcC,MAAanX,EACvCV,EAAYgY,EAAKhY,UASvB,IACI,GAAIA,EAAUuE,eAAe7D,GAAW,CACpC,MAAMwX,EAAa1P,EAAInJ,+BAA+BW,EAAWU,GAC7DwX,GAAcA,EAAW1T,OACzB0T,EAAW1T,MAAQgE,EAAI/H,oBAAoByX,EAAW1T,MAAO7D,GAC7D6H,EAAI2P,kBAAkBH,EAAKhY,UAAWU,EAAUwX,IAE3ClY,EAAUU,KACfV,EAAUU,GAAY8H,EAAI/H,oBAAoBT,EAAUU,GAAWC,GAE3E,MACSX,EAAUU,KACfV,EAAUU,GAAY8H,EAAI/H,oBAAoBT,EAAUU,GAAWC,GAE3E,OAGI,CAER,GAEGoX,EAAezU,KAAKL,EAAQ9D,EAAM6Y,EAAMvQ,EACnD,EACAe,EAAI7C,sBAAsB1C,EAAO4U,GAASE,EAC9C,CA4DA,MAAMK,GArxEN,SAASC,KAAW,IAAAC,EAUhB,MAAMtZ,EAASC,WACTyL,GAAmE,IAAlD1L,EAAOE,EAAW,4BACzC,GAAIF,EAAO4B,OAAY8J,GAAuD,mBAA9B1L,EAAO4B,KAAQ1B,YAC3D,MAAM,IAAIwG,MAAM,wBAGpB,OAAc,QAAd4S,EAAAtZ,EAAO,eAAO,IAAAsZ,IAAdtZ,EAAM,KA/nBV,SAASuZ,KACL,MAAMC,EAAcxZ,EAAOwZ,YAC3B,SAASC,EAAKtZ,GACVqZ,GAAeA,EAAYC,MAAWD,EAAYC,KAAQtZ,EAC9D,CACA,SAASuZ,EAAmBvZ,EAAMwZ,GAC9BH,GAAeA,EAAYI,SAAcJ,EAAYI,QAAWzZ,EAAMwZ,EAC1E,CACAF,EAAK,QACL,MAAMI,EAGF,wBAAOC,GACH,GAAI9Z,EAAOuW,UAAewD,EAAQvG,iBAC9B,MAAM,IAAI9M,MAAM,gSAMxB,CACA,eAAWsT,GACP,IAAIjM,EAAO8L,EAAShY,QACpB,KAAOkM,EAAKkM,QACRlM,EAAOA,EAAKkM,OAEhB,OAAOlM,CACX,CACA,kBAAWlM,GACP,OAAOqY,EAAkBnM,IAC7B,CACA,sBAAWgH,GACP,OAAOoF,CACX,CAEA,mBAAOlI,CAAa9R,EAAM0G,EAAIuT,GAAkB,GAC5C,GAAIL,EAAQxU,eAAepF,GAAO,CAI9B,MAAMuL,GAAmE,IAAlD1L,EAAOE,EAAW,4BACzC,IAAKka,GAAmB1O,EACpB,MAAMhF,MAAM,yBAA2BvG,EAE/C,UACUH,EAAO,kBAAoBG,GAAO,CACxC,MAAMka,EAAW,QAAUla,EAC3BsZ,EAAKY,GACLN,EAAQ5Z,GAAQ0G,EAAG7G,EAAQ6Z,EAAUS,GACrCZ,EAAmBW,EAAUA,EACjC,CACJ,CACA,UAAIJ,GACA,OAAO/V,KAAKqW,OAChB,CACA,QAAIpa,GACA,OAAO+D,KAAKsW,KAChB,CACAvM,YAAYgM,EAAQQ,GAChBvW,KAAKqW,QAAUN,EACf/V,KAAKsW,MAAQC,EAAWA,EAASta,MAAQ,UAAY,SACrD+D,KAAKwW,YAAeD,GAAYA,EAASxU,YAAe,CAAC,EACzD/B,KAAKyW,cAAgB,IAAIC,EAAc1W,KAAMA,KAAKqW,SAAWrW,KAAKqW,QAAQI,cAAeF,EAC7F,CACAzX,IAAI6X,GACA,MAAM9M,EAAO7J,KAAK4W,YAAYD,GAC9B,GAAI9M,EACA,OAAOA,EAAK2M,YAAYG,EAChC,CACAC,YAAYD,GACR,IAAIhZ,EAAUqC,KACd,KAAOrC,GAAS,CACZ,GAAIA,EAAQ6Y,YAAYnV,eAAesV,GACnC,OAAOhZ,EAEXA,EAAUA,EAAQ0Y,OACtB,CACA,OAAO,IACX,CACAQ,KAAKN,GACD,IAAKA,EACD,MAAM,IAAI/T,MAAM,sBACpB,OAAOxC,KAAKyW,cAAcI,KAAK7W,KAAMuW,EACzC,CACA3Y,KAAKJ,EAAUC,GACX,GAAwB,mBAAbD,EACP,MAAM,IAAIgF,MAAM,2BAA6BhF,GAEjD,MAAMsZ,EAAY9W,KAAKyW,cAAcM,UAAU/W,KAAMxC,EAAUC,GACzDoM,EAAO7J,KACb,OAAO,WACH,OAAO6J,EAAKgF,WAAWiI,EAAW9W,KAAMY,UAAWnD,EACvD,CACJ,CACAiU,IAAIlU,EAAUwZ,EAAWC,EAAWxZ,GAChCuY,EAAoB,CAAED,OAAQC,EAAmBnM,KAAM7J,MACvD,IACI,OAAOA,KAAKyW,cAAchT,OAAOzD,KAAMxC,EAAUwZ,EAAWC,EAAWxZ,EAC3E,SAEIuY,EAAoBA,EAAkBD,MAC1C,CACJ,CACAlH,WAAWrR,EAAUwZ,EAAY,KAAMC,EAAWxZ,GAC9CuY,EAAoB,CAAED,OAAQC,EAAmBnM,KAAM7J,MACvD,IACI,IACI,OAAOA,KAAKyW,cAAchT,OAAOzD,KAAMxC,EAAUwZ,EAAWC,EAAWxZ,EAC3E,OACOgD,GACH,GAAIT,KAAKyW,cAAcS,YAAYlX,KAAMS,GACrC,MAAMA,CAEd,CACJ,SAEIuV,EAAoBA,EAAkBD,MAC1C,CACJ,CACAoB,QAAQ5T,EAAMyT,EAAWC,GACrB,GAAI1T,EAAKsG,MAAQ7J,KACb,MAAM,IAAIwC,MAAM,+DACXe,EAAKsG,MAAQuN,GAASnb,KACvB,gBACA+D,KAAK/D,KACL,KAER,MAAMob,EAAW9T,GAITzD,OAAMhC,MAAQqO,cAAa,EAAOJ,kBAAgB,GAAU,CAAC,GAAMxI,EAC3E,GAAIA,EAAK+I,QAAUgL,IAAiBxX,IAASyX,GAAazX,IAAS0X,GAC/D,OAEJ,MAAMC,GAAelU,EAAK+I,OAASoL,EACnCD,IAAgBJ,EAASM,cAAcD,EAASE,GAChD,MAAMC,GAAe5B,EACrBA,EAAeoB,EACfrB,EAAoB,CAAED,OAAQC,EAAmBnM,KAAM7J,MACvD,IACQF,GAAQ0X,GAAajU,EAAKzF,OAASqO,IAAeJ,KAClDxI,EAAKoJ,cAAWtO,GAEpB,IACI,OAAO2B,KAAKyW,cAAcpQ,WAAWrG,KAAMqX,EAAUL,EAAWC,EACpE,OACOxW,IACH,GAAIT,KAAKyW,cAAcS,YAAYlX,KAAMS,IACrC,MAAMA,EAEd,CACJ,SAII,MAAM6L,GAAQ/I,EAAK+I,MACnB,GAAIA,KAAUgL,GAAgBhL,KAAUwL,EACpC,GAAIhY,GAAQyX,GAAapL,GAAeJ,IAAiBO,KAAUyL,EAC/DN,IAAgBJ,EAASM,cAAcC,EAAWF,EAASK,OAE1D,CACD,MAAMC,EAAgBX,EAASY,eAC/BjY,KAAKwM,iBAAiB6K,GAAU,GAChCI,IAAgBJ,EAASM,cAAcL,EAAcI,EAASJ,GAC1DvL,KACAsL,EAASY,eAAiBD,EAElC,CAEJhC,EAAoBA,EAAkBD,OACtCE,EAAe4B,EACnB,CACJ,CACAvU,aAAaC,GACT,GAAIA,EAAKsG,MAAQtG,EAAKsG,OAAS7J,KAAM,CAGjC,IAAIkY,EAAUlY,KACd,KAAOkY,GAAS,CACZ,GAAIA,IAAY3U,EAAKsG,KACjB,MAAMrH,MAAM,8BAA8BxC,KAAK/D,kDAAkDsH,EAAKsG,KAAK5N,QAE/Gic,EAAUA,EAAQnC,MACtB,CACJ,CACAxS,EAAKoU,cAAcI,EAAYT,GAC/B,MAAMU,EAAgB,GACtBzU,EAAK0U,eAAiBD,EACtBzU,EAAK4U,MAAQnY,KACb,IACIuD,EAAOvD,KAAKyW,cAAcnT,aAAatD,KAAMuD,EACjD,OACOkD,GAGHlD,QAAKoU,cAAcG,EAASC,EAAYT,GAExCtX,KAAKyW,cAAcS,YAAYlX,KAAMyG,GAC/BA,CACV,CACA,OAAIlD,EAAK0U,iBAAmBD,GAExBhY,KAAKwM,iBAAiBjJ,EAAM,GAE5BA,EAAK+I,OAASyL,GACdxU,EAAKoU,cAAcC,EAAWG,GAE3BxU,CACX,CACA2N,kBAAkBzT,EAAQD,EAAUM,EAAMC,GACtC,OAAOiC,KAAKsD,aAAa,IAAI8U,EAASC,EAAW5a,EAAQD,EAAUM,EAAMC,OAAgBM,GAC7F,CACAJ,kBAAkBR,EAAQD,EAAUM,EAAMC,EAAgBC,GACtD,OAAOgC,KAAKsD,aAAa,IAAI8U,EAASZ,EAAW/Z,EAAQD,EAAUM,EAAMC,EAAgBC,GAC7F,CACAiM,kBAAkBxM,EAAQD,EAAUM,EAAMC,EAAgBC,GACtD,OAAOgC,KAAKsD,aAAa,IAAI8U,EAASb,EAAW9Z,EAAQD,EAAUM,EAAMC,EAAgBC,GAC7F,CACAmM,WAAW5G,GACP,GAAIA,EAAKsG,MAAQ7J,KACb,MAAM,IAAIwC,MAAM,qEACXe,EAAKsG,MAAQuN,GAASnb,KACvB,gBACA+D,KAAK/D,KACL,KACR,GAAIsH,EAAK+I,QAAUsL,GAAarU,EAAK+I,QAAUoL,EAG/CnU,GAAKoU,cAAcW,EAAWV,EAAWF,GACzC,IACI1X,KAAKyW,cAActM,WAAWnK,KAAMuD,EACxC,OACOkD,GAEHlD,QAAKoU,cAAcG,EAASQ,GAC5BtY,KAAKyW,cAAcS,YAAYlX,KAAMyG,GAC/BA,CACV,CACA,OAAAzG,KAAKwM,iBAAiBjJ,GAAM,GAC5BA,EAAKoU,cAAcL,EAAcgB,GACjC/U,EAAKgV,UAAW,EACThV,EACX,CACAiJ,iBAAiBjJ,EAAMgP,GACnB,MAAMyF,EAAgBzU,EAAK0U,gBACd,GAAT1F,IACAhP,EAAK0U,eAAiB,MAE1B,QAASxZ,EAAI,EAAGA,EAAIuZ,EAActZ,OAAQD,IACtCuZ,EAAcvZ,GAAG+N,iBAAiBjJ,EAAKzD,KAAMyS,EAErD,EAnPEoD,EAEY3Z,WAAaA,EAmP/B,MAAMwc,EAAc,CAChBvc,KAAM,GACNwc,UAAWA,CAACzV,EAAU0V,EAAG3Y,EAAQ4Y,IAAiB3V,EAAS4V,QAAQ7Y,EAAQ4Y,GAC3EE,eAAgBA,CAAC7V,EAAU0V,EAAG3Y,EAAQwD,IAASP,EAASM,aAAavD,EAAQwD,GAC7EuV,aAAcA,CAAC9V,EAAU0V,EAAG3Y,EAAQwD,EAAMyT,EAAWC,IAAcjU,EAASqD,WAAWtG,EAAQwD,EAAMyT,EAAWC,GAChH8B,aAAcA,CAAC/V,EAAU0V,EAAG3Y,EAAQwD,IAASP,EAASmH,WAAWpK,EAAQwD,IAE7E,MAAMmT,EACF,QAAI7M,GACA,OAAO7J,KAAKmY,KAChB,CACApO,YAAYF,EAAMmP,EAAgBzC,GAC9BvW,KAAKiZ,YAAc,CACfZ,UAAa,EACbb,UAAa,EACbD,UAAa,GAEjBvX,KAAKmY,MAAQtO,EACb7J,KAAKkZ,gBAAkBF,EACvBhZ,KAAKmZ,QAAU5C,IAAaA,GAAYA,EAAS6C,OAAS7C,EAAWyC,EAAeG,SACpFnZ,KAAKqZ,UAAY9C,IAAaA,EAAS6C,OAASJ,EAAiBA,EAAeK,WAChFrZ,KAAKsZ,cACD/C,IAAaA,EAAS6C,OAASpZ,KAAKmY,MAAQa,EAAeM,eAC/DtZ,KAAKuZ,aACDhD,IAAaA,EAASiD,YAAcjD,EAAWyC,EAAeO,cAClEvZ,KAAKyZ,eACDlD,IAAaA,EAASiD,YAAcR,EAAiBA,EAAeS,gBACxEzZ,KAAK0Z,mBACDnD,IAAaA,EAASiD,YAAcxZ,KAAKmY,MAAQa,EAAeU,oBACpE1Z,KAAK2Z,UAAYpD,IAAaA,EAASqD,SAAWrD,EAAWyC,EAAeW,WAC5E3Z,KAAK6Z,YACDtD,IAAaA,EAASqD,SAAWZ,EAAiBA,EAAea,aACrE7Z,KAAK8Z,gBACDvD,IAAaA,EAASqD,SAAW5Z,KAAKmY,MAAQa,EAAec,iBACjE9Z,KAAK+Z,eACDxD,IAAaA,EAASyD,cAAgBzD,EAAWyC,EAAee,gBACpE/Z,KAAKia,iBACD1D,IAAaA,EAASyD,cAAgBhB,EAAiBA,EAAeiB,kBAC1Eja,KAAKka,qBACD3D,IAAaA,EAASyD,cAAgBha,KAAKmY,MAAQa,EAAekB,sBACtEla,KAAKma,gBACD5D,IAAaA,EAASsC,eAAiBtC,EAAWyC,EAAemB,iBACrEna,KAAKoa,kBACD7D,IAAaA,EAASsC,eAAiBG,EAAiBA,EAAeoB,mBAC3Epa,KAAKqa,sBACD9D,IAAaA,EAASsC,eAAiB7Y,KAAKmY,MAAQa,EAAeqB,uBACvEra,KAAKsa,cACD/D,IAAaA,EAASuC,aAAevC,EAAWyC,EAAesB,eACnEta,KAAKua,gBACDhE,IAAaA,EAASuC,aAAeE,EAAiBA,EAAeuB,iBACzEva,KAAKwa,oBACDjE,IAAaA,EAASuC,aAAe9Y,KAAKmY,MAAQa,EAAewB,qBACrExa,KAAKya,cACDlE,IAAaA,EAASwC,aAAexC,EAAWyC,EAAeyB,eACnEza,KAAK0a,gBACDnE,IAAaA,EAASwC,aAAeC,EAAiBA,EAAe0B,iBACzE1a,KAAK2a,oBACDpE,IAAaA,EAASwC,aAAe/Y,KAAKmY,MAAQa,EAAe2B,qBACrE3a,KAAK4a,WAAa,KAClB5a,KAAK6a,aAAe,KACpB7a,KAAK8a,kBAAoB,KACzB9a,KAAK+a,iBAAmB,KACxB,MAAMC,EAAkBzE,GAAYA,EAASkC,UACvCwC,EAAgBjC,GAAkBA,EAAe4B,YACnDI,GAAmBC,KAGnBjb,KAAK4a,WAAaI,EAAkBzE,EAAWiC,EAC/CxY,KAAK6a,aAAe7B,EACpBhZ,KAAK8a,kBAAoB9a,KACzBA,KAAK+a,iBAAmB/a,KAAKmY,MACxB5B,EAASsC,iBACV7Y,KAAKma,gBAAkB3B,EACvBxY,KAAKoa,kBAAoBpB,EACzBhZ,KAAKqa,sBAAwBra,KAAKmY,OAEjC5B,EAASuC,eACV9Y,KAAKsa,cAAgB9B,EACrBxY,KAAKua,gBAAkBvB,EACvBhZ,KAAKwa,oBAAsBxa,KAAKmY,OAE/B5B,EAASwC,eACV/Y,KAAKya,cAAgBjC,EACrBxY,KAAK0a,gBAAkB1B,EACvBhZ,KAAK2a,oBAAsB3a,KAAKmY,OAG5C,CACAtB,KAAKqE,EAAY3E,GACb,OAAOvW,KAAKmZ,QACNnZ,KAAKmZ,QAAQC,OAAOpZ,KAAKqZ,UAAWrZ,KAAK6J,KAAMqR,EAAY3E,GAC3D,IAAIZ,EAASuF,EAAY3E,EACnC,CACAQ,UAAUmE,EAAY1d,EAAUC,GAC5B,OAAOuC,KAAKuZ,aACNvZ,KAAKuZ,aAAaC,YAAYxZ,KAAKyZ,eAAgBzZ,KAAK0Z,mBAAoBwB,EAAY1d,EAAUC,GAClGD,CACV,CACAiG,OAAOyX,EAAY1d,EAAUwZ,EAAWC,EAAWxZ,GAC/C,OAAOuC,KAAK2Z,UACN3Z,KAAK2Z,UAAUC,SAAS5Z,KAAK6Z,YAAa7Z,KAAK8Z,gBAAiBoB,EAAY1d,EAAUwZ,EAAWC,EAAWxZ,GAC5GD,EAASmD,MAAMqW,EAAWC,EACpC,CACAC,YAAYgE,EAAYza,GACpB,OAAOT,KAAK+Z,gBACN/Z,KAAK+Z,eAAeC,cAAcha,KAAKia,iBAAkBja,KAAKka,qBAAsBgB,EAAYza,EAE1G,CACA6C,aAAa4X,EAAY3X,GACrB,IAAI4X,EAAa5X,EACjB,GAAIvD,KAAKma,gBACDna,KAAK4a,YACLO,EAAWlD,eAAehW,KAAKjC,KAAK8a,mBAExCK,EAAanb,KAAKma,gBAAgBtB,eAAe7Y,KAAKoa,kBAAmBpa,KAAKqa,sBAAuBa,EAAY3X,GAC5G4X,IACDA,EAAa5X,WAGbA,EAAK6X,WACL7X,EAAK6X,WAAW7X,OAAI,IAEfA,EAAKzD,MAAQuY,EAIlB,MAAM,IAAI7V,MAAM,+BAHhB0O,EAAkB3N,EAG2B,CAGrD,OAAO4X,CACX,CACA9U,WAAW6U,EAAY3X,EAAMyT,EAAWC,GACpC,OAAOjX,KAAKsa,cACNta,KAAKsa,cAAcxB,aAAa9Y,KAAKua,gBAAiBva,KAAKwa,oBAAqBU,EAAY3X,EAAMyT,EAAWC,GAC7G1T,EAAK/F,SAASmD,MAAMqW,EAAWC,EACzC,CACA9M,WAAW+Q,EAAY3X,GACnB,IAAIjC,EACJ,GAAItB,KAAKya,cACLnZ,EAAQtB,KAAKya,cAAc1B,aAAa/Y,KAAK0a,gBAAiB1a,KAAK2a,oBAAqBO,EAAY3X,OAEnG,CACD,IAAKA,EAAKoJ,SACN,MAAMnK,MAAM,0BAEhBlB,EAAQiC,EAAKoJ,SAASpJ,EAC1B,CACA,OAAOjC,CACX,CACAsX,QAAQsC,EAAYG,GAGhB,IACIrb,KAAK4a,YACD5a,KAAK4a,WAAWnC,UAAUzY,KAAK6a,aAAc7a,KAAK+a,iBAAkBG,EAAYG,EACxF,OACO5U,GACHzG,KAAKkX,YAAYgE,EAAYzU,EACjC,CACJ,CAEA+F,iBAAiB1M,EAAMyS,GACnB,MAAM+I,EAAStb,KAAKiZ,YACdsC,EAAOD,EAAOxb,GACd0b,EAAQF,EAAOxb,GAAQyb,EAAOhJ,EACpC,GAAIiJ,EAAO,EACP,MAAM,IAAIhZ,MAAM,4CAEpB,GAAY,GAAR+Y,GAAqB,GAARC,EAAW,CACxB,MAAMH,EAAU,CACZhD,UAAWiD,EAAOjD,UAAe,EACjCb,UAAW8D,EAAO9D,UAAe,EACjCD,UAAW+D,EAAO/D,UAAe,EACjCkE,OAAQ3b,GAEZE,KAAK4Y,QAAQ5Y,KAAKmY,MAAOkD,EAC7B,CACJ,EAEJ,MAAMjD,EACFrO,YAAYjK,EAAMrC,EAAQD,EAAU+G,EAAS6W,EAAYzO,GAarD,GAXA3M,KAAKmY,MAAQ,KACbnY,KAAKuY,SAAW,EAEhBvY,KAAKiY,eAAiB,KAEtBjY,KAAKuM,OAAS,eACdvM,KAAKF,KAAOA,EACZE,KAAKvC,OAASA,EACduC,KAAKlC,KAAOyG,EACZvE,KAAKob,WAAaA,EAClBpb,KAAK2M,SAAWA,GACXnP,EACD,MAAM,IAAIgF,MAAM,2BAEpBxC,KAAKxC,SAAWA,EAChB,MAAM0B,GAAOc,KAETF,IAASyX,GAAahT,GAAWA,EAAQE,KACzCzE,KAAKyD,OAAS2U,EAAS/R,WAGvBrG,KAAKyD,OAAS,WACV,OAAO2U,EAAS/R,WAAWjG,KAAKtE,EAAQoD,GAAMc,KAAMY,UACxD,CAER,CACA,iBAAOyF,CAAW9C,EAAMxD,EAAQvB,GACvB+E,IACDA,EAAOvD,MAEX0b,KACA,IACInY,SAAKgV,WACEhV,EAAKsG,KAAKsN,QAAQ5T,EAAMxD,EAAQvB,EAC3C,SAEqC,GAA7Bkd,IACAC,KAEJD,IACJ,CACJ,CACA,QAAI7R,GACA,OAAO7J,KAAKmY,KAChB,CACA,SAAI7L,GACA,OAAOtM,KAAKuM,MAChB,CACAqP,wBACI5b,KAAK2X,cAAcL,EAAcS,EACrC,CAEAJ,cAAckE,EAASC,EAAYC,GAC/B,GAAI/b,KAAKuM,SAAWuP,GAAc9b,KAAKuM,SAAWwP,EAO9C,MAAM,IAAIvZ,MAAM,GAAGxC,KAAKF,SAASE,KAAKvC,mCAAmCoe,wBAA8BC,KAAcC,EAAa,QAAUA,EAAa,IAAM,YAAY/b,KAAKuM,YANhLvM,KAAKuM,OAASsP,EACVA,GAAWvE,IACXtX,KAAKiY,eAAiB,KAMlC,CACA5Y,WACI,OAAIW,KAAKlC,aAAekC,KAAKlC,KAAK+N,SAAa,IACpC7L,KAAKlC,KAAK+N,SAASxM,WAGnBjD,OAAOU,UAAUuC,SAASe,KAAKJ,KAE9C,CAGAgc,SACI,MAAO,CACHlc,KAAME,KAAKF,KACXwM,MAAOtM,KAAKsM,MACZ7O,OAAQuC,KAAKvC,OACboM,KAAM7J,KAAK6J,KAAK5N,KAChBsc,SAAUvY,KAAKuY,SAEvB,EAOJ,MAAM0D,EAAmBjgB,EAAW,cAC9BkS,EAAgBlS,EAAW,WAC3BmS,EAAanS,EAAW,QAC9B,IAEIkgB,EAFAC,EAAkB,GAClBC,GAA4B,EAEhC,SAASnV,EAAwBoV,GAM7B,GALKH,GACGpgB,EAAOoS,KACPgO,EAA8BpgB,EAAOoS,GAAe2D,QAAQ,IAGhEqK,EAA6B,CAC7B,IAAII,EAAaJ,EAA4B/N,GACxCmO,IAGDA,EAAaJ,EAA4B/M,MAE7CmN,EAAWlc,KAAK8b,EAA6BG,EACjD,MAEIvgB,EAAOmgB,GAAkBI,EAAM,EAEvC,CACA,SAASnL,EAAkB3N,GAGW,IAA9BmY,IAA8D,IAA3BS,EAAgBzd,QAEnDuI,EAAwB0U,IAE5BpY,GAAQ4Y,EAAgBla,KAAKsB,EACjC,CACA,SAASoY,KACL,IAAKS,EAA2B,CAE5B,IADAA,GAA4B,EACrBD,EAAgBzd,QAAQ,CAC3B,MAAMiS,EAAQwL,EACdA,EAAkB,GAClB,QAAS1d,EAAI,EAAGA,EAAIkS,EAAMjS,OAAQD,IAAK,CACnC,MAAM8E,EAAOoN,EAAMlS,GACnB,IACI8E,EAAKsG,KAAKsN,QAAQ5T,EAAM,KAAM,KAClC,OACO9C,GACH2V,EAAKhI,iBAAiB3N,EAC1B,CACJ,CACJ,CACA2V,EAAK1H,qBACL0N,GAA4B,CAChC,CACJ,CAMA,MAAMhF,EAAU,CAAEnb,KAAM,WAClBqb,EAAe,eAAgBS,EAAa,aAAcH,EAAY,YAAaF,EAAU,UAAWY,EAAY,YAAaR,EAAU,UAC3IO,EAAY,YAAab,EAAY,YAAaD,EAAY,YAC9D1B,EAAU,CAAC,EACXO,EAAO,CACTjR,OAAQnJ,EACRugB,iBAAkBA,IAAMvG,EACxB5H,iBAAkBuD,EAClBjD,mBAAoBiD,EACpBT,kBAAmBA,EACnB5C,kBAAmBA,KAAOqH,EAAS3Z,EAAW,oCAC9CqJ,iBAAkBA,IAAM,GACxBvD,kBAAmB6P,EACnB/O,YAAaA,IAAM+O,EACnBpT,cAAeA,IAAM,GACrB4V,UAAWA,IAAMxC,EACjBzO,eAAgBA,IAAMyO,EACtBxG,oBAAqBA,IAAMwG,EAC3B5N,WAAYA,KAAM,EAClByY,iBAAkBA,OAClBlgB,qBAAsBA,IAAMqV,EAC5BxV,+BAAgCA,OAChCO,aAAcA,OACdE,WAAYA,IAAM,GAClBwF,WAAYA,IAAMuP,EAClBpU,oBAAqBA,IAAMoU,EAC3B/E,iBAAkBA,IAAM,GACxBnK,sBAAuBA,IAAMkP,EAC7BsD,kBAAmBA,IAAMtD,EACzB8C,eAAgBA,IAAM9C,EACtB1K,wBAAyBA,GAE7B,IAAI+O,EAAoB,CAAED,OAAQ,KAAMlM,KAAM,IAAI8L,EAAS,KAAM,OAC7DM,EAAe,KACfyF,GAA4B,EAChC,SAAS/J,IAAS,CAClB6D,SAAmB,OAAQ,QACpBG,CACX,CAkBuBN,IACZvZ,EAAO4B,IAClB,CAmwEeyX,IANf,SAASsH,GAAY/e,GACjBoQ,GAAapQ,GAnJjB,SAASgf,GAAchf,GAGnBA,EAAKqQ,aAAa,WAAajS,IAE3B,MAAM6gB,EAA2BC,SAAS9f,UAAUuC,SAC9Cwd,EAA2B3e,EAAW,oBACtC4e,EAAiB5e,EAAW,WAC5B6e,EAAe7e,EAAW,SAC1B8e,EAAsB,WACxB,GAAoB,mBAAThd,KAAqB,CAC5B,MAAMwG,EAAmBxG,KAAK6c,GAC9B,GAAIrW,EACA,MAAgC,mBAArBA,EACAmW,EAAyBvc,KAAKoG,GAG9BpK,OAAOU,UAAUuC,SAASe,KAAKoG,GAG9C,GAAIxG,OAASqS,QAAS,CAClB,MAAM4K,EAAgBnhB,EAAOghB,GAC7B,GAAIG,EACA,OAAON,EAAyBvc,KAAK6c,EAE7C,CACA,GAAIjd,OAASwC,MAAO,CAChB,MAAM0a,EAAcphB,EAAOihB,GAC3B,GAAIG,EACA,OAAOP,EAAyBvc,KAAK8c,EAE7C,CACJ,CACA,OAAOP,EAAyBvc,KAAKJ,KACzC,EACAgd,EAAoBH,GAA4BF,EAChDC,SAAS9f,UAAUuC,SAAW2d,EAE9B,MAAMG,EAAyB/gB,OAAOU,UAAUuC,SAEhDjD,OAAOU,UAAUuC,SAAW,WACxB,MAAuB,mBAAZgT,SAA0BrS,gBAAgBqS,QAFxB,mBAKtB8K,EAAuB/c,KAAKJ,KACvC,GAER,CAqGI0c,CAAchf,GAtDlB,SAAS0f,GAAU1f,GACfA,EAAKqQ,aAAa,OAAQ,CAACjS,EAAQ4B,EAAM4H,KAGrC,MAAM+X,EAAajQ,GAAgBtR,GACnCwJ,EAAIxD,kBAAoBA,GACxBwD,EAAI1C,YAAcA,GAClB0C,EAAI/G,cAAgBA,GACpB+G,EAAIpC,eAAiBA,GAMrB,MAAMoa,EAA6B5f,EAAK1B,WAAW,uBAC7CuhB,EAA0B7f,EAAK1B,WAAW,oBAC5CF,EAAOyhB,KACPzhB,EAAOwhB,GAA8BxhB,EAAOyhB,IAE5CzhB,EAAOwhB,KACP5f,EAAK4f,GAA8B5f,EAAK6f,GACpCzhB,EAAOwhB,IAEfhY,EAAI6F,oBAAsBA,GAC1B7F,EAAID,iBAAmBA,GACvBC,EAAIvB,WAAaA,GACjBuB,EAAIhJ,qBAAuBA,GAC3BgJ,EAAInJ,+BAAiCA,GACrCmJ,EAAI5I,aAAeA,GACnB4I,EAAI1I,WAAaA,GACjB0I,EAAIlD,WAAaA,GACjBkD,EAAI/H,oBAAsBA,GAC1B+H,EAAIsH,iBAAmBA,GACvBtH,EAAI7C,sBAAwBA,GAC5B6C,EAAI2P,kBAAoB7Y,OAAOG,eAC/B+I,EAAImP,eAAiBA,GACrBnP,EAAIkX,iBAAmB,MACnB7X,iBACAD,wBACA2Y,aACA/d,aACAE,SACAL,UACA/B,YACAC,aACAC,sBACAN,0BACAC,8BACJ,EAER,CAKImgB,CAAU1f,EACd,EAGA+e,CAAYvH,IA75BZ,SAASsI,GAAa9f,GAClBA,EAAKqQ,aAAa,SAAWjS,IACzB,MAAM2hB,EAAc3hB,EAAO4B,EAAK1B,WAAW,gBACvCyhB,GACAA,GAAY,GAGpB/f,EAAKqQ,aAAa,SAAWjS,IACzB,MAAMiD,EAAM,MACN2e,EAAQ,QACdpS,GAAWxP,EAAQiD,EAAK2e,EAAO,WAC/BpS,GAAWxP,EAAQiD,EAAK2e,EAAO,YAC/BpS,GAAWxP,EAAQiD,EAAK2e,EAAO,YAAW,GAE9ChgB,EAAKqQ,aAAa,wBAA0BjS,IACxCwP,GAAWxP,EAAQ,UAAW,SAAU,kBACxCwP,GAAWxP,EAAQ,aAAc,YAAa,kBAC9CwP,GAAWxP,EAAQ,gBAAiB,eAAgB,iBAAgB,GAExE4B,EAAKqQ,aAAa,WAAY,CAACjS,EAAQ4B,KACnC,MAAMigB,EAAkB,CAAC,QAAS,SAAU,WAC5C,QAASlf,EAAI,EAAGA,EAAIkf,EAAgBjf,OAAQD,IAAK,CAC7C,MAAMxC,EAAO0hB,EAAgBlf,GAC7BmE,GAAY9G,EAAQG,EAAM,CAAC+G,EAAUmC,EAAQlJ,IAClC,SAAU2hB,EAAGpf,GAChB,OAAOd,EAAKC,QAAQ+T,IAAI1O,EAAUlH,EAAQ0C,EAAMvC,EACpD,EAER,IAEJyB,EAAKqQ,aAAa,cAAe,CAACjS,EAAQ4B,EAAM4H,MA3HpD,SAASuY,GAAW/hB,EAAQwJ,GACxBA,EAAI6F,oBAAoBrP,EAAQwJ,EACpC,EA0HQuY,CAAW/hB,EAAQwJ,GApJ3B,SAASwY,GAAiBxf,EAASgH,GAC/B,GAAI5H,KAAK4H,EAAIH,OAAO,qBAEhB,OAEJ,MAAQkY,aAAY3Y,uBAAsBtH,WAAUC,YAAWC,sBAAuBgI,EAAIkX,mBAE1F,QAAS/d,EAAI,EAAGA,EAAI4e,EAAW3e,OAAQD,IAAK,CACxC,MAAMgD,EAAY4b,EAAW5e,GAGvB0G,EAAS7H,GAFQmE,EAAYpE,GAG7B+H,EAAgB9H,GAFAmE,EAAYrE,GAGlCsH,EAAqBjD,GAAa,CAAC,EACnCiD,EAAqBjD,GAAWpE,GAAa8H,EAC7CT,EAAqBjD,GAAWrE,GAAYgI,CAChD,CACA,MAAM2Y,EAAezf,EAAQ0f,YAC7B,OAAKD,GAAiBA,EAAajhB,WAGnCwI,EAAID,iBAAiB/G,EAASgH,EAAK,CAACyY,GAAgBA,EAAajhB,aAC1D,QAJP,CAKJ,CA8HQghB,CAAiBhiB,EAAQwJ,GAEzB,MAAM2Y,EAA4BniB,EAAOmiB,0BACrCA,GAA6BA,EAA0BnhB,WACvDwI,EAAID,iBAAiBvJ,EAAQwJ,EAAK,CAAC2Y,EAA0BnhB,WAAU,GAG/EY,EAAKqQ,aAAa,mBAAoB,CAACjS,EAAQ4B,EAAM4H,KACjDlD,GAAW,oBACXA,GAAW,yBAAwB,GAEvC1E,EAAKqQ,aAAa,uBAAwB,CAACjS,EAAQ4B,EAAM4H,KACrDlD,GAAW,uBAAsB,GAErC1E,EAAKqQ,aAAa,aAAc,CAACjS,EAAQ4B,EAAM4H,KAC3ClD,GAAW,aAAY,GAE3B1E,EAAKqQ,aAAa,cAAe,CAACjS,EAAQ4B,EAAM4H,KAC5CmI,GAAwBnI,EAAKxJ,EAAM,GAEvC4B,EAAKqQ,aAAa,iBAAkB,CAACjS,EAAQ4B,EAAM4H,MA5LvD,SAAS4Y,GAAoB5f,EAASgH,GAClC,MAAQhG,YAAWE,SAAU8F,EAAIkX,mBACjC,IAAMld,IAAcE,IAAWlB,EAAQ6f,kBAAuB,mBAAoB7f,GAC9E,OAaJgH,EAAImP,eAAenP,EAAKhH,EAAQ6f,eAAgB,iBAAkB,SAVhD,CACd,oBACA,uBACA,kBACA,2BACA,yBACA,uBACA,oBACA,4BAGR,CA4KQD,CAAoBpiB,EAAQwJ,EAAG,GAEnC5H,EAAKqQ,aAAa,MAAO,CAACjS,EAAQ4B,MAS9B,SAAS0gB,EAASxiB,GACd,MAAMyiB,EAAiBziB,EAAOyiB,eAC9B,IAAKA,EAED,OAEJ,MAAMC,EAA0BD,EAAevhB,UAI/C,IAAIyhB,EAAiBD,EAAwBphB,IACzCshB,EAAoBF,EAAwBnhB,IAChD,IAAKohB,EAAgB,CACjB,MAAMN,EAA4BriB,EAAOqiB,0BACzC,GAAIA,EAA2B,CAC3B,MAAMQ,EAAqCR,EAA0BnhB,UACrEyhB,EAAiBE,EAAmCvhB,IACpDshB,EAAoBC,EAAmCthB,GAC3D,CACJ,CACA,MAAMuhB,GAAqB,mBACrBC,EAAY,YAClB,SAASrb,EAAaC,GAClB,MAAMzF,EAAOyF,EAAKzF,KACZiC,EAASjC,EAAKiC,OACpBA,EAAO6e,IAAiB,EACxB7e,EAAO8e,IAA8B,EAErC,MAAM5e,EAAWF,EAAO+e,GACnBP,IACDA,EAAiBxe,EAAO7C,IACxBshB,EAAoBze,EAAO5C,KAE3B8C,GACAue,EAAkBpe,KAAKL,EAAQ2e,GAAoBze,GAEvD,MAAM8e,GAAehf,EAAO+e,GAAgB,KACxC,GAAI/e,EAAOif,aAAejf,EAAOkf,KAG7B,IAAKnhB,EAAK8L,SAAW7J,EAAO6e,IAAkBrb,EAAK+I,QAAUqS,EAAW,CAQpE,MAAMO,EAAYnf,EAAOrC,EAAK1B,WAAW,cACzC,GAAsB,IAAlB+D,EAAOiT,QAAgBkM,GAAaA,EAAUxgB,OAAS,EAAG,CAC1D,MAAMygB,EAAY5b,EAAKE,OACvBF,EAAKE,OAAS,WAGV,MAAMyb,EAAYnf,EAAOrC,EAAK1B,WAAW,cACzC,QAASyC,EAAI,EAAGA,EAAIygB,EAAUxgB,OAAQD,IAC9BygB,EAAUzgB,KAAO8E,GACjB2b,EAAU1W,OAAO/J,EAAG,IAGvBX,EAAK8L,SAAWrG,EAAK+I,QAAUqS,GAChCQ,EAAU/e,KAAKmD,EAEvB,EACA2b,EAAUjd,KAAKsB,EACnB,MAEIA,EAAKE,QAEb,MACU3F,EAAK8L,UAAqC,IAA1B7J,EAAO6e,KAE7B7e,EAAO8e,IAA8B,IAIjDN,SAAene,KAAKL,EAAQ2e,GAAoBK,IAC7Bhf,EAAOqf,KAEtBrf,EAAOqf,GAAY7b,GAEvB8b,EAAW1e,MAAMZ,EAAQjC,EAAKU,MAC9BuB,EAAO6e,IAAiB,EACjBrb,CACX,CACA,SAAS+b,IAAwB,CACjC,SAASrT,EAAU1I,GACf,MAAMzF,EAAOyF,EAAKzF,KAGlBA,SAAK8L,SAAU,EACR2V,EAAY5e,MAAM7C,EAAKiC,OAAQjC,EAAKU,KAC/C,CACA,MAAMghB,EAAa5c,GAAY0b,EAAyB,OAAQ,IAAM,SAAUpf,EAAMV,GAClFU,SAAKugB,GAAuB,GAAXjhB,EAAK,GACtBU,EAAKwgB,GAAWlhB,EAAK,GACdghB,EAAW7e,MAAMzB,EAAMV,EAClC,GAEMmhB,EAAoBzhB,EAAW,qBAC/B0hB,EAAsB1hB,EAAW,uBACjCmhB,EAAazc,GAAY0b,EAAyB,OAAQ,IAAM,SAAUpf,EAAMV,GAOlF,IAN0C,IAAtCd,EAAKC,QAAQiiB,IAMb1gB,EAAKugB,GAEL,OAAOJ,EAAW1e,MAAMzB,EAAMV,GAE7B,CACD,MAAM+F,EAAU,CACZxE,OAAQb,EACR2gB,IAAK3gB,EAAKwgB,GACVvT,YAAY,EACZ3N,KAAMA,EACNoL,SAAS,GAEPrG,EAAO1F,GAtBS,sBAsB+CyhB,EAAqB/a,EAASjB,EAAc2I,GAC7G/M,IACqC,IAArCA,EAAK2f,KACJta,EAAQqF,SACTrG,EAAK+I,QAAUqS,GAIfpb,EAAKE,QAEb,CACJ,GACM8b,EAAc3c,GAAY0b,EAAyB,QAAS,IAAM,SAAUpf,EAAMV,GACpF,MAAM+E,EA9HV,SAASuc,EAAgB/f,GACrB,OAAOA,EAAOqf,EAClB,CA4HiBU,CAAgB5gB,GAC7B,GAAIqE,GAA4B,iBAAbA,EAAKzD,KAAkB,CAKtC,GAAqB,MAAjByD,EAAKoJ,UAAqBpJ,EAAKzF,MAAQyF,EAAKzF,KAAK8L,QACjD,OAEJrG,EAAKsG,KAAKM,WAAW5G,EACzB,UAC6C,IAApC7F,EAAKC,QAAQgiB,GAElB,OAAOJ,EAAY5e,MAAMzB,EAAMV,EAKvC,EACJ,CA/JA4f,CAAStiB,GACT,MAAMsjB,EAAWlhB,EAAW,WACtBuhB,EAAWvhB,EAAW,WACtB4gB,EAAe5gB,EAAW,eAC1B0gB,EAAgB1gB,EAAW,gBAC3BwhB,EAAUxhB,EAAW,UACrB2gB,EAA6B3gB,EAAW,0BAyJ9C,GAEJR,EAAKqQ,aAAa,cAAgBjS,IAE1BA,EAAOmI,WAAgBnI,EAAOmI,UAAa8b,aAhhDvD,SAASC,GAAeljB,EAAWmjB,GAC/B,MAAMxiB,EAASX,EAAUiN,YAAY9N,KACrC,QAASwC,EAAI,EAAGA,EAAIwhB,EAAQvhB,OAAQD,IAAK,CACrC,MAAMxC,EAAOgkB,EAAQxhB,GACfuE,EAAWlG,EAAUb,GAC3B,GAAI+G,EAAU,CAEV,IAAKrE,GADiBxC,GAA+BW,EAAWb,IAE5D,SAEJa,EAAUb,GAAI,CAAM+G,IAChB,MAAMW,EAAU,WACZ,OAAOX,EAASrC,MAAMX,KAAMzB,GAAcqC,UAAWnD,EAAS,IAAMxB,GACxE,EACAwG,UAAsBkB,EAASX,GACxBW,CACX,EANc,CAMXX,EACP,CACJ,CACJ,CA8/CYgd,CAAelkB,EAAOmI,UAAa8b,YAAa,CAAC,qBAAsB,iBAAgB,GAG/FriB,EAAKqQ,aAAa,wBAAyB,CAACjS,EAAQ4B,KAEhD,SAASwiB,EAA4BrV,GACjC,OAAO,SAAUwD,GACM/D,GAAexO,EAAQ+O,GAC/BkK,QAASwC,IAGhB,MAAM4I,EAAwBrkB,EAAOqkB,sBACrC,GAAIA,EAAuB,CACvB,MAAMC,EAAM,IAAID,EAAsBtV,EAAS,CAC3CoF,QAAS5B,EAAE4B,QACXiD,OAAQ7E,EAAEE,YAEdgJ,EAAU9T,OAAO2c,EACrB,GAER,CACJ,CACItkB,EAAOqkB,wBACPziB,EAAKQ,EAAW,qCACZgiB,EAA4B,sBAChCxiB,EAAKQ,EAAW,4BACZgiB,EAA4B,oBAAkB,GAG1DxiB,EAAKqQ,aAAa,iBAAkB,CAACjS,EAAQ4B,EAAM4H,MAphBvD,SAAS+a,GAAoBvkB,EAAQwJ,GACjCA,EAAI1C,YAAY9G,EAAQ,iBAAmBkH,GAChC,SAAU9D,EAAMV,GACnBd,KAAKC,QAAQuT,kBAAkB,iBAAkB1S,EAAK,GAC1D,EAER,CA+gBQ6hB,CAAoBvkB,EAAQwJ,EAAG,EAEvC,CAiqBAkY,CAAatI","names":["window","__Zone_disable_customElements","global","globalThis","__symbol__","name","__Zone_symbol_prefix","ObjectGetOwnPropertyDescriptor","Object","getOwnPropertyDescriptor","ObjectDefineProperty","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","ObjectCreate","create","ArraySlice","Array","prototype","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","callback","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","data","customSchedule","customCancel","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","undefined","_global","bindArguments","args","i","length","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","self","isNode","process","toString","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","event","eventNameSymbol","type","target","this","listener","result","errorEvent","call","message","filename","lineno","colno","error","preventDefault","apply","arguments","returnValue","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","hasOwnProperty","value","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","patchOnProperties","properties","onProperties","push","j","originalInstanceKey","patchClass","className","OriginalClass","a","Error","attachOriginToPatched","instance","fn","patchMethod","patchFn","proto","delegateName","delegate","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","task","cbIdx","invoke","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","navigator","userAgent","indexOf","isFunction","isNumber","passiveSupported","options","OPTIMIZED_ZONE_EVENT_TASK_DATA","useG","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","isRemoved","handleEvent","originalDelegate","err","once","globalCallback","context","isCapture","tasks","errors","copyTasks","nativeScheduleMicroTask","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","splice","removeAbortListener","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","copyEventListenerOptions","newOptions","signal","buildEventListenerOptions","aborted","zone","constructorName","constructor","targetSource","scheduleEventTask","onAbort","cancelTask","unshift","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","patchEventPrototype","Event","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","handleId","handle","isRefreshable","refresh","clearTask","_ref","isPeriodic","delay","originalRefresh","state","_state","_updateTaskCount","_task","id","cancelFn","filterProperties","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchPromise","__load_patch","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","symbolPromise","symbolThen","onUnhandledError","e","showUncaughtError","rejection","console","stack","microtaskDrainDone","uncaughtPromiseError","shift","runGuarded","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","queue","trace","currentTask","scheduleResolveOrReject","readableObjectToString","JSON","stringify","scheduleMicroTask","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","noop","AggregateError","resolve","withResolvers","res","rej","any","values","Symbol","iterator","Promise","promises","count","finished","race","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_this$constructor","C","catch","finally","onFinally","_this$constructor2","NativePromise","symbolThenPatched","patchThen","Ctor","originalThen","zoneify","resultPromise","ctor","patchCallbacks","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","_redefineProperty","Zone$1","loadZone","_global$_Zone","initZone","performance","mark","performanceMeasure","label","measure","ZoneImpl","assertZonePatched","patches","root","parent","_currentZoneFrame","_currentTask","ignoreDuplicate","perfName","_api","_parent","_name","zoneSpec","_properties","_zoneDelegate","_ZoneDelegate","key","getZoneWith","fork","_callback","intercept","applyThis","applyArgs","handleError","runTask","NO_ZONE","zoneTask","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","scheduling","zoneDelegates","_zoneDelegates","newZone","_zone","ZoneTask","microTask","canceling","runCount","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","next","change","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","symbolSetTimeout","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","func","nativeThen","currentZoneFrame","getGlobalObjects","patchCommon","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchUtil","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchBrowser","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/zone-flags.ts","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * Prevents Angular change detection from\n * running with certain Web Component callbacks\n */\n// eslint-disable-next-line no-underscore-dangle\n(window as any).__Zone_disable_customElements = true;\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// Note that passive event listeners are now supported by most modern browsers,\n// including Chrome, Firefox, Safari, and Edge. There's a pending change that\n// would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n// from the codebase will reduce the final code size for existing apps that still use zone.js.\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n"],"x_google_ignoreList":[1]}